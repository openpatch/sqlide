{"version":3,"file":"sql-ide-embedded.js","sources":["../src/client/compiler/lexer/Token.ts","../src/client/compiler/lexer/Lexer.ts","../src/client/main/gui/Formatter.ts","../src/client/main/gui/ThemeManager.ts","../src/client/compiler/parser/SQLTypes.ts","../src/client/compiler/parser/Parser.ts","../src/client/compiler/parser/SQLTable.ts","../src/client/compiler/parser/SymbolTable.ts","../src/client/compiler/parser/SQLMethods.ts","../src/client/tools/StringTools.ts","../src/client/compiler/parser/SymbolResolver.ts","../src/client/compiler/Compiler.ts","../src/client/compiler/parser/Module.ts","../src/client/main/gui/ActionManager.ts","../src/client/tools/HtmlTools.ts","../src/client/communication/AjaxHelper.ts","../src/client/workspace/WDatabase.ts","../src/client/communication/CacheManager.ts","../src/client/tools/TemplateUploader.ts","../src/client/tools/FileTool.ts","../src/client/communication/pushclient/PushClientStrategy.ts","../src/client/communication/pushclient/PushClientLongPollingStrategy.ts","../src/client/communication/pushclient/PushClientWebsocketStrategy.ts","../src/client/communication/pushclient/BasePushClientManager.ts","../src/client/communication/pushclient/PushClientManager.ts","../src/client/communication/NetworkManager.ts","../src/client/main/gui/DatabaseSettingsDialog.ts","../src/client/workspace/Workspace.ts","../src/client/main/gui/MyCompletionItemProvider.ts","../src/client/main/gui/MySignatureHelpProvider.ts","../src/client/main/gui/MyHoverProvider.ts","../src/client/main/gui/MyCodeActionProvider.ts","../src/client/main/gui/MyReferenceProvider.ts","../src/client/main/gui/VSCSql.ts","../src/client/main/gui/Helper.ts","../src/client/main/gui/Editor.ts","../src/client/sqljs-worker/sqljsWorkerTools.ts","../src/client/sqljs-worker/sqljsWorkerSim.ts","../src/client/tools/DatabaseTools.ts","../src/client/compiler/parser/StatementCleaner.ts","../src/client/tools/MySqlImporter.ts","../src/client/tools/DatabaseImportExport.ts","../src/client/main/gui/NewDatabaseDialog.ts","../src/client/main/gui/MainMenu.ts","../src/client/main/gui/Accordion.ts","../src/client/main/gui/DistributeToStudentsDialog.ts","../src/client/main/gui/ProjectExplorer.ts","../src/client/main/gui/RightDiv.ts","../src/client/main/gui/Sliders.ts","../src/client/main/gui/TeacherExplorer.ts","../src/client/main/gui/Dialog.ts","../src/client/main/gui/UserMenu.ts","../src/client/main/Login.ts","../src/client/main/gui/ViewModeController.ts","../src/client/compiler/parser/SemicolonAngel.ts","../src/client/main/gui/DatabaseExplorer.ts","../src/client/main/gui/ProgramControlButtons.ts","../src/client/main/gui/ResultsetPresenter.ts","../src/client/main/gui/WaitOverlay.ts","../src/client/main/gui/HistoryViewer.ts","../src/client/communication/NewNotifier.ts","../src/client/main/Main.ts","../src/client/main/gui/ErrorManager.ts","../src/client/main/gui/HomeworkManager.ts","../src/client/main/gui/BottomDiv.ts","../src/client/embedded/EmbeddedSlider.ts","../src/client/embedded/EmbeddedFileExplorer.ts","../src/client/embedded/EmbeddedIndexedDB.ts","../src/client/embedded/WriteQueryManager.ts","../src/client/tools/DatabaseLoader.ts","../src/client/embedded/MainEmbedded.ts","../src/client/embedded/EmbeddedStarter.ts"],"sourcesContent":["export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordRename,\r\n    keywordDistinct,\r\n    keywordTo,\r\n    keywordAlter,\r\n    keywordCommit,\r\n    keywordAdd,\r\n    keywordDelete,\r\n    keywordSelect,\r\n    keywordInsert,\r\n    keywordInto,\r\n    keywordValues,\r\n    keywordUpdate,\r\n    keywordSet,\r\n    keywordNo,\r\n    keywordUse,\r\n    keywordCreate,\r\n    keywordReferences,\r\n    keywordPrimary,\r\n    keywordForeign,\r\n    keywordTable,\r\n    keywordSchema,\r\n    keywordTables,\r\n    keywordColumn,\r\n    keywordDrop,\r\n    keywordUnique,\r\n    keywordKey,\r\n    keywordIndex,\r\n    keywordConstraint,\r\n    keywordModify,\r\n    keywordCascade,\r\n    keywordRestrict,\r\n    keywordAction,\r\n    keywordAutoincrement,\r\n    keywordFrom,\r\n    keywordWhere,\r\n    keywordGroup,\r\n    keywordBy,\r\n    keywordHaving,\r\n    keywordOrder,\r\n    keywordAscending,\r\n    keywordDescending,\r\n    keywordNulls,\r\n    keywordFirst,\r\n    keywordLast,\r\n    keywordIs,\r\n    keywordNull,\r\n    keywordDatabase,\r\n    keywordUnion,\r\n    keywordView,\r\n    keywordEnum,\r\n    keywordBetween,\r\n\r\n    keywordOr,\r\n    keywordAnd,\r\n    keywordNot,\r\n\r\n    keywordJoin,\r\n    keywordNatural,\r\n    keywordLeft,\r\n    keywordCross,\r\n    keywordInner,\r\n    keywordOuter,\r\n    keywordOn,\r\n    keywordAs,\r\n    keywordLimit,\r\n    keywordOffset,\r\n    keywordIn,\r\n    keywordNotIn,\r\n    keywordLike,\r\n    keywordCollate,\r\n    keywordDefault,\r\n    keywordComment,\r\n    keywordEngine,\r\n    keywordCharset,\r\n    keywordCharacter,\r\n    \r\n    keywordStart,\r\n    keywordTransaction,\r\n    keywordIf,\r\n    keywordExists,\r\n\r\n    keywordLock,\r\n    keywordUnlock,\r\n    keywordWrite,\r\n    keywordRead,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    identifierQuote,\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    concatenation,    \r\n    equal,\r\n    notEqual,\r\n\r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    colon, // :\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // |\r\n    pipe,\r\n\r\n    // @\r\n    at,\r\n\r\n    // #\r\n    hash,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    \r\n    // additional AST node types\r\n    constantNode,\r\n    callMethod,\r\n    unaryOp,\r\n    binaryOp,\r\n    table,\r\n    subquery,\r\n    list,\r\n    column,\r\n    columnDef,\r\n    allColumns, // *\r\n    isNull,\r\n    isNot, // used by lexer to lex \"is not null\" into one token\r\n    isNotNull,\r\n    omittedeStatement\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordRename]: \"rename\",\r\n    [TokenType.keywordDistinct]: \"distinct\",\r\n    [TokenType.keywordTo]: \"to\",\r\n    [TokenType.keywordAlter]: \"alter\",\r\n    [TokenType.keywordCommit]: \"commit\",\r\n    [TokenType.keywordAdd]: \"add\",\r\n    [TokenType.keywordDelete]: \"delete\",\r\n    [TokenType.keywordSelect]: \"select\",\r\n    [TokenType.keywordInsert]: \"insert\",\r\n    [TokenType.keywordInto]: \"into\",\r\n    [TokenType.keywordValues]: \"values\",\r\n    [TokenType.keywordUpdate]: \"update\",\r\n    [TokenType.keywordSet]: \"set\",\r\n    [TokenType.keywordNo]: \"no\",\r\n    [TokenType.keywordUse]: \"use\",\r\n    [TokenType.keywordCreate]: \"create\",\r\n    [TokenType.keywordReferences]: \"references\",\r\n    [TokenType.keywordPrimary]: \"primary\",\r\n    [TokenType.keywordForeign]: \"foreign\",\r\n    [TokenType.keywordTable]: \"table\",\r\n    [TokenType.keywordSchema]: \"schema\",\r\n    [TokenType.keywordTables]: \"tables\",\r\n    [TokenType.keywordColumn]: \"column\",\r\n    [TokenType.keywordDrop]: \"drop\",\r\n    [TokenType.keywordUnique]: \"unique\",\r\n    [TokenType.keywordKey]: \"key\",\r\n    [TokenType.keywordIndex]: \"index\",\r\n    [TokenType.keywordConstraint]: \"constraint\",\r\n    [TokenType.keywordModify]: \"modify\",\r\n    [TokenType.keywordCascade]: \"cascade\",\r\n    [TokenType.keywordRestrict]: \"restrict\",\r\n    [TokenType.keywordAction]: \"action\",\r\n    [TokenType.keywordAutoincrement]: \"autoincrement\",\r\n    [TokenType.keywordFrom]: \"from\",\r\n    [TokenType.keywordWhere]: \"where\",\r\n    [TokenType.keywordGroup]: \"group\",\r\n    [TokenType.keywordBy]: \"by\",\r\n    [TokenType.keywordHaving]: \"having\",\r\n    [TokenType.keywordOrder]: \"order\",\r\n    [TokenType.keywordAscending]: \"ascending\",\r\n    [TokenType.keywordDescending]: \"descending\",\r\n    [TokenType.keywordNulls]: \"nulls\",\r\n    [TokenType.keywordFirst]: \"first\",\r\n    [TokenType.keywordLast]: \"last\",\r\n    [TokenType.keywordIs]: \"is\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordDatabase]: \"database\",\r\n    [TokenType.keywordUnion]: \"union\",\r\n    [TokenType.keywordView]: \"view\",\r\n    [TokenType.keywordEnum]: \"enum\",\r\n    [TokenType.keywordBetween]: \"between\",\r\n\r\n\r\n    [TokenType.keywordAnd]: \"and\",\r\n    [TokenType.keywordOr]: \"or\",\r\n    [TokenType.keywordNot]: \"not\",\r\n\r\n    [TokenType.keywordJoin]: \"join\",\r\n    [TokenType.keywordNatural]: \"natural\",\r\n    [TokenType.keywordLeft]: \"left\",\r\n    [TokenType.keywordCross]: \"cross\",\r\n    [TokenType.keywordInner]: \"inner\",\r\n    [TokenType.keywordOuter]: \"outer\",\r\n    [TokenType.keywordOn]: \"on\",\r\n    [TokenType.keywordAs]: \"as\",\r\n    [TokenType.keywordLimit]: \"limit\",\r\n    [TokenType.keywordOffset]: \"offset\",\r\n    [TokenType.keywordIn]: \"in\",\r\n    [TokenType.keywordNotIn]: \"not in\",\r\n    [TokenType.keywordLike]: \"like\",\r\n    [TokenType.keywordCollate]: \"collate\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordComment]: \"comment\",\r\n    [TokenType.keywordEngine]: \"engine\",\r\n    [TokenType.keywordCharset]: \"charset\",\r\n    [TokenType.keywordCharacter]: \"character\",\r\n    [TokenType.keywordStart]: \"start\",\r\n    [TokenType.keywordTransaction]: \"transaction\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordExists]: \"exists\",\r\n    [TokenType.keywordLock]: \"lock\",\r\n    [TokenType.keywordUnlock]: \"unlock\",\r\n    [TokenType.keywordWrite]: \"write\",\r\n    [TokenType.keywordRead]: \"read\",\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.identifierQuote]: \"`\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\",\r\n    [TokenType.equal]: \"=\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.concatenation]: \"||\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n    [TokenType.colon]: \":\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // hash\r\n    [TokenType.hash]: \"#\",\r\n    \r\n    // pipe\r\n    [TokenType.pipe]: \"|\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '#': TokenType.hash,\r\n    '|': TokenType.pipe,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    '`': TokenType.identifierQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.equal,\r\n    \"<>\": TokenType.notEqual,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"rename\": TokenType.keywordRename,\r\n    \"distinct\": TokenType.keywordDistinct,\r\n    \"to\": TokenType.keywordTo,\r\n    \"alter\": TokenType.keywordAlter,\r\n    \"commit\": TokenType.keywordCommit,\r\n    \"add\": TokenType.keywordAdd,\r\n    \"delete\": TokenType.keywordDelete,\r\n    \"select\": TokenType.keywordSelect,\r\n    \"insert\": TokenType.keywordInsert,\r\n    \"into\": TokenType.keywordInto,\r\n    \"values\": TokenType.keywordValues,\r\n    \"update\": TokenType.keywordUpdate,\r\n    \"set\": TokenType.keywordSet,\r\n    \"no\": TokenType.keywordNo,\r\n    \"use\": TokenType.keywordUse,\r\n    \"create\": TokenType.keywordCreate,\r\n    \"references\": TokenType.keywordReferences,\r\n    \"primary\": TokenType.keywordPrimary,\r\n    \"foreign\": TokenType.keywordForeign,\r\n    \"table\": TokenType.keywordTable,\r\n    \"tables\": TokenType.keywordTables,\r\n    \"column\": TokenType.keywordColumn,\r\n    \"drop\": TokenType.keywordDrop,\r\n    \"unique\": TokenType.keywordUnique,\r\n    \"key\": TokenType.keywordKey,\r\n    \"index\": TokenType.keywordIndex,\r\n    \"constraint\": TokenType.keywordConstraint,\r\n    \"modify\": TokenType.keywordModify,\r\n    \"cascade\": TokenType.keywordCascade,\r\n    \"restrict\": TokenType.keywordRestrict,\r\n    \"action\": TokenType.keywordAction,\r\n    \"autoincrement\": TokenType.keywordAutoincrement,\r\n    \"auto_increment\": TokenType.keywordAutoincrement,\r\n    \"from\": TokenType.keywordFrom,\r\n    \"where\": TokenType.keywordWhere,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"group\": TokenType.keywordGroup,\r\n    \"by\": TokenType.keywordBy,\r\n    \"having\": TokenType.keywordHaving,\r\n    \"order\": TokenType.keywordOrder,\r\n    \"asc\": TokenType.keywordAscending,\r\n    \"desc\": TokenType.keywordDescending,\r\n    \"nulls\": TokenType.keywordNulls,\r\n    \"first\": TokenType.keywordFirst,\r\n    \"last\": TokenType.keywordLast,\r\n    \"is\": TokenType.keywordIs,\r\n    \"null\": TokenType.keywordNull,\r\n    \"database\": TokenType.keywordDatabase,\r\n    \"union\": TokenType.keywordUnion,\r\n    \"view\": TokenType.keywordView,\r\n    \"enum\": TokenType.keywordEnum,\r\n    \"between\": TokenType.keywordBetween,\r\n\r\n    \"or\": TokenType.keywordOr,\r\n    \"and\": TokenType.keywordAnd,\r\n    \"not\": TokenType.keywordNot,\r\n\r\n    \"join\": TokenType.keywordJoin,\r\n    \"natural\": TokenType.keywordNatural,\r\n    \"left\": TokenType.keywordLeft,\r\n    \"cross\": TokenType.keywordCross,\r\n    \"inner\": TokenType.keywordInner,\r\n    \"outer\": TokenType.keywordOuter,\r\n    \"on\": TokenType.keywordOn,\r\n    \"as\": TokenType.keywordAs,\r\n    \"limit\": TokenType.keywordLimit,\r\n    \"offset\": TokenType.keywordOffset,\r\n    \"in\": TokenType.keywordIn,\r\n    \"not in\": TokenType.keywordNotIn,\r\n    \"like\": TokenType.keywordLike,\r\n    \"collate\": TokenType.keywordCollate,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"comment\": TokenType.keywordComment,\r\n    \"engine\": TokenType.keywordEngine,\r\n    \"charset\": TokenType.keywordCharset,\r\n    \"character\": TokenType.keywordCharacter,\r\n    \"start\": TokenType.keywordStart,\r\n    \"transaction\": TokenType.keywordTransaction,\r\n    \"if\": TokenType.keywordIf,\r\n    \"exists\": TokenType.keywordExists,\r\n    \"lock\": TokenType.keywordLock,\r\n    \"unlock\": TokenType.keywordUnlock,\r\n    \"write\": TokenType.keywordWrite,\r\n    \"read\": TokenType.keywordRead\r\n\r\n\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token,\r\n    isDoubleQuotedIdentifier?: boolean\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n    nonSpaceLastToken: Token;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    tokenTypesToMerge: { first: TokenType, second: TokenType, merged: TokenType }[] = [\r\n        { first: TokenType.keywordNotIn, second: TokenType.keywordIn, merged: TokenType.keywordNotIn },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNot, merged: TokenType.isNot },\r\n        { first: TokenType.isNot, second: TokenType.keywordNull, merged: TokenType.isNotNull },\r\n        { first: TokenType.keywordIs, second: TokenType.keywordNull, merged: TokenType.isNull },\r\n    ]\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.nonSpaceLastToken = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.pipe:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.concatenation, '||');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.pipe, '|');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == \">\") {\r\n                        this.pushToken(TokenType.notEqual, '<>');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\"){\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == \"=\"){\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.minus:\r\n                    if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '-') {\r\n                        this.lexEndofLineComment(\"--\");\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.hash:\r\n                    if(this.nonSpaceLastToken == null || this.nonSpaceLastToken.position.line < this.line){\r\n                        this.lexEndofLineComment('#');\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.hash, \"#\");\r\n                        this.next();\r\n                    }\r\n                    break;\r\n                case TokenType.singleQuote:\r\n                    this.lexStringConstant(\"'\");\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant('\"');\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n                case TokenType.identifierQuote:\r\n                    this.lexQuotedIdentifier();\r\n                    return;\r\n                \r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n\r\n    lexQuotedIdentifier() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let s: string = \"\";\r\n        this.next();\r\n        while(this.currentChar != '`' && this.currentChar != endChar){\r\n            s += this.currentChar;\r\n            this.next();\r\n        }\r\n        if(this.currentChar == endChar){\r\n            this.pushError(\"Innerhalb eines in `` eingeschlossenen Bezeichners wurde das Ende der Datei erreicht.\", s.length + 1, \"error\", line, column);\r\n        } else {\r\n            this.next(); // skip `\r\n            this.pushToken(TokenType.identifier, s, line, column);\r\n        }\r\n    }\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        for (let tripel of this.tokenTypesToMerge) {\r\n            if (tt == tripel.second && this.nonSpaceLastTokenType == tripel.first) {\r\n                let newLength = column - this.nonSpaceLastToken.position.column + length;\r\n                this.nonSpaceLastToken.tt = tripel.merged;\r\n                this.nonSpaceLastToken.position = { column: this.nonSpaceLastToken.position.column, line: line, length: newLength };\r\n                this.nonSpaceLastToken.value = this.nonSpaceLastToken.value + \" \" + text;\r\n\r\n                this.nonSpaceLastTokenType = tripel.merged;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n            this.nonSpaceLastToken = t;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant(beginChar: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                let escapeChar = EscapeSequenceList[this.nextChar];\r\n                if (escapeChar == null) {\r\n                    if(this.nextChar == 'u'){       // Unicode escape sequences (for OpenOffice)\r\n                        let hex: string = \"\";\r\n                        this.next(); // skip \\\r\n                        this.next(); // skip u\r\n                        while (\"abcdef0123456789\".indexOf(this.currentChar) >= 0 && hex.length < 4) {\r\n                            hex += this.currentChar;\r\n                            if(hex.length < 4) this.next();\r\n                        }\r\n                        if (hex.length < 4) {\r\n                            this.pushError('Unbekanntes Unicode-Zeichen: u' + hex, 1 + hex.length);\r\n                        } else {\r\n                            char = String.fromCodePoint(parseInt(hex, 16));\r\n                        }\r\n                    } else {\r\n                        this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                    }\r\n                } else {\r\n                    char = escapeChar;\r\n                    this.next();\r\n                }\r\n            } else if (char == beginChar) {\r\n                this.next();\r\n                if(this.currentChar != beginChar){\r\n                    break;\r\n                }\r\n                text += beginChar;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        if (beginChar == \"'\") {\r\n            this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n        } else {\r\n            this.pushToken(TokenType.identifier, text, line, column, text.length + 2);\r\n            this.tokenList[this.tokenList.length - 1].isDoubleQuotedIdentifier = true;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment(commentStart: string) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = commentStart;\r\n        for(let i = 0; i < commentStart.length; i++){\r\n            this.next();\r\n        }\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n        this.next(); // skip@\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text.toLowerCase()];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt);\r\n                        let nextTokenIsOperator = this.isBinaryOperator(this.getNextNonSpaceToken(i, tokenlist).tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space )){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.equal;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n                // table\r\n                \"--table-even\": \"#222\", /*#d1d2e4*/\r\n                \"--table-heading\": \"#202060\", /*#c3f2b9*/\r\n\r\n                // highlight statements\r\n                \"--highlightStatementGreen-color\": \"#015a0165\",\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#000\",\r\n                \"--fontColorLight\": \"#303030\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n                // table\r\n                \"--table-even\": \"#d1d2e4\", /*#d1d2e4*/\r\n                \"--table-heading\": \"#c3f2b9\", /*#c3f2b9*/\r\n\r\n                // highlight statements\r\n                \"--highlightStatementGreen-color\": \"#015a0120\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\n\r\ntype CheckFunction = (columnIdentifier: string, parameterValues: any[]) => string;\r\ntype OutputFunction = (value: any, parameterValues: any[]) => string;\r\n\r\nexport abstract class SQLType {\r\n\r\n    abstract canCastTo(type2: SQLType): boolean;\r\n\r\n    abstract getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType;\r\n\r\n    abstract getUnaryResultType(operator: TokenType): SQLType;\r\n\r\n    abstract getBinaryResult(operator: TokenType, value1: any, value2: any): any;\r\n\r\n    abstract toString(): string;\r\n\r\n    abstract getBaseTypeName(): string;\r\n\r\n    abstract getSQLiteType(): string;\r\n\r\n}\r\n\r\nexport class SQLBaseType extends SQLType {\r\n    // Map<tokenType, Map<SecondType, ResultType>>\r\n    binaryResultTypes: Map<TokenType, Map<SQLBaseType, SQLBaseType>> = new Map();\r\n\r\n    unaryOperators: TokenType[] = [];\r\n\r\n    static baseTypes: SQLBaseType[] = [];\r\n    static baseTypeMap: Map<string, SQLBaseType> = new Map();\r\n\r\n    public canCastToList: string[];\r\n\r\n    constructor(public name: string, public parameterDescriptions: string[],\r\n        public checkFunction: CheckFunction, public outputFunction: OutputFunction, canCastToList: string[]) {\r\n        super();\r\n        this.canCastToList = canCastToList.slice(0);\r\n        let ownIndex = this.canCastToList.indexOf(name);\r\n        if(ownIndex >= 0) this.canCastToList.splice(ownIndex, 1);\r\n    }\r\n\r\n    static fromConstantType(tt: TokenType): SQLBaseType {\r\n        switch (tt) {\r\n            case TokenType.stringConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.integerConstant:\r\n                return this.baseTypeMap.get(\"integer\");\r\n            case TokenType.floatingPointConstant:\r\n                return this.baseTypeMap.get(\"float\");\r\n            case TokenType.charConstant:\r\n                return this.baseTypeMap.get(\"text\");\r\n            case TokenType.booleanConstant:\r\n                return this.baseTypeMap.get(\"boolean\");\r\n            case TokenType.keywordNull:\r\n                return this.baseTypeMap.get(\"null\");\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    getSQLiteType(): string {\r\n        return this.toString();\r\n    }\r\n\r\n    static getBaseType(name: string) {\r\n        if(name != null && name.toLocaleLowerCase() == 'char'){\r\n            name = 'varchar';\r\n            \r\n        } \r\n        return this.baseTypeMap.get(name.toLocaleLowerCase());\r\n    }\r\n\r\n    static addBaseTypes(baseTypes: SQLBaseType[]) {\r\n        SQLBaseType.baseTypes = SQLBaseType.baseTypes.concat(baseTypes);\r\n        baseTypes.forEach(t => SQLBaseType.baseTypeMap.set(t.name, t));\r\n    }\r\n\r\n    addBinaryOperation(tokenType: TokenType | TokenType[], secondType: SQLBaseType, resultType: SQLBaseType, isCommutative: boolean = true) {\r\n\r\n        if (!Array.isArray(tokenType)) tokenType = [tokenType];\r\n\r\n        tokenType.forEach(t => {\r\n            let map: Map<SQLBaseType, SQLBaseType> = this.binaryResultTypes.get(t);\r\n            if (map == null) {\r\n                map = new Map();\r\n                this.binaryResultTypes.set(t, map);\r\n            }\r\n            map.set(secondType, resultType);\r\n            if (isCommutative && secondType != this) {\r\n                secondType.addBinaryOperation(t, this, resultType, false);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        if(bt2 instanceof SQLTextEnumType) bt2 = SQLBaseType.getBaseType('text');\r\n        if(bt2 instanceof SQLNumberEnumType) bt2 = SQLBaseType.getBaseType('double');\r\n\r\n        return this.canCastToList.indexOf(bt2.name) >= 0 || this.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        if(bt2 instanceof SQLTextEnumType) bt2 = SQLBaseType.getBaseType('text');\r\n        if(bt2 instanceof SQLNumberEnumType) bt2 = SQLBaseType.getBaseType('double');\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        if([TokenType.isNull, TokenType.isNotNull].indexOf(operator) >= 0) return booleanType;\r\n        if(this.unaryOperators.indexOf(operator)>= 0) return this;\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        switch (operator) {\r\n            case TokenType.concatenation:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.plus:\r\n                if (value1 != null && value2 != null) return value1 + value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.minus:\r\n                if (value1 != null && value2 != null) return value1 - value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.multiplication:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.division:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordAnd:\r\n                if (value1 != null && value2 != null) return value1 * value2;\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.keywordOr:\r\n                if (value1 != null && value2 != null) return Math.max(value1, value2);\r\n                return value1 != null ? value1 : value2;\r\n            case TokenType.lower:\r\n                if (value1 != null && value2 != null) return value1 < value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greater:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.lowerOrEqual:\r\n                if (value1 != null && value2 != null) return value1 <= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.greaterOrEqual:\r\n                if (value1 != null && value2 != null) return value1 >= value2;\r\n                return value1 != null ? false : true;\r\n            case TokenType.equal:\r\n                return value1 == value2;\r\n            case TokenType.notEqual:\r\n                return value1 != value2;\r\n            case TokenType.modulo:\r\n                return value1 % value2;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class SQLNumberEnumType extends SQLBaseType {\r\n    \r\n    isInteger: boolean = true;\r\n    numericBinaryOperators: TokenType[] = [TokenType.plus, TokenType.minus, TokenType.multiplication, TokenType.division, TokenType.modulo];\r\n    comparisonOperators: TokenType[] = [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual];\r\n\r\n\r\n    constructor(public values: number[]){\r\n        super(\"NumberEnum\", [], \r\n        (ci, pv) => `check(${ci} in (${values.join(', ')}))`,\r\n        (v: string, pv) => v,\r\n        [\"decimal\", \"integer\", \"double\", \"float\"]\r\n        )\r\n\r\n        for(let v of values){\r\n            if(Math.abs(Math.round(v) - v) > 0.00000001) this.isInteger = false;\r\n        }\r\n\r\n        this.name = this.isInteger ? \"integerEnum\" : \"floatEnum\";\r\n    }\r\n    \r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n        if(this.numericBinaryOperators.indexOf(operator) >= 0){\r\n            return this.isInteger ? SQLBaseType.getBaseType('integer') : SQLBaseType.getBaseType('double');\r\n        } else {\r\n            return SQLBaseType.getBaseType('boolean');\r\n        }\r\n    }\r\n    \r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        return null;\r\n    }\r\n    \r\n    getBinaryResult(operator: TokenType, value1: any, value2: any) {\r\n        return value1 + value2;\r\n    }\r\n    \r\n    toString(): string {\r\n        return \"enum (\" + this.values.join(\", \") + \")\";\r\n    }\r\n    \r\n    getBaseTypeName(): string {\r\n        return \"enum\";\r\n    }\r\n\r\n    getSQLiteType(): string {\r\n        return this.isInteger ? \"integerEnum\" : \"realEnum\";\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class SQLTextEnumType extends SQLBaseType {\r\n    \r\n    constructor(public values: string[]){\r\n        super(\"textEnum\", [], \r\n        (ci, pv) => `check(${ci} in (${values.map(v => \"'\" + v + \"'\").join(', ')}))`,\r\n        (v: string, pv) => v,\r\n        [\"text\", \"varchar\", \"char\"]\r\n        )\r\n    }\r\n    \r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n        return operator == TokenType.concatenation ? SQLBaseType.getBaseType('text') : null;\r\n    }\r\n    \r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        return null;\r\n    }\r\n    \r\n    getBinaryResult(operator: TokenType, value1: any, value2: any) {\r\n        return value1 + value2;\r\n    }\r\n    \r\n    toString(): string {\r\n        return \"enum (\" + this.values.join(\", \") + \")\";\r\n    }\r\n    \r\n    getBaseTypeName(): string {\r\n        return \"enum\";\r\n    }\r\n\r\n    getSQLiteType(): string {\r\n        return \"textEnum\";\r\n    }\r\n\r\n}\r\n\r\nlet tens: number[] = [1, 10, 100, 1000, 100000, 100000, 1000000, 10000000, 100000000, 1000000000];\r\n\r\nexport class SQLDerivedType extends SQLType {\r\n\r\n    name: string;\r\n\r\n    constructor(public baseType: SQLBaseType, public parameterValues: number[]) {\r\n        super();\r\n        let parameters = parameterValues.join(\", \");\r\n        this.name = baseType.name + \"(\" + parameters + \")\";\r\n    }\r\n\r\n    toString(): string {\r\n        return this.name;\r\n    }\r\n\r\n    getBaseTypeName(): string {\r\n        return this.baseType.name;\r\n    }\r\n\r\n    getSQLiteType(): string {\r\n        return this.baseType.getSQLiteType();\r\n    }\r\n\r\n\r\n    canCastTo(type2: SQLType): boolean {\r\n\r\n        let bt2: SQLBaseType = type2 instanceof SQLBaseType ? type2 : type2[\"baseType\"];\r\n\r\n        return this.baseType.canCastToList.indexOf(bt2.name) >= 0 || this.baseType.name == bt2.name;\r\n\r\n    }\r\n\r\n    getBinaryResultType(operator: TokenType, secondType: SQLType): SQLType {\r\n\r\n\r\n        let map = this.baseType.binaryResultTypes.get(operator);\r\n        if (map == null) return null;\r\n\r\n        let bt2: SQLBaseType = secondType instanceof SQLBaseType ? secondType : secondType[\"baseType\"];\r\n\r\n        let returnBaseType = map.get(bt2);\r\n\r\n        if (this.baseType == bt2 && this.baseType == returnBaseType && secondType instanceof SQLDerivedType) {\r\n            if (this.baseType.name == \"varchar\" || operator == TokenType.concatenation) {\r\n                return new SQLDerivedType(this.baseType, [this.parameterValues[0] + secondType.parameterValues[0]]);\r\n            }\r\n            if (this.baseType.name == \"decimal\") {\r\n                return new SQLDerivedType(this.baseType, [Math.max(this.parameterValues[0], secondType.parameterValues[0]), Math.max(this.parameterValues[1], secondType.parameterValues[1])]);\r\n            }\r\n        }\r\n\r\n        return map.get(bt2);\r\n\r\n    }\r\n\r\n    getUnaryResultType(operator: TokenType): SQLType {\r\n        return this.baseType.getUnaryResultType(operator);\r\n    }\r\n\r\n    getBinaryResult(operator: TokenType, value1: any, value2: any): any {\r\n        let result = this.baseType.getBinaryResult(operator, value1, value2);\r\n        if (this.name = \"varchar\") return result == null ? null : (\"\" + result).substr(0, this.parameterValues[0]);\r\n        if (this.name == \"decimal\") {\r\n            if (result == null) return null;\r\n            return Math.round(result * tens[this.parameterValues[1]]) / tens[this.parameterValues[1]];\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nlet textTypes = [\"varchar\", \"char\", \"text\" ,\"tinytext\", \"mediumtext\", \"longtext\"];\r\n\r\nvar varcharType = new SQLBaseType(\"varchar\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${Math.max(pv[0], 1)})`,\r\n    (v: string, pv) => v.substring(0, Math.max(pv[0], 1)), textTypes);\r\n    \r\nvar charType = new SQLBaseType(\"char\", [\"Maximale Länge\"], (ci, pv) => `check(length(${ci}) <= ${Math.max(pv[0], 1)})`,\r\n    (v: string, pv) => v.substring(0, Math.max(pv[0], 1)), textTypes);\r\n\r\nvar textType = new SQLBaseType(\"text\", [\"Maximale Länge\"], (ci, pv) => \"\", (v: string, pv) => v, textTypes.concat([\"time\", \"date\", \"datetime\", \"timestamp\"]));\r\nvar tinyTextType = new SQLBaseType(\"tinyText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar mediumTextType = new SQLBaseType(\"mediumText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\nvar longTextType = new SQLBaseType(\"longText\", [], (ci, pv) => \"\", (v: string, pv) => v, textTypes);\r\n\r\nlet floatTypes = [\"decimal\", \"numeric\", \"double\", \"real\", \"float\", \"floatEnum\"];\r\n\r\nvar decimalType = new SQLBaseType(\"decimal\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\",\r\n    (v: number, pv) => { let vk = Math.trunc(v); let nk = v - vk; return \"\" + vk + (pv[1] > 0 ? \".\" + Math.round(nk * tens[pv[1]]) : \"\") },\r\n    floatTypes);\r\nvar numericType = new SQLBaseType(\"numeric\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar doubleType = new SQLBaseType(\"double\", [\"Gesamtzahl der Stellen\", \"Nachkommastellen\"], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar realType = new SQLBaseType(\"real\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\nvar floatType = new SQLBaseType(\"float\", [], (ci, pv) => \"\", (v: number, pv) => \"\" + v, floatTypes);\r\n\r\nlet inttypes = [\"int\", \"integer\", \"tinyint\", \"smallint\", \"mediumint\", \"bigint\", \"integerEnum\"];\r\nlet numberTypes = inttypes.concat(floatTypes);\r\n\r\nvar intType = new SQLBaseType(\"int\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar integerType = new SQLBaseType(\"integer\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar tinyIntType = new SQLBaseType(\"tinyint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar smallIntType = new SQLBaseType(\"smallint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar mediumIntType = new SQLBaseType(\"mediumint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\nvar bigIntType = new SQLBaseType(\"bigint\", [\"Maximale Anzahl der Stellen\"], (ci, pv) => `check(round(${ci}) = ${ci})`, (v: number, pv) => \"\" + Math.round(v), numberTypes);\r\n\r\nvar timeType = new SQLBaseType(\"time\", [], (ci, pv) => `check(isTime(${ci}))`, (v: string, pv) => v, []);\r\nvar dateType = new SQLBaseType(\"date\", [], (ci, pv) => `check(isDate(${ci}))`, (v: string, pv) => v, []);\r\nvar dateTimeType = new SQLBaseType(\"datetime\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"timestamp\"]);\r\nvar timestampType = new SQLBaseType(\"timestamp\", [], (ci, pv) => `check(isDateTime(${ci}))`, (v: string, pv) => v, [\"datetime\"]);\r\n\r\n\r\nvar booleanType = new SQLBaseType(\"boolean\", [], (ci, pv) => `check(${ci} == 0 or ${ci} == 1)`, (v, pv) => v == 1 ? \"true\" : \"false\",\r\n    [\"varchar\", \"text\", \"decimal\", \"numeric\"]);\r\n\r\nvar nullType = new SQLBaseType(\"null\", [], (ci, pv) => \"\", (v, pv) => v,\r\n    []);\r\n\r\nlet numericTypes = [decimalType, numericType, doubleType, realType, floatType, intType, integerType, tinyIntType, smallIntType, mediumIntType, bigIntType];\r\n\r\nlet baseTypes = [varcharType, charType, textType, tinyTextType, mediumTextType, longTextType,\r\n    timeType, dateType, dateTimeType, timestampType, booleanType, nullType].concat(numericTypes);\r\n\r\nlet timeTypes = [timeType, dateType, dateTimeType, timestampType];\r\n\r\nSQLBaseType.addBaseTypes(baseTypes);\r\n\r\nvarcharType.addBinaryOperation(TokenType.concatenation, varcharType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, charType, varcharType);\r\nvarcharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, varcharType, booleanType);\r\nvarcharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\ncharType.addBinaryOperation(TokenType.concatenation, charType, charType);\r\ncharType.addBinaryOperation(TokenType.concatenation, varcharType, charType);\r\ncharType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ntextType.addBinaryOperation(TokenType.concatenation, textType, textType);\r\ncharType.addBinaryOperation(TokenType.keywordLike, charType, booleanType);\r\ncharType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\ntextType.addBinaryOperation(TokenType.keywordLike, textType, booleanType);\r\n\r\nlet numericBinaryOperators: TokenType[] = [TokenType.plus, TokenType.minus, TokenType.multiplication, TokenType.division, TokenType.modulo];\r\nlet comparisonOperators: TokenType[] = [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual];\r\n\r\nfor (let i = 0; i < numericTypes.length; i++) {\r\n    for (let j = i; j < numericTypes.length; j++) {\r\n        numericTypes[i].addBinaryOperation(numericBinaryOperators, numericTypes[j], numericTypes[j]);\r\n        numericTypes[i].addBinaryOperation(comparisonOperators, numericTypes[j], booleanType);\r\n    }\r\n    numericTypes[i].unaryOperators = [TokenType.minus];\r\n}\r\n\r\ndecimalType.addBinaryOperation(numericBinaryOperators, decimalType, decimalType);\r\n\r\nlet characterTypes = [varcharType, textType];\r\nfor (let i = 0; i < characterTypes.length; i++) {\r\n    for (let j = i; j < characterTypes.length; j++) {\r\n        characterTypes[i].addBinaryOperation(TokenType.concatenation, characterTypes[j], characterTypes[j]);\r\n        characterTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n    }\r\n}\r\n\r\nfor(let i = 0; i < timeTypes.length; i++){\r\n    timeTypes[i].addBinaryOperation(comparisonOperators, timeTypes[i], booleanType);\r\n    for(let j = 0; j < characterTypes.length; j++){\r\n        timeTypes[i].addBinaryOperation(comparisonOperators, characterTypes[j], booleanType);\r\n        characterTypes[j].addBinaryOperation(comparisonOperators, timeTypes[i], booleanType);\r\n    }\r\n}\r\n\r\nlet booleanOperations = [TokenType.keywordAnd, TokenType.keywordOr];\r\nbooleanType.addBinaryOperation(booleanOperations, booleanType, booleanType);\r\n\r\nbooleanType.unaryOperators = [TokenType.keywordNot];\r\n\r\nbaseTypes.forEach(bt => bt.unaryOperators = bt.unaryOperators.concat([TokenType.isNull, TokenType.isNotNull]));","import { param, timers } from \"jquery\";\r\nimport { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ASTNode, BracketsNode, SelectNode, TermNode, TableOrSubqueryNode, TableNode, SubqueryNode, GroupByNode, OrderByNode, LimitNode, IdentifierNode, DotNode, ListNode, ColumnNode, InsertNode, ConstantNode, UnaryOpNode, CreateTableNode, CreateTableColumnNode, ForeignKeyInfo, UpdateNode, DeleteNode, DropTableNode, AlterTableNode, AlterTableKind, OmittedStatementNode, CreateViewNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Column } from \"./SQLTable.js\";\r\nimport { SQLBaseType, SQLNumberEnumType, SQLTextEnumType, SQLType } from \"./SQLTypes.js\";\r\n\r\nexport type SQLStatement = {\r\n    ast: ASTNode,\r\n    from: TextPosition,\r\n    to: TextPosition,\r\n    hasErrors: boolean,\r\n    acceptedBySQLite: boolean,\r\n    sql?: string,\r\n    sqlCleaned?: string,\r\n    resultTypes: SQLType[]\r\n}\r\n\r\n\r\nexport class Parser {\r\n\r\n    static operatorPrecedence: TokenType[][] = [\r\n        [TokenType.keywordOr], [TokenType.keywordAnd],\r\n        [TokenType.keywordBetween],\r\n        [TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual, TokenType.keywordLike],\r\n        [TokenType.concatenation, TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo],\r\n        [TokenType.keywordIn, TokenType.keywordNotIn]\r\n    ];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n    beginStatementKeywords = [\"select\", \"insert into\", \"update\", \"create table\", \"create view\", \"delete from\", \"alter table\", \"drop table\", \"drop view\"];\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        m.completionHints = new Map();\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.sqlStatements = [];\r\n            this.module.errors[1] = this.errorList;\r\n            this.module.addCompletionHint({ line: 0, column: 0, length: 0 }, { line: 20000, column: 100, length: 0 }, false, false,\r\n                this.beginStatementKeywords);\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        this.module.sqlStatements = this.parseMain();\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if (token1.tt == TokenType.comment) {\r\n                    this.lastComment = token1;\r\n                }\r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if (this.lastComment != null) {\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if (token.tt == TokenType.comment) {\r\n                this.lastComment = token;\r\n            }\r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    skip(tt: TokenType | TokenType[]) {\r\n        if (!Array.isArray(tt)) tt = [tt];\r\n        if (tt.indexOf(this.tt) >= 0) this.nextToken();\r\n    }\r\n\r\n    expect(tt: TokenType | TokenType[], skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt && !(Array.isArray(tt) && tt.indexOf(this.tt) >= 0)) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt)\r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n            let expectedValuesArray: string[];\r\n\r\n            if (Array.isArray(tt)) {\r\n                expectedValuesArray = tt.map(token => TokenTypeReadable[token]);\r\n                let expectedTokens = expectedValuesArray.join(\", \");\r\n                this.pushError(\"Erwartet wird eines der folgenden: \" + expectedTokens + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            } else {\r\n                expectedValuesArray = [TokenTypeReadable[tt]];\r\n                this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            }\r\n\r\n            // if (!Array.isArray(tt) && tt != TokenType.identifier) {\r\n            //     this.module.addCompletionHint(this.getEndOfPosition(this.lastToken.position), this.getCurrentPositionPlus(1), false, false, expectedValuesArray);\r\n            // }\r\n\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    getEndOfPosition(p: TextPosition): TextPosition {\r\n        return {\r\n            line: p.line,\r\n            column: p.column + p.length,\r\n            length: 0\r\n        }\r\n    }\r\n\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[], skip: boolean = false): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            let ret: boolean = this.tt == token;\r\n            if (ret && skip) this.nextToken();\r\n            return ret;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getCurrentPositionPlus(deltaColumns: number): TextPosition {\r\n\r\n        if (this.tt == TokenType.endofSourcecode) {\r\n            return {\r\n                line: this.endToken.position.line,\r\n                column: 100,\r\n                length: 1\r\n            }\r\n        }\r\n\r\n        // get Token in which new position falls:\r\n        let tpos = 0;\r\n        let deltaInsideToken = deltaColumns;\r\n        let length = 0;\r\n        while (tpos < this.lookahead - 1 && (length = this.ct[tpos].position.length) < deltaInsideToken) {\r\n            deltaInsideToken -= length;\r\n            tpos++;\r\n        }\r\n        let tokenPos = this.ct[tpos].position;\r\n        if (tokenPos == null) tokenPos = this.getCurrentPosition();\r\n\r\n        let pos: TextPosition = {\r\n            line: tokenPos.line,\r\n            column: tokenPos.column + deltaInsideToken,\r\n            length: 1\r\n        }\r\n\r\n        return pos;\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    parseMain(): SQLStatement[] {\r\n\r\n        let mainProgram: SQLStatement[] = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        let afterLastStatement: TextPosition = {\r\n            column: 0,\r\n            line: 0,\r\n            length: 0\r\n        }\r\n\r\n        let semicolonAfterLastStatement: boolean = true;\r\n\r\n        this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            let errorsBeforeStatement: number = this.errorList.length;\r\n\r\n            while ([TokenType.space, TokenType.newline, TokenType.comment, TokenType.semicolon].indexOf(this.cct.tt) >= 0) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let startPosition = this.getCurrentPosition();\r\n\r\n            let st = this.parseStatement();\r\n\r\n            afterLastStatement = {\r\n                line: this.lastToken.position.line + 1,\r\n                column: 0,\r\n                length: 0\r\n            }\r\n\r\n            semicolonAfterLastStatement = this.tt == TokenType.semicolon;\r\n            while (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let hasErrors: boolean = false;\r\n            for (let i = errorsBeforeStatement; i < this.errorList.length; i++) {\r\n                if (this.errorList[i].level == \"error\") hasErrors = true;\r\n            }\r\n\r\n            if (st != null) {\r\n                mainProgram.push({\r\n                    ast: st,\r\n                    from: startPosition,\r\n                    to: this.getEndOfPosition(this.lastToken.position),\r\n                    hasErrors: hasErrors,\r\n                    acceptedBySQLite: false,\r\n                    resultTypes: []\r\n                });\r\n            }\r\n            // console.log(mainProgram[mainProgram.length - 1]);\r\n\r\n            mainProgramEnd = this.getCurrentPosition();\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                let beginStatementTokens: TokenType[] =\r\n                    [TokenType.keywordSelect, TokenType.keywordUpdate, TokenType.keywordCreate, TokenType.keywordInsert,\r\n                    TokenType.keywordDelete, TokenType.keywordDrop, TokenType.keywordAlter];\r\n\r\n                let firstBadToken: boolean = true;\r\n\r\n                while (!this.isEnd() && beginStatementTokens.indexOf(this.tt) < 0) {\r\n                    if ([TokenType.space, TokenType.newline].indexOf(this.tt) < 0 && firstBadToken) {\r\n                        this.pushError(\"Erwartet wird eines dieser Schlüsselwörter: \" + beginStatementTokens.map(t => TokenTypeReadable[t]).join(\", \")\r\n                            + \"; Gefunden wurde: \" + this.cct.value);\r\n                        firstBadToken = true;\r\n                    }\r\n                    this.nextToken();\r\n                }\r\n            }\r\n\r\n            if (semicolonAfterLastStatement || this.cct.position.line - afterLastStatement.line > 0) {\r\n                this.module.addCompletionHint(afterLastStatement, this.getCurrentPositionPlus(8), false, false,\r\n                    this.beginStatementKeywords);\r\n            }\r\n\r\n        }\r\n\r\n        this.module.addCompletionHint(afterLastStatement, { line: this.endToken.position.line + 1, column: 0, length: 0 }, false, false,\r\n            this.beginStatementKeywords);\r\n\r\n        return mainProgram;\r\n\r\n    }\r\n\r\n\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode {\r\n\r\n        let retStatements: ASTNode = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordSelect:\r\n                return this.parseSelect();\r\n            case TokenType.keywordInsert:\r\n                return this.parseInsert();\r\n            case TokenType.keywordCreate:\r\n                return this.parseCreateTableOrDatabaseOrView();\r\n            case TokenType.keywordUpdate:\r\n                return this.parseUpdate();\r\n            case TokenType.keywordDelete:\r\n                return this.parseDelete();\r\n            case TokenType.keywordDrop:\r\n                return this.parseDropTableOrView();\r\n            case TokenType.keywordAlter:\r\n                return this.parseAlterTable();\r\n            case TokenType.keywordCommit:\r\n                this.pushError(\"Die Aweisung commit ist unnötig, da jede Anweisung automatisch commited wird.\", \"info\");\r\n                this.nextToken();\r\n                return null;\r\n            // Omitted statements:\r\n            case TokenType.keywordSet:\r\n                return this.parseSet();\r\n            case TokenType.keywordUse:\r\n                return this.parseUse();\r\n            case TokenType.keywordStart:\r\n                this.pushError(\"Die Aweisung 'start transaction' ist unnötig, da jede Anweisung automatisch commited wird.\", \"info\");\r\n                this.nextToken();\r\n                this.expect(TokenType.keywordTransaction, true);\r\n                return null;\r\n            case TokenType.keywordLock:\r\n            case TokenType.keywordUnlock:\r\n                this.parseLockUnlock();\r\n                return null;\r\n\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s == null) s = \"\";\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n                this.nextToken();\r\n                break;\r\n        }\r\n\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseLockUnlock() {\r\n        this.nextToken();\r\n        this.expect(TokenType.keywordTables, true);\r\n        this.skip(TokenType.identifier);\r\n        this.skip([TokenType.keywordWrite, TokenType.keywordRead]);\r\n        this.skip(TokenType.semicolon);\r\n    }\r\n\r\n    parseSet(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das SET-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'set'\r\n\r\n        // SET DATABASE Collation \"German\"  ( -> OpenOffice)\r\n        if(this.comesToken(TokenType.keywordDatabase)){\r\n            this.nextToken();\r\n        } \r\n        this.expect(TokenType.identifier, true);\r\n        this.comesToken(TokenType.equal, true);   // skip = if present\r\n        this.expect([TokenType.identifier, TokenType.stringConstant, TokenType.integerConstant, TokenType.charConstant, TokenType.booleanConstant, TokenType.floatingPointConstant], true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseUse(): OmittedStatementNode {\r\n\r\n        this.pushError(\"Das USE-Statement wird von SQLite nicht unterstützt. Diese Anweisung wird daher einfach überlesen. Sie können eine andere Datenbank auswählen indem Sie in der Datenbankliste links darauf klicken.\", \"info\");\r\n\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken(); // skip 'use'\r\n        this.expect(TokenType.identifier, true);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n    parseAlterTable(): AlterTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"alter\"\r\n\r\n        let node: AlterTableNode = {\r\n            type: TokenType.keywordAlter,\r\n            kind: null,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1);\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"rename to\", \"rename column\", \"add column\", \"drop column\"], 1);\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordRename: this.parseRenameTableOrColumn(node); break;\r\n            case TokenType.keywordAdd: this.parseAlterTableAdd(node); break;\r\n            case TokenType.keywordDrop: this.parseDropColumn(node); break;\r\n            default:\r\n                this.pushError(\"Erwartet wird rename to, rename column, add column oder drop column\");\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseRenameTableOrColumn(node: AlterTableNode) {\r\n\r\n        this.nextToken();\r\n        if (!this.comesToken(TokenType.keywordTo)) {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, [\"column\", \"to\"], 3);\r\n        }\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordTo:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                node.kind = \"renameTable\";\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newTableName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Tabellenname.\");\r\n                }\r\n                return;\r\n            case TokenType.keywordColumn:\r\n                this.nextToken();\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n                if (!this.comesToken(TokenType.identifier)) {\r\n                    this.pushError(\"Erwartet wird der Name einer Spalte der Tabelle \" + node.tableIdentifier + \".\");\r\n                    return;\r\n                }\r\n                node.kind = \"renameColumn\";\r\n                node.oldColumnName = <string>this.cct.value;\r\n                node.oldColumnPosition = this.getCurrentPosition();\r\n                this.nextToken();\r\n                this.addCompletionHintHere(false, false, [\"to\"], 3);\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (!this.expect(TokenType.keywordTo, true)) return;\r\n                node.endPosition = this.getEndOfCurrentToken();\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.newColumnName = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    node.endPosition = this.getEndOfCurrentToken();\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der neue Spaltenname.\");\r\n                }\r\n                return;\r\n            default:\r\n                this.pushError(\"Erwartet wird das Schlüsselwort 'to' (zum Umbenennen der Tabelle) oder das Schlüsselwor 'column' (zum Umbenennen einer Spalte).\")\r\n                return;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseDropColumn(node: AlterTableNode) {\r\n        this.nextToken(); // skip 'drop'\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.oldColumnPosition = this.getCurrentPosition();\r\n        this.addCompletionHintHere(node.tableIdentifier, false, [], 3);\r\n\r\n        node.kind = \"dropColumn\";\r\n        node.endPosition = this.getEndOfCurrentToken();\r\n\r\n        if (this.comesToken(TokenType.identifier)) {\r\n            node.oldColumnName = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, die gelöscht werden soll.\");\r\n        }\r\n\r\n    }\r\n\r\n    parseAlterTableAdd(node: AlterTableNode) {\r\n        do {\r\n            this.nextToken(); // skip \"add\" or \",\"\r\n            this.comesToken(TokenType.keywordAdd, true);\r\n            let unique: boolean = false;\r\n            switch (this.tt) {\r\n                case TokenType.keywordColumn:\r\n                    this.parseAddColumn(node);\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    this.parseAddPrimaryKey(node);\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.nextToken();\r\n                    unique = true;\r\n                    this.expect([TokenType.keywordIndex, TokenType.keywordKey], false);\r\n                case TokenType.keywordKey:\r\n                case TokenType.keywordIndex:\r\n                    this.parseAddIndex(node, unique);\r\n                    break;\r\n                case TokenType.keywordModify:\r\n                    this.parseModifyColumn(node);\r\n                    break;\r\n                case TokenType.keywordConstraint:\r\n                    this.parseAddConstraint(node);\r\n                    break;\r\n            }\r\n        } while (this.tt == TokenType.comma);\r\n    }\r\n\r\n    parseAddConstraint(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"constraint\"\r\n        if (!this.expect(TokenType.identifier)) return;\r\n\r\n        if (this.comesToken(TokenType.keywordForeign)) {\r\n            let fki = this.parseForeignKeyDefinition();\r\n            if (fki != null) {\r\n                if (node.foreignKeys == null) node.foreignKeys = [];\r\n                node.foreignKeys.push(fki);\r\n                node.kind = \"omittedKind\";\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseForeignKeyDefinition(): ForeignKeyInfo {\r\n        let fki: ForeignKeyInfo = { column: \"\", referencesTable: \"\", referencesColumn: \"\", referencesPosition: this.getCurrentPosition() };\r\n        if (!this.expect(TokenType.keywordForeign)) return;\r\n        if (!this.expect(TokenType.keywordKey)) return;\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der Fremdschlüsselspalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.column = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n        this.parseReferences(fki);\r\n        return fki;\r\n    }\r\n\r\n    parseReferences(fki: ForeignKeyInfo) {\r\n\r\n        if (!this.expect(TokenType.keywordReferences)) return;\r\n\r\n        this.addCompletionHintHere(false, true, []);\r\n\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Tabelle wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesTable = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, fki.referencesTable, false, []);\r\n\r\n\r\n        if (!this.expect(TokenType.leftBracket)) return;\r\n        if (!this.comesToken(TokenType.identifier)) {\r\n            this.pushError(\"Der Bezeichner der referenzierten Spalte wird erwartet.\");\r\n            return;\r\n        }\r\n\r\n        fki.referencesColumn = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        if (!this.expect(TokenType.rightBracket)) return;\r\n\r\n        while (this.tt == TokenType.keywordOn) {\r\n            this.nextToken();\r\n            let kind: \"onDelete\" | \"onUpdate\" | \"\" = \"\";\r\n\r\n            switch (this.tt) {\r\n                //@ts-ignore\r\n                case TokenType.keywordDelete:\r\n                    kind = \"onDelete\";\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordUpdate:\r\n                    kind = \"onUpdate\";\r\n                    break;\r\n            }\r\n\r\n            if (kind == \"\") {\r\n                this.pushError(\"Nach 'on' wird 'delete' oder 'update' erwartet.\");\r\n                if (!this.comesToken([TokenType.keywordCascade, TokenType.keywordRestrict, TokenType.keywordSet, TokenType.keywordNo])) {\r\n                    this.nextToken();\r\n                    kind = \"onDelete\";\r\n                }\r\n            } else {\r\n                this.nextToken();\r\n            }\r\n\r\n            switch (this.tt) {\r\n                //@ts-ignore\r\n                case TokenType.keywordCascade:\r\n                //@ts-ignore\r\n                case TokenType.keywordRestrict:\r\n                    fki[kind] = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordSet:\r\n                    fki[kind] = \"set \";\r\n                    this.nextToken();\r\n                    if ([TokenType.keywordNull, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n                        fki[kind] += this.cct.value;\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.pushError(\"Nach 'on delete/update set' wird 'null' oder 'default' erwartet.\");\r\n                    }\r\n                    break;\r\n                //@ts-ignore\r\n                case TokenType.keywordNo:\r\n                    this.nextToken();\r\n                    if (this.expect(TokenType.keywordAction), true) {\r\n                        fki[kind] = \"no action\";\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushError(\"Nach 'on delete/update' wird 'cascade', 'set null', 'set default' oder 'no action' erwartet.\");\r\n                    break;\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    parseModifyColumn(node: AlterTableNode) {\r\n        this.nextToken();\r\n        let modifyColumnInfo = this.parseColumnDefinition(false);\r\n        if (modifyColumnInfo != null) {\r\n            if (node.modifyColumnInfo == null) node.modifyColumnInfo = [];\r\n            node.modifyColumnInfo.push(modifyColumnInfo);\r\n        }\r\n    }\r\n\r\n    parseAddPrimaryKey(node: AlterTableNode) {\r\n        this.nextToken(); // skip \"primary\"\r\n        node.primaryKeys = [];\r\n        if (this.expect(TokenType.keywordKey, true) && this.expect(TokenType.leftBracket, false)) {\r\n            do {\r\n                this.nextToken();\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.primaryKeys.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                }\r\n            } while (this.tt == TokenType.comma)\r\n        }\r\n        if (this.expect(TokenType.rightBracket, true)) {\r\n            node.kind = \"omittedKind\";\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddIndex(node: AlterTableNode, unique: boolean) {\r\n        this.nextToken(); // skip \"key\" | \"index\"\r\n\r\n        let index = { index_name: \"\", column: \"\", unique: unique }\r\n        if (this.tt == TokenType.identifier) {\r\n            index.index_name = <string>this.cct.value;\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner des Index.\");\r\n            return null;\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return null;\r\n        if (this.tt == TokenType.identifier) {\r\n            index.column = <string>this.cct.value;\r\n            this.nextToken();\r\n            if (node.indices == null) node.indices = [];\r\n            node.indices.push(index);\r\n        } else {\r\n            this.pushError(\"Erwartet wird der Bezeichner der Spalte, für die ein Index erstellt werden soll.\");\r\n            return null;\r\n        }\r\n\r\n        node.kind = \"omittedKind\";\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return null;\r\n    }\r\n\r\n    parseAddColumn(node: AlterTableNode) {\r\n        node.kind = \"addColumn\";\r\n        this.comesToken(TokenType.keywordColumn, true);\r\n        node.columnDefBegin = this.getCurrentPosition();\r\n        node.columnDef = this.parseColumnDefinition(false);\r\n    }\r\n\r\n    parseDropTableOrView(): DropTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Drop\"\r\n\r\n        let node: DropTableNode = {\r\n            type: TokenType.keywordDrop,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            ifExists: false\r\n        }\r\n\r\n        if (!this.expect([TokenType.keywordTable, TokenType.keywordView], true)) {\r\n            this.addCompletionHintHere(false, false, [\"table\", \"view\"], 1);\r\n        }\r\n\r\n        if (this.comesToken(TokenType.keywordIf, true)) {\r\n            node.ifExists = true;\r\n            this.expect(TokenType.keywordExists, true);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \";\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    parseDelete(): DeleteNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"Delete\"\r\n\r\n        let node: DeleteNode = {\r\n            type: TokenType.keywordDelete,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordFrom, true)) {\r\n            this.addCompletionHintHere(false, false, [\"from\"], 1);\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" where\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"where\\n\\t\"], 1);\r\n        if (this.tt != TokenType.keywordWhere) return node;\r\n\r\n        this.nextToken(); // skip \"where\"\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n\r\n        node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n        node.whereNode = this.parseTerm();\r\n        node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n        this.module.addCompletionHint(node.whereNodeBegin, this.getCurrentPositionPlus(3), node.tableIdentifier, false, []);\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        return node;\r\n\r\n    }\r\n\r\n    parseUpdate(): UpdateNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"update\"\r\n\r\n        let node: UpdateNode = {\r\n            type: TokenType.keywordUpdate,\r\n            position: startPosition,\r\n            endPosition: this.getEndOfPosition(this.getCurrentPosition()),\r\n            symbolTable: null,\r\n            tableIdentifier: null,\r\n            tableIdentifierPosition: null,\r\n            columnIdentifiers: [],\r\n            columnIdentifierPositions: [],\r\n            values: [],\r\n            valuePosBegin: [],\r\n            valuePosEnd: [],\r\n            whereNode: null,\r\n            whereNodeBegin: null,\r\n            whereNodeEnd: null\r\n        }\r\n\r\n        this.addCompletionHintHere(false, true, [], 1, \"\", \" set\\n\\t\");\r\n        if (!this.expect(TokenType.identifier, false)) return node;\r\n\r\n        node.tableIdentifier = <string>this.cct.value;\r\n        node.tableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        this.addCompletionHintHere(false, false, [\"set\\n\\t\"], 1);\r\n        if (!this.expect(TokenType.keywordSet)) return node;\r\n        let first: boolean = true;\r\n        do {\r\n            this.addCompletionHintHere(node.tableIdentifier, false, first ? [] : ['where'], 1, null, \" = \");\r\n            first = false;\r\n            if (this.tt != TokenType.identifier) {\r\n                this.pushError(\"Hier wird der Bezeichner derjenigen Spalte der Tabelle \" + node.tableIdentifier + \" erwaretet, deren Wert verändert werden soll.\", \"error\");\r\n                break;\r\n            }\r\n\r\n            node.columnIdentifiers.push(<string>this.cct.value);\r\n            node.columnIdentifierPositions.push(this.getCurrentPosition());\r\n            this.nextToken();\r\n\r\n            this.expect(TokenType.equal, true);\r\n\r\n            node.valuePosBegin.push(this.getCurrentPosition());\r\n            node.values.push(this.parseTerm());\r\n            node.valuePosEnd.push(this.getCurrentPosition());\r\n\r\n        } while (this.comesToken(TokenType.comma, true));\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        if (this.lastToken.tt != TokenType.comma || this.comesToken(TokenType.keywordWhere)) {\r\n            if (!this.expect(TokenType.keywordWhere, true)) return node;\r\n\r\n            node.whereNodeBegin = this.getEndOfPosition(this.lastToken.position);\r\n            node.whereNode = this.parseTerm();\r\n            node.whereNodeEnd = this.getCurrentPosition();\r\n\r\n            this.module.addCompletionHint(node.whereNodeBegin, node.whereNodeEnd, node.tableIdentifier, false, []);\r\n\r\n            node.endPosition = this.getCurrentPosition();\r\n        } else {\r\n            this.comesToken(TokenType.keywordWhere, true); // skip where, if present\r\n        }\r\n        return node;\r\n\r\n    }\r\n\r\n    parseCreateTableOrDatabaseOrView(): CreateTableNode | OmittedStatementNode | CreateViewNode {\r\n        switch (this.ct[1].tt) {\r\n            case TokenType.keywordDatabase:\r\n                return this.parseCreateDatabase();\r\n            case TokenType.keywordTable:\r\n                return this.parseCreateTable();\r\n            case TokenType.keywordView:\r\n                return this.parseCreateView();\r\n            case TokenType.keywordSchema:\r\n            default:\r\n                this.nextToken();\r\n                this.pushError(\"Nach 'create' wird 'table' erwartet.\");\r\n                this.nextToken();\r\n                return null;\r\n        }\r\n    }\r\n\r\n    parseCreateDatabase(): OmittedStatementNode {\r\n        let node: OmittedStatementNode = {\r\n            type: TokenType.omittedeStatement,\r\n            position: this.getCurrentPosition(),\r\n            endPosition: null,\r\n            symbolTable: null\r\n        }\r\n\r\n        this.nextToken();\r\n        this.pushError(\"Die CREATE-DATABASE-Anweisung wird von der SQLite-Engine nicht unterstützt. Sie können eine neue Datenbank anlegen, indem Sie auf den entsprechenden Button oberhalb der Liste der Datenbanken (linke Seite des Fensters) klicken. Diese Anweisung wird überlesen.\", \"info\");\r\n        while (this.tt != TokenType.semicolon && this.tt != TokenType.endofSourcecode) {\r\n            node.endPosition = this.getEndOfCurrentToken();\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseCreateView(): CreateViewNode {\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"create\"\r\n        this.nextToken(); // skip \"view\"\r\n\r\n        let ifNotExists: boolean = false;\r\n        if (this.comesToken(TokenType.keywordIf)) {\r\n            this.nextToken();\r\n            this.expect(TokenType.keywordNot, true);\r\n            this.expect(TokenType.keywordExists, true);\r\n            ifNotExists = true;\r\n        }\r\n\r\n        let identifier = \"\";\r\n        if (!this.expect(TokenType.identifier, false)) {\r\n            return null;\r\n        }\r\n\r\n        identifier = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let columnIdentifiers: string[] = [];\r\n\r\n        if (this.comesToken(TokenType.leftBracket, true)) {\r\n\r\n            do {\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    columnIdentifiers.push(<string>this.cct.value)\r\n                }\r\n                this.nextToken();\r\n            } while (this.comesToken(TokenType.comma, true))\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordAs, true)) {\r\n            this.module.addCompletionHint(this.getCurrentPosition(), this.getCurrentPositionPlus(2), false, false, [\"as\"]);\r\n\r\n            return null;\r\n        }\r\n\r\n        if (!this.expect(TokenType.keywordSelect, false)) {\r\n            this.module.addCompletionHint(this.getCurrentPosition(), this.getCurrentPositionPlus(2), false, false, [\"select\"]);\r\n            return null;\r\n        }\r\n\r\n        let selectStatement = this.parseSelect();\r\n\r\n        let node: CreateViewNode = {\r\n            type: TokenType.keywordView,\r\n            identifier: identifier,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            symbolTable: null,\r\n            ifNotExists: ifNotExists,\r\n            columnIdentifierList: columnIdentifiers,\r\n            selectStatement: selectStatement\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseCreateTable(): CreateTableNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"create\"\r\n\r\n        if (!this.expect(TokenType.keywordTable, true)) {\r\n            this.module.addCompletionHint(startPosition, this.getCurrentPositionPlus(3), false, false, [\"table\"]);\r\n        }\r\n\r\n        let ifNotExists: boolean = false;\r\n        if (this.comesToken(TokenType.keywordIf)) {\r\n            this.nextToken();\r\n            this.expect(TokenType.keywordNot, true);\r\n            this.expect(TokenType.keywordExists, true);\r\n            ifNotExists = true;\r\n        }\r\n\r\n        let identifier = \"\";\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            identifier = <string>this.cct.value;\r\n            let pos1 = this.getCurrentPosition();\r\n            let pos2 = this.getCurrentPositionPlus(identifier.length + 3);\r\n            this.nextToken();\r\n            if (!this.comesToken(TokenType.leftBracket)) {\r\n                this.module.addCompletionHint(pos1, pos2, false, false, [\"(\"]);\r\n            }\r\n        }\r\n\r\n        let node: CreateTableNode = {\r\n            type: TokenType.keywordCreate,\r\n            identifier: identifier,\r\n            position: startPosition,\r\n            endPosition: null,\r\n            columnList: [],\r\n            symbolTable: null,\r\n            combinedPrimaryKeyColumns: [],\r\n            foreignKeyInfoList: [],\r\n            ifNotExists: ifNotExists,\r\n            uniqueConstraints: []\r\n        }\r\n\r\n        if (!this.expect(TokenType.leftBracket, true)) return node;\r\n\r\n        let primaryKeyAlreadyDefined: boolean = false;\r\n        let first: boolean = true;\r\n\r\n        while (this.tt != TokenType.rightBracket) {\r\n            if (!first) this.expect(TokenType.comma, true);\r\n            first = false;\r\n            if (this.comesToken(TokenType.keywordConstraint, true)) {\r\n                this.expect(TokenType.identifier, true);\r\n                this.expect([TokenType.keywordForeign, TokenType.keywordPrimary, TokenType.keywordUnique], false);\r\n            }\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"Je Tabelle darf nur ein einziger Primärschlüssel definiert werden.\", \"error\", this.getCurrentPosition());\r\n                    this.parsePrimaryKeyTerm(primaryKeyAlreadyDefined, node);\r\n                    primaryKeyAlreadyDefined = true;\r\n                    break;\r\n                case TokenType.keywordKey:   //   KEY `CountryCode` (`CountryCode`),\r\n                    this.nextToken();\r\n                    this.comesToken(TokenType.identifier, true);\r\n                    this.comesToken(TokenType.leftBracket, true);\r\n                    this.comesToken(TokenType.identifier, true);\r\n                    this.comesToken(TokenType.rightBracket, true);\r\n                    break;\r\n                case TokenType.keywordUnique:\r\n                    this.parseUniqueTerm(node);\r\n                    break;\r\n                case TokenType.keywordForeign:\r\n                    let fki = this.parseForeignKeyDefinition();\r\n                    if (fki != null) {\r\n                        node.foreignKeyInfoList.push(fki);\r\n                    }\r\n                    break;\r\n                case TokenType.identifier:\r\n                    let columnNode = this.parseColumnDefinition(primaryKeyAlreadyDefined);\r\n                    node.columnList.push(columnNode);\r\n                    primaryKeyAlreadyDefined = primaryKeyAlreadyDefined || columnNode.isPrimary;\r\n                    break;\r\n                default:\r\n                    this.pushError(TokenTypeReadable[this.tt] + \" wird hier nicht erwartet.\", \"error\");\r\n                    break;\r\n            }\r\n            if (!this.comesToken(TokenType.comma)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        while ([TokenType.keywordAutoincrement, TokenType.keywordEngine, TokenType.keywordDefault, TokenType.keywordCollate].indexOf(this.tt) >= 0) {\r\n            switch (this.tt) {\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordEngine:\r\n                    this.nextToken();\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordCharset, TokenType.keywordCharacter], true);\r\n                    this.skip(TokenType.keywordSet);\r\n                    this.skip(TokenType.equal);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.equal, true);\r\n                    this.expect(TokenType.integerConstant, true);\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let column of node.columnList) {\r\n            if (column.isAutoIncrement && !(column.isPrimary || node.combinedPrimaryKeyColumns.indexOf(column.identifier) >= 0)) {\r\n                this.pushError(\"autoincrement gibt es nur bei Primärschlüsseln, d.h. es fehlt wahrscheinlich 'primary key'.\", \"warning\", node.position);\r\n            }\r\n        }\r\n\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    parsePrimaryKeyTerm(primaryKeyAlreadyDefined: boolean, node: CreateTableNode) {\r\n        if (primaryKeyAlreadyDefined) {\r\n            this.pushError(\"Die Tabelle kann nur einen einzigen Primärschlüssel haben.\");\r\n        }\r\n        this.nextToken(); // skip \"primary\"\r\n        this.expect(TokenType.keywordKey, true);\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    node.combinedPrimaryKeyColumns.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseUniqueTerm(node: CreateTableNode) {\r\n        this.nextToken(); // skip \"unique\"\r\n\r\n        let columns: string[] = node.columnList.map(c => c.identifier);\r\n        let uniqueConstraint: string[] = [];\r\n        node.uniqueConstraints.push(uniqueConstraint);\r\n\r\n        this.addCompletionHintHere(false, false, columns);\r\n        if (this.comesToken(TokenType.leftBracket)) {\r\n            this.addCompletionHintHere(false, false, columns);\r\n            this.nextToken();\r\n\r\n            while (true) {\r\n                if (this.comesToken(TokenType.identifier)) {\r\n                    uniqueConstraint.push(<string>this.cct.value);\r\n                    this.nextToken();\r\n                    this.addCompletionHintHere(false, false, columns, 1);\r\n                    if (!this.comesToken(TokenType.comma)) {\r\n                        break;\r\n                    } else {\r\n                        this.nextToken();\r\n                        this.addCompletionHintHere(false, false, columns);\r\n                    }\r\n                } else {\r\n                    this.pushError(\"Der Bezeichner einer Spalte wird erwartet. Gefunden wurde: \" + this.cct.value);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n        } else {\r\n            this.pushError(\"( erwartet.\");\r\n        }\r\n    }\r\n\r\n    parseColumnDefinition(primaryKeyAlreadyDefined: boolean): CreateTableColumnNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let identifier = <string>this.cct.value;\r\n        this.nextToken();\r\n\r\n        let node: CreateTableColumnNode = {\r\n            type: TokenType.columnDef,\r\n            identifier: identifier,\r\n            isPrimary: false,\r\n            isAutoIncrement: false,\r\n            position: position,\r\n            baseType: null,\r\n            notNull: false\r\n        }\r\n\r\n        this.parseType(node, primaryKeyAlreadyDefined);\r\n\r\n        return node;\r\n\r\n    }\r\n\r\n    addCompletionHintHere(hintColumns: boolean | string, hintTables: boolean, hints: string[], additionalColumns: number = 0, praefix: string = \"\", suffix: string = \"\") {\r\n        let pos0 = this.lastToken.position;\r\n        let pos1 = this.getCurrentPosition();\r\n        pos1.column += 1 + additionalColumns\r\n        this.module.addCompletionHint(this.getEndOfPosition(pos0), pos1, hintColumns, hintTables, hints, null, praefix, suffix);\r\n    }\r\n\r\n    identifierMap: { [key: string]: string } = { 'year': 'int', 'binary': 'varchar', 'varbinary': 'varchar' };\r\n\r\n    parseType(node: CreateTableColumnNode, primaryKeyAlreadyDefined: boolean) {\r\n\r\n        let datatypes = SQLBaseType.baseTypes.map(type => type.toString());\r\n        this.addCompletionHintHere(false, false, datatypes);\r\n\r\n        if (!this.expect([TokenType.identifier, TokenType.keywordEnum], false)) {\r\n            this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + this.cct.value);\r\n            return;\r\n        }\r\n\r\n        let type: SQLBaseType;\r\n\r\n        if (this.cct.tt == TokenType.keywordEnum) {\r\n            this.nextToken();\r\n\r\n            if(this.expect(TokenType.leftBracket, true)){\r\n    \r\n                let constants: ConstantNode[] = [];\r\n                //@ts-ignore\r\n                while(!this.comesToken(TokenType.rightBracket, true) && !this.isEnd()){\r\n    \r\n                    let constant = this.parseConstant();\r\n                    if(constant != null) constants.push(constant);\r\n    \r\n                    if(this.comesToken(TokenType.comma)) this.nextToken();\r\n    \r\n                }\r\n    \r\n                if(constants.length > 0){\r\n                    switch(constants[0].constantType){\r\n                        case TokenType.integerConstant:\r\n                        case TokenType.floatingPointConstant:\r\n                            type = new SQLNumberEnumType(constants.map(c => c.constant));\r\n                            break;\r\n                        default:\r\n                            type = new SQLTextEnumType(constants.map(c => \"\" + c.constant));\r\n                            break;\r\n                    }\r\n                } else {\r\n                    type = new SQLTextEnumType([]);\r\n                }\r\n    \r\n                node.baseType = type;\r\n\r\n            } \r\n\r\n\r\n        } else {\r\n            let identifier = <string>this.cct.value;\r\n            let identifierPos = this.getCurrentPosition()\r\n\r\n            let mappedIdentifier: string = this.identifierMap[identifier.toLocaleLowerCase()];\r\n\r\n            if (mappedIdentifier != null) {\r\n                identifier = mappedIdentifier;\r\n            }\r\n\r\n            type = SQLBaseType.getBaseType(identifier);\r\n            if (type == null) {\r\n                this.pushError(\"Erwartet wird ein Datentyp. Gefunden wurde: \" + identifier);\r\n            }\r\n            node.baseType = type;\r\n            this.nextToken();\r\n\r\n            if (this.tt == TokenType.leftBracket) {\r\n                this.nextToken();\r\n                node.parameters = [];\r\n                //@ts-ignore\r\n                while (this.tt == TokenType.integerConstant) {\r\n                    node.parameters.push(<number>this.cct.value);\r\n                    this.nextToken();\r\n                    //@ts-ignore\r\n                    if (this.tt != TokenType.comma) break;\r\n                    this.nextToken();\r\n                    //@ts-ignore\r\n                    if (this.tt != TokenType.integerConstant) {\r\n                        this.pushError(\"Erwartet wird eine ganze Zahl, gefunden wurde: \" + this.cct.value);\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (type != null && node.parameters.length > type.parameterDescriptions.length) {\r\n                    this.pushError(\"Der Datentyp \" + type.toString() + \" hat höchstens \" + type.parameterDescriptions.length + \" Parameter.\");\r\n                }\r\n\r\n                this.expect(TokenType.rightBracket, true);\r\n            }\r\n\r\n            if (identifier != null && node.parameters == null) {\r\n                switch (identifier.toLocaleLowerCase()) {\r\n                    case \"char\":\r\n                        node.parameters = [1];\r\n                        break;\r\n                    case \"varchar\":\r\n                        node.parameters = [1];\r\n                        this.pushError(\"Hinter dem Datentyp varchar wird zwingend eine Längenangabe in Klammern erwaretet, also z.B. varchar(30)\", \"error\", identifierPos)\r\n                        break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        // primary key autoincrement\r\n        // references table(column)\r\n        // not null\r\n        if (this.tt != TokenType.comma) {\r\n            this.addCompletionHintHere(false, false, [\"primary key\", \"references\", \"not null\"]);\r\n        }\r\n\r\n        let alreadySeenKeywords: TokenType[] = [];\r\n\r\n        while ([TokenType.keywordOn, TokenType.keywordCharacter, TokenType.keywordComment, TokenType.keywordAutoincrement, TokenType.keywordKey, TokenType.keywordPrimary, TokenType.keywordNot, TokenType.keywordReferences, TokenType.keywordCollate, TokenType.keywordDefault].indexOf(this.tt) >= 0) {\r\n            if (alreadySeenKeywords.indexOf(this.tt) >= 0) {\r\n                this.pushError('Das Schlüsselwort ' + TokenTypeReadable[this.tt] + \" darf bei der Definition einer Spalte nicht öfters als ein Mal vorkommen.\");\r\n            }\r\n\r\n            alreadySeenKeywords.push(this.tt);\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordAutoincrement:\r\n                    this.nextToken();\r\n                    node.isAutoIncrement = true;\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.equal) {\r\n                        this.nextToken();\r\n                        this.expect(TokenType.integerConstant);\r\n                    } else {\r\n                        //@ts-ignore\r\n                        if (this.tt == TokenType.comma && this.ct[1].tt == TokenType.keywordAutoincrement) {\r\n                            this.nextToken();\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.keywordPrimary:\r\n                    if (primaryKeyAlreadyDefined) this.pushError(\"In einer Tabelle darf es nur einen einzigen primary key geben.\");\r\n                    this.nextToken(); // skip \"primary\"\r\n                    if (!this.expect(TokenType.keywordKey, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"key\"]);\r\n                    } else {\r\n                        if (!this.comesToken(TokenType.comma)) {\r\n                            this.addCompletionHintHere(false, false, [\"autoincrement, \\n\"])\r\n                        }\r\n                    }\r\n                    node.isPrimary = true;\r\n                    break;\r\n                case TokenType.keywordReferences:\r\n                    let fki: ForeignKeyInfo = { column: node.identifier, referencesColumn: \"\", referencesTable: \"\", referencesPosition: this.getCurrentPosition() };\r\n                    node.foreignKeyInfo = fki;\r\n                    this.parseReferences(fki);\r\n                    break;\r\n                case TokenType.keywordNot:\r\n                    this.nextToken();\r\n                    if (!this.expect(TokenType.keywordNull, true)) {\r\n                        this.addCompletionHintHere(false, false, [\"null\"]);\r\n                    } else {\r\n                        this.addCompletionHintHere(false, false, [\"references\"]);\r\n                    }\r\n                    node.notNull = true;\r\n                    break;\r\n                case TokenType.keywordCollate:\r\n                    this.nextToken();\r\n                    node.collate = <string>this.cct.value;\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordCharacter:\r\n                    this.nextToken();\r\n                    this.expect(TokenType.keywordSet, true);\r\n                    this.expect(TokenType.identifier, true);\r\n                    break;\r\n                case TokenType.keywordDefault:\r\n                    this.nextToken();\r\n\r\n                    if (this.ct[1].tt == TokenType.leftBracket && this.ct[2].tt == TokenType.rightBracket) {\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        this.nextToken();\r\n                        break;\r\n                    }\r\n\r\n                    node.defaultValue = <string>this.cct.value;\r\n                    if (typeof this.cct.value == \"string\" && node.defaultValue.toLowerCase() != 'null') {\r\n                        node.defaultValue = \"'\" + node.defaultValue + \"'\";\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.keywordNull) {\r\n                        this.nextToken();\r\n                        break;\r\n                    } else if ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant].indexOf(this.tt) >= 0) {\r\n                        let constantType = SQLBaseType.fromConstantType(this.tt);\r\n                        if (!constantType.canCastTo(type)) {\r\n                            this.pushError(\"Die Konstante hinter 'default' passt nicht zum Datentyp der Spalte.\");\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                    break;\r\n                case TokenType.keywordComment:\r\n                    this.nextToken(); // Skip \"comment\"\r\n                    this.expect(TokenType.stringConstant, true);\r\n                    break;\r\n                case TokenType.keywordOn:\r\n                    this.nextToken();\r\n                    this.expect([TokenType.keywordUpdate], true);\r\n                    while (!this.comesToken([TokenType.comma, TokenType.endofSourcecode, TokenType.rightBracket])) this.nextToken();\r\n                    //@ts-ignore\r\n                    if (this.lastToken.tt == TokenType.leftBracket && this.tt == TokenType.rightBracket) this.nextToken();\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    parseInsert(): InsertNode {\r\n\r\n        let startPosition = this.getCurrentPosition();\r\n        let rightBracketPosition = startPosition;\r\n        this.nextToken(); // skip \"insert\"\r\n\r\n        this.expect(TokenType.keywordInto, true);\r\n\r\n        let node: InsertNode = {\r\n            type: TokenType.keywordInsert,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            valuesPosition: null,\r\n            columnsPosition: null,\r\n            symbolTable: null,\r\n            columnList: [],\r\n            values: [],\r\n            table: null\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            node.table = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            node.columnsPosition = { line: node.table.position.line, column: node.table.position.column + node.table.position.length, length: 0 };\r\n            this.nextToken();\r\n        } else {\r\n            this.pushError(\"Hier wird der Bezeichner einer Tabelle erwartet. Gefunden wurde: \" + this.cct.value, \"error\");\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n\r\n            this.nextToken();\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.identifier) {\r\n                    node.columnList.push({\r\n                        type: TokenType.identifier,\r\n                        identifier: this.cct.value + \"\",\r\n                        position: this.getCurrentPosition()\r\n                    })\r\n\r\n                } else {\r\n                    this.pushError(\"Erwartet wird der Bezeichner einer Spalte. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                }\r\n                this.nextToken();\r\n            }\r\n            rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n        }\r\n\r\n        node.valuesPosition = this.getCurrentPosition();\r\n\r\n\r\n        switch (this.tt) {\r\n            case TokenType.keywordValues:\r\n                this.nextToken();\r\n                this.parseValueLists(node.values);\r\n                break;\r\n            case TokenType.keywordSelect:\r\n            case TokenType.leftBracket:\r\n                if (this.getCurrentPosition().line <= rightBracketPosition.line + 1) {\r\n                    let selectNode = this.parseSelect();\r\n                    node.select = selectNode;\r\n                    // if(selectNode != null){\r\n                    //     if(node.columnList != null && selectNode.columnList != null){\r\n                    //         if(node.columnList.length != selectNode.columnList.length){\r\n                    //             this.pushError(\"Die insert-Anweisung erwartet \" + node.columnList.length + \" Werte je Datensatz, der nachfolgende select-Term liefert aber \" + selectNode.columnList.length + \" Werte je Datensatz.\");                        \r\n                    //         } \r\n                    //         node.select = selectNode;\r\n                    //     }\r\n                    // }\r\n                }\r\n                break;\r\n        }\r\n\r\n\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n\r\n        return node;\r\n    }\r\n\r\n\r\n    parseValueLists(values: ConstantNode[][]) {\r\n        let insideListTokens = [TokenType.keywordNull, TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        let outerFirst: boolean = true;\r\n\r\n        while (outerFirst || this.tt == TokenType.comma) {\r\n            if (!outerFirst) {\r\n                this.nextToken(); // consume comma\r\n            }\r\n            outerFirst = false;\r\n            let leftBracketPosition = this.getCurrentPosition();\r\n            if (!this.expect(TokenType.leftBracket, true)) {\r\n                break;\r\n            }\r\n            let line: ConstantNode[] = [];\r\n            let first: boolean = true;\r\n            //@ts-ignore\r\n            while (first || this.tt == TokenType.comma) {\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n                if (this.tt == TokenType.identifier) {\r\n                    if (this.cct.isDoubleQuotedIdentifier) {\r\n                        this.tt = TokenType.stringConstant\r\n                    } else {\r\n                        let lv = (this.cct.value + \"\").toLocaleLowerCase();\r\n                        if ([\"date\", \"_binary\"].indexOf(lv) >= 0) {\r\n                            this.nextToken();\r\n                        }\r\n                    }\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n                //@ts-ignore\r\n                if (insideListTokens.indexOf(this.tt) < 0) {\r\n                    this.pushError(\"Erwartet wird eine Konstante oder null. Gefunden wurde: \" + this.cct.value, \"error\");\r\n                    this.nextToken();\r\n                } else {\r\n                    line.push({\r\n                        constantType: this.tt,\r\n                        position: this.getCurrentPosition(),\r\n                        constant: this.cct.value,\r\n                        type: TokenType.constantNode\r\n                    });\r\n                    this.nextToken();\r\n                }\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (line.length == 0) {\r\n                this.pushError(\"Eine Zeile kann nur dann in die Tabelle eingefügt werden, wenn sie mindestens einen Spaltenwert besitzt.\", \"error\", leftBracketPosition);\r\n            } else {\r\n                values.push(line);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    parseConstant(): ConstantNode {\r\n        let constantNode: ConstantNode = {\r\n            constantType: this.tt,\r\n            position: this.getCurrentPosition(),\r\n            constant: this.cct.value,\r\n            type: TokenType.constantNode\r\n        }\r\n        this.nextToken();\r\n\r\n        return constantNode;\r\n    }\r\n\r\n    parseSelect(): SelectNode {\r\n        let startPosition = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"select\"\r\n\r\n        let columnListStart: TextPosition = {\r\n            line: startPosition.line,\r\n            column: startPosition.column + 6,\r\n            length: 1\r\n        };\r\n\r\n        let node: SelectNode = {\r\n            type: TokenType.keywordSelect,\r\n            position: startPosition,\r\n            endPosition: this.getCurrentPosition(),\r\n            symbolTableEndPosition: this.getCurrentPosition(),\r\n            symbolTable: null,\r\n            columnList: [],\r\n            fromNode: null,\r\n            whereNode: null,\r\n            parentStatement: null\r\n        }\r\n\r\n        node.columnList = this.parseColumnList([TokenType.keywordFrom, TokenType.semicolon, TokenType.endofSourcecode], true);\r\n\r\n        let columnListKeywordArray = [\"distinct\", \"as\", \"*\", \"from\"];\r\n        if (node.columnList.findIndex(c => c.type == TokenType.allColumns) >= 0) {\r\n            columnListKeywordArray = [\"from\"];\r\n        }\r\n\r\n        this.module.addCompletionHint(columnListStart, this.getCurrentPositionPlus(2), true, true, columnListKeywordArray)\r\n\r\n        let hasFrom = this.comesToken(TokenType.keywordFrom, true);\r\n        let fromListKeywordArray = [\"where\", \"join\", \"left\", \"right\", \"inner\", \"outer\", \"natural\", \"on\", \"as\", \", \"];\r\n        // parse from ...\r\n        if (!hasFrom) {\r\n            columnListKeywordArray.unshift(\"from\");\r\n        } else {\r\n            node.fromStartPosition = { line: this.lastToken.position.line, column: this.lastToken.position.column + this.lastToken.position.length, length: 0 };\r\n\r\n            let dontHint: string[] = [];\r\n            node.fromNode = this.parseTableOrSubQuery(dontHint);\r\n\r\n            fromListKeywordArray.splice(fromListKeywordArray.indexOf(this.lastToken.value + \"\"), 1);\r\n\r\n            let hintEndPosition = this.getCurrentPositionPlus(2);\r\n            if (this.comesToken(TokenType.semicolon)) {\r\n                hintEndPosition = this.getCurrentPosition();\r\n            }\r\n\r\n            node.fromEndPosition = this.getCurrentPosition();\r\n\r\n            // parse where...\r\n\r\n            let whereKeywordArray = [\"like\", \"union\"];\r\n            if (this.tt == TokenType.keywordWhere) {\r\n                let position = this.getCurrentPosition();\r\n                let whereStart = this.getCurrentPosition();\r\n                this.nextToken();\r\n                node.whereNode = this.parseTerm();\r\n                this.module.addCompletionHint(whereStart, this.getCurrentPositionPlus(4), true, true, whereKeywordArray)\r\n                // if (node.whereNode != null) node.whereNode.position = position;\r\n            } else {\r\n                fromListKeywordArray.push(\"where\");\r\n            }\r\n\r\n            let groupKeywordArray = [];\r\n            if (this.tt == TokenType.keywordGroup) {\r\n                let groupStart = this.getCurrentPosition();\r\n                node.groupByNode = this.parseGroupBy();\r\n                this.module.addCompletionHint(groupStart, this.getCurrentPosition(), true, true, groupKeywordArray);\r\n            } else {\r\n                whereKeywordArray.push(\"group by\");\r\n            }\r\n\r\n            if (this.tt == TokenType.keywordOrder) {\r\n                let orderStart = this.getCurrentPosition();\r\n                node.orderByNode = this.parseOrderBy();\r\n                this.module.addCompletionHint(orderStart, this.getCurrentPosition(), true, true, [\"asc\", \"desc\"]);\r\n            } else {\r\n                whereKeywordArray.push(\"order by\");\r\n                groupKeywordArray.push(\"order by\");\r\n            }\r\n\r\n            if (this.tt == TokenType.keywordLimit) {\r\n                node.limitNode = this.parseLimit();\r\n            }\r\n\r\n            node.symbolTableEndPosition = this.getCurrentPosition();\r\n\r\n            if (this.comesToken(TokenType.keywordUnion, true)) {\r\n                if (this.expect(TokenType.keywordSelect, false)) {\r\n                    node.union = this.parseSelect();\r\n                }\r\n            } else {\r\n                if (hasFrom && node.fromNode != null) {\r\n                    fromListKeywordArray.push(\"union\");\r\n                }\r\n            }\r\n\r\n            this.module.addCompletionHint(node.fromStartPosition, hintEndPosition, false, true, fromListKeywordArray, dontHint)\r\n\r\n        }\r\n\r\n\r\n        node.endPosition = this.getCurrentPosition();\r\n        node.endPosition.column += 3;\r\n\r\n        return node;\r\n    }\r\n\r\n    parseLimit(): LimitNode {\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        let numberOfRows: TermNode = this.parseTerm();\r\n        let ln: LimitNode = {\r\n            type: TokenType.keywordLimit,\r\n            position: position,\r\n            numberOfRows: numberOfRows\r\n        }\r\n        if (this.tt == TokenType.keywordOffset) {\r\n            this.nextToken();\r\n            ln.offset = this.parseTerm();\r\n        }\r\n        return ln;\r\n    }\r\n\r\n    parseGroupBy(): GroupByNode {\r\n        let position = this.getCurrentPosition();\r\n        this.expect(TokenType.keywordGroup, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n        let gbn: GroupByNode = {\r\n            type: TokenType.keywordGroup,\r\n            columnList: [],\r\n            position: position\r\n        }\r\n        let tokenTypesAfterGroupBy = [TokenType.keywordHaving, TokenType.keywordSelect, TokenType.keywordOrder, TokenType.keywordLimit, TokenType.rightBracket, TokenType.semicolon];\r\n        gbn.columnList = this.parseColumnList(tokenTypesAfterGroupBy, false).map(columnNode => columnNode.term);\r\n        if (this.tt == TokenType.keywordHaving) {\r\n            this.nextToken();\r\n            gbn.having = this.parseTerm();\r\n        }\r\n        return gbn;\r\n    }\r\n\r\n    parseOrderBy(): OrderByNode[] {\r\n        this.expect(TokenType.keywordOrder, true);\r\n        this.expect(TokenType.keywordBy, true);\r\n\r\n        let obnList: OrderByNode[] = [];\r\n        let first: boolean = true;\r\n\r\n        do {\r\n            if (first) {\r\n                first = false;\r\n            } else {\r\n                this.expect(TokenType.comma, true);\r\n            }\r\n            let column: TermNode = this.parseTerm();\r\n            let obn: OrderByNode = {\r\n                type: TokenType.keywordOrder,\r\n                position: this.getCurrentPosition(),\r\n                column: column\r\n            }\r\n            if ([TokenType.keywordAscending, TokenType.keywordDescending].indexOf(this.tt) >= 0) this.nextToken();\r\n            if (this.tt == TokenType.keywordNulls) {\r\n                this.nextToken();\r\n                this.expect([TokenType.keywordFirst, TokenType.keywordLast], true);\r\n            }\r\n            obnList.push(obn);\r\n        } while (this.tt == TokenType.comma);\r\n\r\n        return obnList;\r\n    }\r\n\r\n    parseTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        let leftSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        while (this.parseJoinOperator()) {\r\n\r\n            let rightSide: TableOrSubqueryNode = this.parseAtomicTableOrSubQuery(dontHint);\r\n\r\n            leftSide = {\r\n                type: TokenType.keywordJoin,\r\n                firstOperand: leftSide,\r\n                secondOperand: rightSide,\r\n                position: position,\r\n            }\r\n\r\n            if (this.tt == TokenType.keywordOn) {\r\n                this.nextToken();\r\n                leftSide.on = this.parseTerm();\r\n            }\r\n\r\n        }\r\n\r\n        return leftSide;\r\n\r\n    }\r\n\r\n    parseJoinOperator(): boolean {\r\n        if (this.tt == TokenType.comma) {\r\n            this.nextToken();\r\n            return true;\r\n        }\r\n        if (this.tt == TokenType.keywordNatural) this.nextToken();\r\n        switch (this.tt) {\r\n            case TokenType.keywordLeft:\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.keywordOuter) this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordInner:\r\n            case TokenType.keywordCross:\r\n                this.nextToken();\r\n                return this.expect(TokenType.keywordJoin, true);\r\n            case TokenType.keywordJoin:\r\n                this.nextToken();\r\n                return true;\r\n            default: return false;\r\n        }\r\n    }\r\n\r\n    parseAtomicTableOrSubQuery(dontHint: string[]): TableOrSubqueryNode {\r\n\r\n        if (!this.expect([TokenType.identifier, TokenType.leftBracket], false)) {\r\n            return null;\r\n        }\r\n\r\n        if (this.tt == TokenType.leftBracket) {\r\n            this.nextToken();\r\n            let ret: TableOrSubqueryNode;\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordSelect) {\r\n                let position = this.getCurrentPosition();\r\n                let selectStatement = this.parseSelect();\r\n                ret = {\r\n                    type: TokenType.subquery,\r\n                    alias: null,\r\n                    position: position,\r\n                    query: selectStatement\r\n                }\r\n            } else {\r\n                ret = this.parseTableOrSubQuery(dontHint);\r\n            }\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n\r\n            //@ts-ignore\r\n            if (this.tt == TokenType.keywordAs && ret.type == TokenType.subquery) {\r\n                this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    ret.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(ret.alias);\r\n                }\r\n            }\r\n\r\n            return ret;\r\n        }\r\n\r\n        if (this.tt == TokenType.identifier) {\r\n            let node: TableNode = {\r\n                type: TokenType.table,\r\n                identifier: <string>this.cct.value,\r\n                alias: null,\r\n                position: this.getCurrentPosition()\r\n            }\r\n            dontHint.push(node.identifier);\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            let comesKeywordAs: boolean = (this.tt == TokenType.keywordAs);\r\n            if (comesKeywordAs || this.tt == TokenType.identifier) {\r\n                if (comesKeywordAs) this.nextToken();\r\n                if (this.expect(TokenType.identifier, false)) {\r\n                    node.alias = <string>this.cct.value;\r\n                    this.nextToken();\r\n                    dontHint.push(node.alias);\r\n                }\r\n\r\n            }\r\n\r\n            return node;\r\n        }\r\n\r\n    }\r\n\r\n    parseColumnList(tokenTypesAfterListEnd: TokenType[], allowAliases: boolean): ColumnNode[] {\r\n        let columns: ColumnNode[] = [];\r\n\r\n        while ([TokenType.stringConstant, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.booleanConstant,\r\n        TokenType.identifier, TokenType.multiplication, TokenType.leftBracket, TokenType.keywordDistinct].indexOf(this.tt) >= 0) {\r\n            if (this.tt == TokenType.multiplication) {\r\n                columns.push({\r\n                    term: null,\r\n                    alias: null,\r\n                    distinct: false,\r\n                    position: this.getCurrentPosition(),\r\n                    type: TokenType.allColumns\r\n                });\r\n                this.nextToken();\r\n            } else {\r\n                let distinct = this.comesToken(TokenType.keywordDistinct, true);\r\n                let columnTerm = this.parseTerm();\r\n                if (columnTerm != null) {\r\n                    let column: ColumnNode = {\r\n                        type: TokenType.column,\r\n                        term: columnTerm,\r\n                        distinct: distinct,\r\n                        position: columnTerm.position\r\n                    }\r\n                    columns.push(column);\r\n                    if (this.comesToken(TokenType.keywordAs)) {\r\n                        this.nextToken();\r\n                        if (this.expect(TokenType.identifier, false)) {\r\n                            column.alias = \"\" + this.cct.value;\r\n                        }\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n            }\r\n            if (tokenTypesAfterListEnd.indexOf(this.tt) >= 0 || this.isEnd()) {\r\n                break;\r\n            }\r\n            this.expect(TokenType.comma, true);\r\n        }\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Es fehlt die kommaseparierte Liste der gewünschten Spalten.\", \"error\");\r\n        }\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parseUnary();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        if(this.tt == TokenType.keywordBetween){\r\n            return this.parseBetween(left);\r\n        }\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parseUnary();\r\n            }\r\n\r\n            left = {\r\n                type: TokenType.binaryOp,\r\n                position: position,\r\n                operator: operator,\r\n                firstOperand: left,\r\n                secondOperand: right\r\n            };\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n    \r\n    parseBetween(left: TermNode): TermNode {\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken(); // skip \"between\"\r\n        let secondOperand = this.parseTermBinary(2);\r\n        if(this.expect(TokenType.keywordAnd, true)){\r\n\r\n            let thirdOperand = this.parseTermBinary(2);\r\n\r\n            return {\r\n                type: TokenType.keywordBetween,\r\n                position: position,\r\n                firstOperand: left,\r\n                secondOperand: secondOperand, \r\n                thirdOperand: thirdOperand\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseBracket();\r\n            case TokenType.keywordNot:\r\n                position = position;\r\n                this.nextToken();\r\n                term = this.parseTermBinary(2);\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: TokenType.keywordNot\r\n                }\r\n            case TokenType.minus:\r\n                // case TokenType.not:\r\n                position = this.position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n                \r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.constantNode,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions,\r\n                        distinctBeforeParameters: parameters.distinctBeforeParameters\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.dot) {\r\n                        let position = this.getCurrentPosition();\r\n                        this.nextToken();\r\n                        this.expect(TokenType.identifier, false);\r\n                        let secondIdentifier: IdentifierNode = {\r\n                            type: TokenType.identifier,\r\n                            identifier: <string>this.cct.value,\r\n                            position: this.getCurrentPosition()\r\n                        }\r\n                        this.nextToken();\r\n                        term = {\r\n                            type: TokenType.dot,\r\n                            identifierLeft: <IdentifierNode>term,\r\n                            identifierRight: secondIdentifier,\r\n                            position: position\r\n                        }\r\n\r\n                    } else if ([TokenType.isNull, TokenType.isNotNull].indexOf(this.tt) >= 0) {\r\n                        term = {\r\n                            type: TokenType.unaryOp,\r\n                            operand: term,\r\n                            operator: this.tt,\r\n                            position: position\r\n                        };\r\n                        this.nextToken();\r\n                    }\r\n                }\r\n\r\n                return term;\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder eine Konstante. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    parseList(): ListNode {\r\n        let node: ListNode = {\r\n            type: TokenType.list,\r\n            position: this.getCurrentPosition(),\r\n            elements: []\r\n        }\r\n\r\n        let constantTypes = [TokenType.charConstant, TokenType.stringConstant, TokenType.booleanConstant, TokenType.floatingPointConstant, TokenType.integerConstant];\r\n\r\n        while (constantTypes.indexOf(this.tt) >= 0) {\r\n            node.elements.push({\r\n                type: TokenType.constantNode,\r\n                constant: this.cct.value,\r\n                constantType: this.tt,\r\n                position: this.cct.position\r\n            });\r\n            this.nextToken();\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    parseBracket(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n        let tokenBeforeBracket = this.lastToken;\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.keywordSelect) {\r\n            let selectNode = this.parseSelect();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return selectNode;\r\n        } else if ([TokenType.comma, TokenType.rightBracket].indexOf(this.ct[1].tt) >= 0 &&\r\n            [TokenType.keywordIn, TokenType.keywordNotIn].indexOf(tokenBeforeBracket.tt) >= 0) {\r\n            let listNode = this.parseList();\r\n            this.expect(TokenType.rightBracket, true);\r\n            return listNode;\r\n        } else {\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[], distinctBeforeParameters: boolean } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        let distinctBeforeParameters = this.comesToken(TokenType.keywordDistinct, true);\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [], distinctBeforeParameters: distinctBeforeParameters };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            if (this.tt == TokenType.multiplication) {\r\n                this.nextToken();\r\n                parameters.push({\r\n                    type: TokenType.allColumns,\r\n                    position: this.getCurrentPosition(),\r\n                });\r\n            } else {\r\n                let parameter = this.parseTerm();\r\n                if (parameter != null) {\r\n                    parameters.push(parameter);\r\n                }\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions, distinctBeforeParameters: distinctBeforeParameters };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions,\r\n                        distinctBeforeParameters: parameters.distinctBeforeParameters\r\n                    }\r\n                }\r\n                // else {\r\n                //     term = {\r\n                //         type: TokenType.pushAttribute,\r\n                //         position: position,\r\n                //         identifier: identifier,\r\n                //         object: term\r\n                //     }\r\n                // }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n\r\n}","import { ColumnStructure, TableStructure } from \"../../tools/DatabaseTools.js\";\r\nimport { SQLType, SQLBaseType, SQLDerivedType, SQLTextEnumType, SQLNumberEnumType } from \"./SQLTypes.js\";\r\n\r\n\r\nexport class Column {\r\n\r\n    references: Column;\r\n    fromColumnStructure?: ColumnStructure;\r\n    notNull: boolean;\r\n\r\n    constructor(public identifier: string, public type: SQLType, public table: Table, public isPrimaryKey: boolean, public isNullable: boolean, public defaultValue: string, public isAutoIncrement){\r\n\r\n    }\r\n\r\n    static fromColumnStructure(cs: ColumnStructure, table: Table): Column {\r\n\r\n        let regex1 = /^(\\w*) *(?:\\((.*)\\))?.*$/;\r\n\r\n        let typeMatch1 = cs.completeTypeSQL.match(regex1);\r\n        let baseTypeIdentifier: string = typeMatch1[1];\r\n        let commaSeparatedParameters: string = typeMatch1[2];\r\n\r\n        let parameterValues: number[] = [];\r\n        if(commaSeparatedParameters != null){\r\n            parameterValues = commaSeparatedParameters.split(',').map(v => parseInt(v.trim()));           \r\n        }\r\n\r\n        let type: SQLType;\r\n        \r\n        if(baseTypeIdentifier.indexOf('Enum') >= 0){\r\n            switch(baseTypeIdentifier){\r\n                case \"textEnum\":\r\n                    type = new SQLTextEnumType(cs.enumValues);\r\n                    break;\r\n                case \"realEnum\":\r\n                    type = new SQLNumberEnumType(cs.enumValues.map(v => Number.parseFloat(v)));\r\n                    break;\r\n                case \"integerEnum\":\r\n                    type = new SQLNumberEnumType(cs.enumValues.map(v => Number.parseInt(v)));\r\n                    break;\r\n            }\r\n        } else {\r\n            type = SQLBaseType.getBaseType(baseTypeIdentifier);\r\n        }\r\n        \r\n        if(parameterValues.length > 0 && type != null){\r\n            type = new SQLDerivedType(<SQLBaseType>type, parameterValues);\r\n        }\r\n\r\n        let column = new Column(cs.name, type, table, cs.isPrimaryKey, !cs.isPrimaryKey, cs.defaultValue, cs.isAutoIncrement);\r\n        column.notNull = cs.notNull;\r\n        \r\n        column.fromColumnStructure = cs;\r\n\r\n        return column;\r\n    }\r\n\r\n}\r\n\r\nexport class Table {\r\n    \r\n    public columns: Column[] = [];\r\n\r\n    public size: number;\r\n    type: (\"table\"|\"view\");\r\n\r\n    constructor(public identifier: string){\r\n\r\n    }\r\n\r\n    private static fromTableStructure(ts: TableStructure): Table {\r\n        let table: Table = new Table(ts.name);\r\n        table.columns = ts.columns.map( column => Column.fromColumnStructure(column, table));\r\n        table.size = ts.size;\r\n        table.type = ts.type;\r\n        return table;\r\n    }\r\n\r\n    static fromTableStructureList(tsList: TableStructure[]): Table[]{\r\n\r\n        if(tsList == null) tsList = [];\r\n\r\n        let tables: Table[] = tsList.map(ts => Table.fromTableStructure(ts));\r\n\r\n        let columnStructureToColumnMap: Map<ColumnStructure, Column> = new Map();\r\n        for(let table of tables){\r\n            for(let column of table.columns){\r\n                columnStructureToColumnMap.set(column.fromColumnStructure, column);\r\n            }\r\n        }\r\n\r\n        for(let table of tables){\r\n            for(let column of table.columns){\r\n                let referencedCs = column.fromColumnStructure.references;\r\n                if(referencedCs != null){\r\n                    let referencedColumn = columnStructureToColumnMap.get(referencedCs);\r\n                    column.references = referencedColumn;\r\n                }\r\n            }\r\n        }\r\n\r\n        return tables;\r\n    }\r\n\r\n}","import { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { Table, Column } from \"./SQLTable.js\";\r\n\r\nexport type Symbol = {\r\n    identifier: string;\r\n    table?: Table;\r\n    column?: Column;\r\n    tableAlias?: string;\r\n    posOfDefinition: TextPosition;\r\n    referencedOnPositions: TextPosition[];\r\n}\r\n\r\nexport class SymbolTable {\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    private symbols: Map<string, Symbol[]> = new Map();\r\n    symbolList: Symbol[] = [];\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n        }\r\n    }\r\n\r\n    extractDatabaseStructure(databaseStructure: DatabaseStructure) {\r\n        for (let table of Table.fromTableStructureList(databaseStructure?.tables)) {\r\n\r\n            this.storeTableSymbols(table);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    storeTableSymbols(table: Table){\r\n        this.storeSymbol({\r\n            identifier: table.identifier,\r\n            posOfDefinition: null,\r\n            referencedOnPositions: [],\r\n            table: table\r\n        });\r\n\r\n        for (let column of table.columns) {\r\n            this.storeSymbol({\r\n                identifier: column.identifier,\r\n                posOfDefinition: null,\r\n                referencedOnPositions: [],\r\n                column: column\r\n            });\r\n        }\r\n    }\r\n\r\n    storeSymbol(symbol: Symbol) {\r\n        let list: Symbol[] = this.symbols.get(symbol.identifier.toLowerCase());\r\n        if (list == null) {\r\n            list = [symbol];\r\n            this.symbols.set(symbol.identifier.toLowerCase(), list);\r\n        } else {\r\n            list.push(symbol);\r\n        }\r\n        this.symbolList.push(symbol);\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line && column < this.positionFrom.column) return false;\r\n        if (line == this.positionTo.line && column > this.positionTo.column + 1) return false;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    findTable(identifier: string): Table {\r\n        let tables = this.findTables(identifier);\r\n        if(tables.length == 0) return null;\r\n        return tables[0].table;\r\n    }\r\n\r\n    findTables(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.table != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    findColumn(identifier: string): Symbol[] {\r\n\r\n        let symbolTable: SymbolTable = this;\r\n        while(symbolTable != null){\r\n\r\n            let symbols = symbolTable.symbols.get(identifier.toLowerCase());\r\n            if(symbols != null){\r\n                symbols = symbols.filter(s => s.column != null);\r\n                if(symbols.length > 0){\r\n                    return symbols;\r\n                }\r\n            }\r\n\r\n            symbolTable = symbolTable.parent;\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\n\r\nexport class SQLMethodParameter {\r\n    type: SQLType;\r\n    constructor(public identifier: string, type: string){\r\n        this.type = SQLBaseType.getBaseType(type);\r\n    }\r\n}\r\n\r\nexport class SQLMethod {\r\n    acceptsStarParameter: boolean = false;\r\n    public returnType: SQLType;\r\n    constructor(public identifier: string, public isAggregating: boolean, returnType: string, public parameters: SQLMethodParameter[]){\r\n        this.returnType = SQLBaseType.getBaseType(returnType);\r\n    }\r\n\r\n}\r\n\r\nexport class SQLMethodStore {\r\n\r\n    static instance: SQLMethodStore;\r\n    public methods: SQLMethod[] = [];\r\n\r\n    static getInstance():SQLMethodStore {\r\n        if(this.instance == null){\r\n            this.instance = new SQLMethodStore();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    constructor(){\r\n        this.pushOneParameterMethod(\"abs\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"sin\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"cos\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"tan\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"max\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"max\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"max\" ,\"date\", \"date\");\r\n        this.pushOneParameterMethod(\"max\" ,\"time\", \"time\");\r\n        this.pushOneParameterMethod(\"max\" ,\"datetime\", \"datetime\");\r\n        this.pushOneParameterMethod(\"max\" ,\"timestamp\", \"timestamp\");\r\n        this.pushOneParameterMethod(\"min\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"min\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"min\" ,\"date\", \"date\");\r\n        this.pushOneParameterMethod(\"min\" ,\"time\", \"time\");\r\n        this.pushOneParameterMethod(\"min\" ,\"datetime\", \"datetime\");\r\n        this.pushOneParameterMethod(\"min\" ,\"timestamp\", \"timestamp\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"avg\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"sum\" ,\"float\", \"float\");\r\n        this.pushOneParameterMethod(\"sum\" ,\"integer\", \"integer\");\r\n        this.pushOneParameterMethod(\"concat\" ,\"text\", \"text\");\r\n        this.pushOneParameterMethod(\"upper\" ,\"text\", \"text\");\r\n        this.pushOneParameterMethod(\"lower\" ,\"text\", \"text\");\r\n        this.pushOneParameterMethod(\"length\" ,\"integer\", \"text\");\r\n        this.pushOneParameterMethod(\"month\" , \"integer\",\"date\");\r\n        this.pushOneParameterMethod(\"day\" , \"integer\",\"date\");\r\n        this.pushOneParameterMethod(\"year\" , \"integer\",\"date\");\r\n\r\n        let countMethod = new SQLMethod(\"count\", true, \"integer\", [new SQLMethodParameter(\"spalte\", \"text\")]);\r\n        countMethod.acceptsStarParameter = true;\r\n        this.methods.push(countMethod);\r\n\r\n        let strftimeMethod = new SQLMethod(\"strftime\", false, \"text\", [new SQLMethodParameter(\"formatstring\", \"text\"), new SQLMethodParameter(\"date\", \"date\")]);\r\n        strftimeMethod.acceptsStarParameter = true;\r\n        this.methods.push(strftimeMethod);\r\n\r\n    }\r\n    \r\n    getMethods(identifier: string){\r\n        return this.methods.filter(m => m.identifier == identifier.toLowerCase());\r\n    }\r\n\r\n\r\n    pushOneParameterMethod(identifier: string, returnType: string, parameterType: string){\r\n        this.methods.push(new SQLMethod(identifier, true, returnType, [new SQLMethodParameter(\"spalte\", parameterType)]));\r\n\r\n    }\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}\r\n\r\n\r\nexport function isDate(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          //Test which seperator is used '/' or '-'\r\n          var opera1 = inputText.split('/');\r\n          var opera2 = inputText.split('-');\r\n          var lopera1 = opera1.length;\r\n          var lopera2 = opera2.length;\r\n          // Extract the string into month, date and year\r\n          if (lopera1 > 1) {\r\n              var pdate = inputText.split('/');\r\n          }\r\n          else if (lopera2 > 1) {\r\n              var pdate = inputText.split('-');\r\n          }\r\n          if (pdate.length != 3) return false;\r\n          var dd = parseInt(pdate[2]);\r\n          var mm = parseInt(pdate[1]);\r\n          var yy = parseInt(pdate[0]);\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n\r\n  export function isDateTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n      var dateformat = /^\\d{4}[\\-](0[1-9]|1[012])[\\-](0[1-9]|[12][0-9]|3[01]) ([01][0-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      if (inputText.match(dateformat)) {\r\n          var splitStr = inputText.split(' ');\r\n          var dateStr = splitStr[0];\r\n          //var timeStr = splitStr[1];\r\n\r\n          if (dateStr.length != 10) return false;\r\n          var dd = parseInt(dateStr.substring(8,10));\r\n          var mm = parseInt(dateStr.substring(5, 7));\r\n          var yy = parseInt(dateStr.substring(0, 4));\r\n          // Create list of days of a month [assume there is no leap year by default]\r\n          var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n          if (mm == 1 || mm > 2) {\r\n              if (dd > ListofDays[mm - 1]) {\r\n                  return false;\r\n              }\r\n          }\r\n          if (mm == 2) {\r\n              var lyear = false;\r\n              if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                  lyear = true;\r\n              }\r\n              if ((lyear == false) && (dd >= 29)) {\r\n                  return false;\r\n              }\r\n              if ((lyear == true) && (dd > 29)) {\r\n                  return false;\r\n              }\r\n              return true;\r\n          }\r\n\r\n          return true;\r\n\r\n      }\r\n      else {\r\n          return false;\r\n      }\r\n  }\r\n  export function isTime(inputText: string) {\r\n\r\n      if (inputText == null || typeof inputText != 'string') return false;\r\n\r\n      var timeformat = /^([01][0-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n      // Match the date format through regular expression\r\n      return inputText.match(timeformat) != null;\r\n  }\r\n","import { DatabaseTool } from \"../../tools/DatabaseTools.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { CompletionHint, Module } from \"./Module.js\";\r\nimport { Symbol, SymbolTable } from \"./SymbolTable.js\";\r\nimport { AlterTableNode, ASTNode, BinaryOpNode, CreateTableNode, CreateViewNode, DeleteNode, DotNode, DropTableNode, IdentifierNode, InsertNode, MethodcallNode, SelectNode, TableOrSubqueryNode, TermNode, UpdateNode } from \"./AST.js\";\r\nimport { Error, ErrorLevel, QuickFix } from \"../lexer/Lexer.js\";\r\nimport { Column, Table } from \"./SQLTable.js\";\r\nimport { SQLBaseType, SQLType } from \"./SQLTypes.js\";\r\nimport { SQLMethodStore } from \"./SQLMethods.js\";\r\nimport { isDate, isDateTime, isTime } from \"../../tools/StringTools.js\";\r\n\r\n\r\nexport class SymbolResolver {\r\n\r\n    symbolTableStack: SymbolTable[] = [];\r\n    errorList: Error[];\r\n    module: Module;\r\n    databaseTool: DatabaseTool;\r\n    tables: Table[];\r\n\r\n    constructor(databaseTool: DatabaseTool) {\r\n        this.databaseTool = databaseTool;\r\n        this.tables = Table.fromTableStructureList(databaseTool.databaseStructure?.tables);\r\n    }\r\n\r\n    start(module: Module) {\r\n        this.module = module;\r\n        this.symbolTableStack = [];\r\n        this.errorList = [];\r\n\r\n        module.mainSymbolTable = new SymbolTable(null, { column: 0, line: 0, length: 0 }, { column: 0, line: 100000, length: 0 })\r\n\r\n        this.symbolTableStack.push(module.mainSymbolTable);\r\n\r\n        for (let statement of this.module.sqlStatements) {\r\n\r\n            let errorsBeforeStatement = this.errorList.length;\r\n\r\n            let astNode = statement.ast;\r\n            if (astNode == null) continue;\r\n\r\n            switch (astNode.type) {\r\n                case TokenType.keywordSelect:\r\n                    this.resolveSelect(astNode, statement.resultTypes);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordInsert:\r\n                    this.resolveInsert(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordCreate:\r\n                    this.resolveCreateTable(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordUpdate:\r\n                    this.resolveUpdate(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordDelete:\r\n                    this.resolveDelete(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordDrop:\r\n                    this.resolveDropTable(astNode);\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordAlter:\r\n                    this.resolveAlterTable(astNode)\r\n                    this.symbolTableStack.pop();\r\n                    break;\r\n                case TokenType.keywordView:\r\n                    this.resolveCreateView(astNode);\r\n                    this.symbolTableStack.pop();\r\n\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            statement.hasErrors = statement.hasErrors || this.errorList.length > errorsBeforeStatement;\r\n\r\n        }\r\n\r\n        module.errors[2] = this.errorList;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position: TextPosition, quickFix?: QuickFix) {\r\n        // if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n    getCurrentSymbolTable(): SymbolTable {\r\n        return this.symbolTableStack[this.symbolTableStack.length - 1];\r\n    }\r\n\r\n    pushNewSymbolTable(positionFrom: TextPosition, positionTo: TextPosition): SymbolTable {\r\n        if (positionTo == null) {\r\n            positionTo = {\r\n                line: 100000,\r\n                column: 1,\r\n                length: 1\r\n            }\r\n        };\r\n        let st: SymbolTable = new SymbolTable(this.getCurrentSymbolTable(), positionFrom, positionTo);\r\n        this.symbolTableStack.push(st);\r\n        return st;\r\n    }\r\n\r\n    resolveSelect(selectNode: SelectNode, resultTypes: SQLType[]): Table {\r\n        let resultTable: Table = new Table(null);\r\n\r\n        selectNode.symbolTable = this.pushNewSymbolTable(selectNode.position, selectNode.symbolTableEndPosition);\r\n\r\n        // From\r\n        let joinedTables: Table[] = [];\r\n        this.resolveTableOrSubQuery(selectNode.fromNode, joinedTables);\r\n        if (selectNode.fromStartPosition != null) {\r\n            let fromSymbolTable = new SymbolTable(this.getCurrentSymbolTable(), selectNode.fromStartPosition, selectNode.fromEndPosition);\r\n            fromSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n        }\r\n\r\n        // Column list\r\n        for (let columnNode of selectNode.columnList) {\r\n            if (columnNode.type == TokenType.allColumns) {\r\n                for (let table of joinedTables) {\r\n                    for (let column of table.columns) {\r\n                        let c: Column = new Column(column.identifier, column.type, resultTable, false, true, column.defaultValue, column.isAutoIncrement);\r\n                        resultTable.columns.push(c);\r\n                        resultTypes.push(column.type)\r\n                    }\r\n                }\r\n            } else {\r\n                this.resolveTerm(columnNode.term);\r\n                let c1: Column = new Column(columnNode.alias, columnNode.term.sqlType, resultTable, false, true, null, false);\r\n                resultTable.columns.push(c1);\r\n                resultTypes.push(columnNode.term.sqlType);\r\n                \r\n                if (c1.identifier != null) {\r\n                    selectNode.symbolTable.storeSymbol({\r\n                        identifier: c1.identifier,\r\n                        posOfDefinition: columnNode.term.position,\r\n                        referencedOnPositions: [],\r\n                        column: c1\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        // where...\r\n        if (selectNode.whereNode != null) {\r\n            let whereType = this.resolveTerm(selectNode.whereNode);\r\n            if (whereType != null && whereType.getBaseTypeName() != \"boolean\") {\r\n                this.pushError(\"Das Ergebnis des where-Teils einer select-Anweisung muss vom Typ boolean sein.\", \"error\", selectNode.whereNode.position);\r\n            }\r\n        }\r\n\r\n        // TODO: group by, order by\r\n\r\n        if(selectNode.union != null){\r\n            this.symbolTableStack.pop();\r\n            let secondTable = this.resolveSelect(selectNode.union, []);\r\n            if(secondTable.columns.length != resultTable.columns.length){\r\n                this.pushError(\"Die select-Anweisungen links und rechts vom Schlüsselwort 'union' müssen dieselbe Anzahl von Spalten besitzen.\", \"error\", selectNode.symbolTableEndPosition);\r\n            }\r\n        }\r\n\r\n        return resultTable;\r\n    }\r\n\r\n    resolveDropTable(node: DropTableNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) return;\r\n\r\n        if (!node.ifExists) {\r\n            let table = node.symbolTable.findTable(node.tableIdentifier);\r\n            if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n        }\r\n\r\n    }\r\n\r\n    resolveDelete(node: DeleteNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) return;\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null) this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n\r\n\r\n        // if(node.whereNodeBegin != null){\r\n        //     let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\r\n        //     symbolTable.storeTableSymbols(table);\r\n        // }\r\n\r\n\r\n        if (node.whereNode != null) {\r\n            let whereSymbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\r\n            if (table != null) whereSymbolTable.storeTableSymbols(table);\r\n            this.resolveTerm(node.whereNode);\r\n            this.symbolTableStack.pop();\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    resolveAlterTable(node: AlterTableNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) {\r\n            return;\r\n        }\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null) {\r\n            this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n        }\r\n\r\n        let oldColumn: Column = null;\r\n        if (node.oldColumnName != null) {\r\n            oldColumn = table.columns.find(c => c.identifier.toLocaleLowerCase() == node.oldColumnName.toLocaleLowerCase());\r\n            if (oldColumn == null) {\r\n                this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" hat keine Spalte mit dem Bezeichner \" + node.oldColumnName, \"error\", node.oldColumnPosition);\r\n            }\r\n        }\r\n\r\n        switch (node.kind) {\r\n            case \"dropColumn\":\r\n                // nothing to do as node.oldColumnName is checked above\r\n                break;\r\n            case \"addColumn\":\r\n                let columnNode = node.columnDef;\r\n                if (columnNode == null) break;\r\n                if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\r\n                    let fki = columnNode.foreignKeyInfo;\r\n                    let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\r\n                    if (tables.length == 1) {\r\n                        let table = tables[0].table;\r\n                        let column = table.columns.find(c => c.identifier == fki.referencesColumn);\r\n                        if (column != null && column.type != null) {\r\n                            if (!column.isPrimaryKey) {\r\n                                this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\r\n                            }\r\n                            if (!column.type.canCastTo(columnNode.baseType)) {\r\n                                this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\r\n                                    \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\r\n                                    column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case \"renameColumn\":\r\n                // nothing to do as node.oldColumnName is checked above\r\n                break;\r\n            case \"renameTable\":\r\n                // nothing to do \r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    resolveUpdate(node: UpdateNode) {\r\n        node.symbolTable = this.pushNewSymbolTable(node.position, node.endPosition);\r\n        node.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        if (node.tableIdentifier == null) {\r\n            return;\r\n        }\r\n\r\n        let table = node.symbolTable.findTable(node.tableIdentifier);\r\n        if (table == null){\r\n            this.pushError(\"Die Tabelle \" + node.tableIdentifier + \" ist nicht bekannt.\", \"error\", node.tableIdentifierPosition);\r\n        } else {\r\n            for (let i = 0; i < node.columnIdentifiers.length; i++) {\r\n                let ci = node.columnIdentifiers[i];\r\n                let ciPos = node.columnIdentifierPositions[i];\r\n                let value = node.values[i];\r\n    \r\n                if (ci == null) continue;\r\n                let column = table.columns.find(c => c.identifier == ci);\r\n    \r\n                if (column == null) {\r\n                    this.pushError(ci + \" ist kein Bezeichner einer Spalte der Tabelle \" + node.tableIdentifier + \".\", \"error\", ciPos);\r\n                }\r\n    \r\n                if (value == null) continue;\r\n                let symbolTable = this.pushNewSymbolTable(node.valuePosBegin[i], node.valuePosEnd[i]);\r\n                symbolTable.storeTableSymbols(table);\r\n                this.resolveTerm(value);\r\n                this.symbolTableStack.pop();\r\n    \r\n            }\r\n    \r\n            if (node.whereNodeBegin != null) {\r\n                let symbolTable = this.pushNewSymbolTable(node.whereNodeBegin, node.whereNodeEnd);\r\n                symbolTable.storeTableSymbols(table);\r\n            }\r\n    \r\n            if (node.whereNode != null) {\r\n                this.resolveTerm(node.whereNode);\r\n            }\r\n        }\r\n\r\n        this.symbolTableStack.pop();\r\n\r\n    }\r\n\r\n\r\n\r\n    resolveCreateTable(createTableNode: CreateTableNode) {\r\n\r\n        createTableNode.symbolTable = this.pushNewSymbolTable(createTableNode.position, createTableNode.endPosition);\r\n        createTableNode.symbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        let thisTable: Table = {\r\n            identifier: createTableNode.identifier,\r\n            columns: null,\r\n            size: 0,\r\n            type: \"table\"\r\n        }\r\n\r\n        thisTable.columns = createTableNode.columnList.map(c => {\r\n            return {\r\n                identifier: c.identifier,\r\n                isNullable: false,\r\n                isPrimaryKey: c.isPrimary,\r\n                isAutoIncrement: c.isAutoIncrement,\r\n                notNull: false,\r\n                references: null,\r\n                table: thisTable,\r\n                type: c.baseType,\r\n                defaultValue: c.defaultValue\r\n            }\r\n        });\r\n\r\n        createTableNode.symbolTable.storeTableSymbols(thisTable);\r\n\r\n        for (let columnNode of createTableNode.columnList) {\r\n            if (createTableNode.columnList.filter(c => c.identifier.toLocaleLowerCase() == columnNode.identifier.toLocaleLowerCase()).length > 1) {\r\n                this.pushError(\"Der Spaltenbezeichner \" + columnNode.identifier + \" darf in einer Tabelle nur ein einziges Mal verwendet werden\", \"error\", columnNode.position);\r\n            }\r\n\r\n            if (columnNode.foreignKeyInfo != null && columnNode.baseType != null) {\r\n                let fki = columnNode.foreignKeyInfo;\r\n                let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\r\n                if (tables.length == 1) {\r\n                    let table = tables[0].table;\r\n                    let column = table.columns.find(c => c.identifier == fki.referencesColumn);\r\n                    if (column != null && column.type != null) {\r\n                        if (!column.isPrimaryKey) {\r\n                            this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", columnNode.referencesPosition);\r\n                        }\r\n                        if (!column.type.canCastTo(columnNode.baseType)) {\r\n                            this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\r\n                                \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\r\n                                column.identifier + \" umgewandelt werden.\", \"error\", columnNode.referencesPosition);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        for (let fki of createTableNode.foreignKeyInfoList) {\r\n\r\n            let columnNode = createTableNode.columnList.find(cn => cn.identifier == fki.column);\r\n            if (columnNode == null) continue;\r\n\r\n            let tables = this.getCurrentSymbolTable().findTables(fki.referencesTable);\r\n            if (tables.length == 1) {\r\n                let table = tables[0].table;\r\n                let column = table.columns.find(c => c.identifier == fki.referencesColumn);\r\n                if (column != null && column.type != null) {\r\n                    if (!column.isPrimaryKey) {\r\n                        this.pushError(\"Die referenzierte Spalte \" + fki.referencesTable + \".\" + fki.referencesColumn + \" ist kein Primärschlüssel.\", \"warning\", fki.referencesPosition);\r\n                    }\r\n                    if (!column.type.canCastTo(columnNode.baseType)) {\r\n                        this.pushError(\"Der Datentyp \" + columnNode.baseType.toString() + \" der Spalte \" + columnNode.identifier +\r\n                            \" kann nich in den Datentyp \" + column.type.toString() + \" der referenzierten Spalte \" + table.identifier + \".\" +\r\n                            column.identifier + \" umgewandelt werden.\", \"error\", fki.referencesPosition);\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveTableOrSubQuery(tosNode: TableOrSubqueryNode, joinedTables: Table[]) {\r\n        if (tosNode == null) return;\r\n\r\n        switch (tosNode.type) {\r\n            case TokenType.table:\r\n                let tableList = this.tables.filter(t => t.identifier.toLowerCase() == tosNode.identifier.toLowerCase());\r\n                if (tableList.length == 0) {\r\n                    this.pushError(tosNode.identifier + \" ist nicht der Name einer Tabelle.\", \"error\", tosNode.position);\r\n                } else if (tableList.length > 1) {\r\n                    this.pushError(\"Der Bezeichner \" + tosNode.identifier + \" ist hier nicht eindeutig.\", \"error\", tosNode.position);\r\n                } else {\r\n                    let table: Table = tableList[0];\r\n                    joinedTables.push(table);\r\n                    this.storeTableIntoSymbolTable(table, tosNode.position, tosNode.alias);\r\n                }\r\n\r\n                break;\r\n\r\n            case TokenType.keywordJoin:\r\n                this.resolveTableOrSubQuery(tosNode.firstOperand, joinedTables);\r\n                this.resolveTableOrSubQuery(tosNode.secondOperand, joinedTables);\r\n                break;\r\n\r\n            case TokenType.subquery:\r\n                tosNode.table = this.resolveSelect(tosNode.query, []);\r\n                joinedTables.push(tosNode.table);\r\n                if (tosNode.alias != null) {\r\n                    tosNode.table.identifier = tosNode.alias;\r\n                    this.storeTableIntoSymbolTable(tosNode.table, tosNode.position);\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    storeTableIntoSymbolTable(table: Table, position: TextPosition, alias?: string) {\r\n        let symbolTable = this.getCurrentSymbolTable();\r\n        symbolTable.storeSymbol({\r\n            identifier: alias == null ? table.identifier.toLowerCase() : alias.toLowerCase(),\r\n            posOfDefinition: position,\r\n            table: table,\r\n            referencedOnPositions: []\r\n        });\r\n        for (let column of table.columns) {\r\n            symbolTable.storeSymbol({\r\n                identifier: column.identifier.toLowerCase(),\r\n                posOfDefinition: null,\r\n                column: column,\r\n                tableAlias: alias,\r\n                referencedOnPositions: []\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTerm(node: TermNode): SQLType {\r\n        if (node == null) return null;\r\n\r\n        switch (node.type) {\r\n\r\n            case TokenType.keywordBetween:\r\n                let firstOperand = this.resolveTerm(node.firstOperand);\r\n                let secondOperand = this.resolveTerm(node.secondOperand);\r\n                let thirdOperand = this.resolveTerm(node.thirdOperand);\r\n\r\n                if(firstOperand == null || secondOperand == null || thirdOperand == null) return null;\r\n\r\n                if(!firstOperand.canCastTo(SQLBaseType.getBaseType(\"double\"))){\r\n                    this.pushError(\"Hier wird eine Zahl erwartet.\", \"error\", node.firstOperand.position);\r\n                    return null;\r\n                }                \r\n                if(!secondOperand.canCastTo(SQLBaseType.getBaseType(\"double\"))){\r\n                    this.pushError(\"Hier wird eine Zahl erwartet.\", \"error\", node.secondOperand.position);\r\n                    return null;\r\n                }                \r\n                if(!thirdOperand.canCastTo(SQLBaseType.getBaseType(\"double\"))){\r\n                    this.pushError(\"Hier wird eine Zahl erwartet.\", \"error\", node.thirdOperand.position);\r\n                }        \r\n                return SQLBaseType.getBaseType(\"boolean\");        \r\n                break;\r\n            case TokenType.binaryOp:\r\n                if ([TokenType.keywordIn, TokenType.keywordNotIn].indexOf(node.operator) >= 0) {\r\n                    return this.resolveNotIn(node);\r\n                }\r\n\r\n                let typeLeft = this.resolveTerm(node.firstOperand);\r\n                let typeRight = this.resolveTerm(node.secondOperand);\r\n                if (typeLeft != null && typeRight != null) {\r\n                    let resultType = typeLeft.getBinaryResultType(node.operator, typeRight);\r\n                    if (resultType == null) {\r\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für die Datentypen \" + typeLeft.toString() + \" und \" + typeRight.toString() + \" nicht definiert.\", \"error\", node.position);\r\n                    }\r\n                    node.sqlType = resultType;\r\n                    return resultType;\r\n                } else {\r\n                    return null;\r\n                }\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let operandType = this.resolveTerm(node.operand);\r\n                if (operandType != null) {\r\n                    let resultType1 = operandType.getUnaryResultType(node.operator);\r\n                    if (resultType1 == null) {\r\n                        this.pushError(\"Der Operator \" + TokenTypeReadable[node.operator] + \" ist für einen Operanden des Datentyps \" + operandType.toString() + \" nicht definiert.\", \"error\", node.position);\r\n                    }\r\n                    node.sqlType = resultType1;\r\n                    return resultType1;\r\n                } else {\r\n                    return null;\r\n                }\r\n                break;\r\n            case TokenType.callMethod:\r\n                return this.resolveMethodCall(node);\r\n                break;\r\n            //    ConstantNode | IdentifierNode | DotNode | SelectNode | BracketsNode | StarAttributeNode | SelectNode | ListNode;\r\n\r\n            case TokenType.constantNode:\r\n                node.sqlType = SQLBaseType.fromConstantType(node.constantType);\r\n                return node.sqlType;\r\n                break;\r\n            case TokenType.identifier:\r\n                return this.resolveIdentifier(node);\r\n                break;\r\n            case TokenType.dot:\r\n                return this.resolveDot(node);\r\n                break;\r\n            case TokenType.keywordSelect:\r\n                let selectTable = this.resolveSelect(node, []);\r\n                if (selectTable.columns.length != 1) {\r\n                    this.pushError(\"Die Ergebnistabelle einer Unterabfrage an dieser Stelle muss genau eine Spalte besitzen.\", \"error\", node.position);\r\n                    return null;\r\n                }\r\n                return selectTable.columns[0].type;\r\n                break;\r\n            case TokenType.rightBracket:   // BracketsNode\r\n                node.sqlType = this.resolveTerm(node.termInsideBrackets);\r\n                return node.sqlType;\r\n                break;\r\n            case TokenType.allColumns:\r\n                this.pushError(\"Das Zeichen * kann hier nicht verwendet werden.\", \"error\", node.position);\r\n                break;\r\n            case TokenType.list:\r\n                this.pushError(\"Eine Liste wird hier nicht erwartet.\", \"error\", node.position);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    resolveDot(node: DotNode): SQLType {\r\n        let tableSymbols = this.getCurrentSymbolTable().findTables(node.identifierLeft.identifier);\r\n        if (tableSymbols.length == 0) {\r\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" kann nicht gefunden werden.\", \"error\", node.identifierLeft.position);\r\n            return null;\r\n        }\r\n        if (tableSymbols.length > 1) {\r\n            this.pushError(\"Der Tabellenbezeichner \" + node.identifierLeft.identifier + \" ist nicht eindeutig.\", \"error\", node.identifierLeft.position);\r\n            return null;\r\n        }\r\n        let table = tableSymbols[0].table;\r\n\r\n        let columns = table.columns.filter(c => c.identifier.toLowerCase() == node.identifierRight.identifier.toLowerCase());\r\n\r\n        if (columns.length == 0) {\r\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat keine Spalte mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\r\n            return;\r\n        }\r\n\r\n        if (columns.length > 1) {\r\n            this.pushError(\"Die Tabelle \" + node.identifierLeft.identifier + \" hat mehrere Spalten mit dem Bezeichner \" + node.identifierRight.identifier + \".\", \"error\", node.identifierRight.position);\r\n            return;\r\n        }\r\n\r\n        let column = columns[0];\r\n        node.sqlType = column.type;\r\n        return column.type;\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): SQLType {\r\n        let symbols = this.getCurrentSymbolTable().findColumn(node.identifier);\r\n        if (symbols.length == 0) {\r\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist an dieser Stelle nicht bekannt.\", \"error\", node.position);\r\n            return null;\r\n        }\r\n        if (symbols.length > 1) {\r\n            this.pushError(\"Der Bezeichner \" + node.identifier + \" ist nicht eindeutig.\", \"error\", node.position);\r\n            return null;\r\n        }\r\n\r\n        let symbol = symbols[0];\r\n        node.sqlType = symbol.column.type;\r\n        return symbol.column.type;\r\n    }\r\n\r\n    resolveMethodCall(node: MethodcallNode): SQLType {\r\n\r\n        let methodStore = SQLMethodStore.getInstance();\r\n        let methods = methodStore.getMethods(node.identifier);\r\n\r\n        if (node.identifier.toLocaleLowerCase() == 'concat') {\r\n            if(node.operands.length == 0){\r\n                this.pushError(\"Die Methode concat benötigt mindestens einen Parameter.\", \"error\", node.position);\r\n                return null;\r\n            }\r\n            let method = methods[0];\r\n            node.sqlType = method.returnType;\r\n\r\n            return node.sqlType;\r\n        } else {\r\n            let isCountMethod = node.identifier.toLocaleLowerCase() == \"count\";\r\n            if(!isCountMethod){\r\n                methods = methods.filter(m => m.parameters.length == node.operands.length);\r\n            }\r\n            if (node.operands.length == 1 && node.operands[0].type == TokenType.allColumns) {\r\n                methods = methods.filter(m => m.acceptsStarParameter);\r\n                node.sqlType = methods[0].returnType;\r\n                return node.sqlType;\r\n            }\r\n\r\n            if (methods.length == 0) {\r\n                this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\r\n                return null;\r\n            }\r\n\r\n            for (let operand of node.operands) {\r\n                if (this.resolveTerm(operand) == null) {\r\n                    node.sqlType = methods[0].returnType;\r\n                    return node.sqlType;\r\n                }\r\n            }\r\n\r\n            for (let method of methods) {\r\n                let found = true;\r\n                for (let i = 0; i < method.parameters.length; i++) {\r\n                    let methodParameter = method.parameters[i];\r\n                    let operand = node.operands[i];\r\n                    if (!operand.sqlType.canCastTo(methodParameter.type)) {\r\n                        found = false;\r\n                        break;\r\n                    }\r\n                }\r\n                if (found || isCountMethod) {\r\n                    node.sqlType = method.returnType;\r\n                    return node.sqlType;\r\n                }\r\n            }\r\n\r\n            this.pushError(\"Es gibt keine passende Methode mit dem Bezeichner '\" + node.identifier + \"'.\", \"error\", node.position);\r\n            return null;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveNotIn(node: BinaryOpNode): SQLType {\r\n\r\n        if (node.firstOperand == null || node.secondOperand == null) return null;\r\n\r\n        let operatorString = TokenTypeReadable[node.operator];\r\n\r\n        this.resolveTerm(node.firstOperand);\r\n        let leftType = node.firstOperand.sqlType;\r\n        if (leftType != null) {\r\n            if (node.secondOperand.type == TokenType.keywordSelect) {\r\n                let selectNode = node.secondOperand;\r\n                if (selectNode.columnList.length != 1) {\r\n                    this.pushError(\"Wenn rechts vom Operator '\" + operatorString + \"' eine Unterabfrage steht, muss die Ergebnistabelle dieser Unterabfrage genau eine Spalte haben.\", \"error\", selectNode.position);\r\n                }\r\n                this.resolveSelect(selectNode, []);\r\n                let pType = selectNode.columnList[0].term.sqlType;\r\n                if (!pType.canCastTo(leftType)) {\r\n                    this.pushError(\"Der Datentyp der Ergebnisspalte der Unterabfrage ist \" + pType.toString() + \". Dieser kann nicht in den Datentyp \" + leftType.toString() + \" umgewandelt werden.\", \"error\", selectNode.position);\r\n                }\r\n            } else if (node.secondOperand.type == TokenType.list) {\r\n                let listNode = node.secondOperand;\r\n                for (let element of listNode.elements) {\r\n                    let elementType = SQLBaseType.fromConstantType(element.constantType);\r\n                    element.sqlType = elementType;\r\n                    if (!elementType.canCastTo(leftType)) {\r\n                        this.pushError(\"Der Datentyp des Listenelements \" + element.constant + \" ist \" + elementType.toString() + \". Er kann nicht in den Datentype \" + leftType.toString() + \" des Operanden auf der linken Seite des Operators '\" + operatorString + \"' umgewandelt werden.\", \"error\", element.position);\r\n                    }\r\n                }\r\n            } else {\r\n                this.pushError(\"Der rechte Operand der Operatoren 'in' und 'not in' muss eine Unterabfrage oder eine Liste sein.\", \"error\", node.secondOperand.position);\r\n            }\r\n\r\n        }\r\n\r\n        return SQLBaseType.getBaseType(\"boolean\");\r\n    }\r\n\r\n    resolveCreateView(astNode: CreateViewNode){\r\n        let symbolTable = this.pushNewSymbolTable(astNode.position, astNode.endPosition);\r\n        this.resolveSelect(astNode.selectStatement, []);\r\n        symbolTable.childSymbolTables.push(this.symbolTableStack.pop());\r\n    }\r\n\r\n\r\n    resolveInsert(astNode: InsertNode) {\r\n\r\n        let table: Table = null;\r\n        let symbolTable = this.pushNewSymbolTable(astNode.position, astNode.endPosition);\r\n        if (astNode.table != null) {\r\n            astNode.table.table = this.tables.find(t => t.identifier.toLowerCase() == astNode.table.identifier.toLocaleLowerCase());\r\n            if (astNode.table.table == null) {\r\n                this.pushError(\"Die Tabelle \" + astNode.table.identifier + \" gibt es nicht.\", \"error\", astNode.table.position);\r\n            } else {\r\n                table = astNode.table.table;\r\n                symbolTable.storeTableSymbols(table);\r\n            }\r\n        }\r\n\r\n        let tableCompletionTo = astNode.endPosition;\r\n        if (astNode.valuesPosition != null) tableCompletionTo = astNode.valuesPosition;\r\n        if (astNode.columnsPosition != null) tableCompletionTo = astNode.columnsPosition;\r\n\r\n        this.module.addCompletionHint(astNode.position, tableCompletionTo, false, true, [\"into\", \"values\"]);\r\n\r\n        if (table != null) {\r\n            this.module.addCompletionHint(tableCompletionTo, astNode.valuesPosition == null ? astNode.endPosition : astNode.valuesPosition, true, false, [\"values\"]);\r\n        }\r\n\r\n        let tableSymbolTable = this.pushNewSymbolTable(astNode.position, tableCompletionTo);\r\n        tableSymbolTable.extractDatabaseStructure(this.databaseTool.databaseStructure);\r\n\r\n        let columns: Column[] = [];\r\n        // Parse column list\r\n        if (astNode.columnList.length == 0) {\r\n            if (table != null) {\r\n                columns = table.columns;\r\n            }\r\n        } else {\r\n            if (table != null) {\r\n                for (let columnNode of astNode.columnList) {\r\n                    let column = table.columns.find(c => c.identifier.toLowerCase() == columnNode.identifier.toLowerCase());\r\n                    if (column == null) {\r\n                        this.pushError(\"Die Tabelle \" + table.identifier + \" besitzt keine Spalte mit dem Bezeichner \" + columnNode.identifier + \".\", \"error\", columnNode.position);\r\n                    } else {\r\n                        columns.push(column);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (columns.length > 0) {\r\n            if (astNode.select != null) {\r\n                let table = this.resolveSelect(astNode.select, []);\r\n                if (table?.columns != null) {\r\n                    if (columns.length != table.columns.length) {\r\n                        this.pushError(\"Die insert-Anweisung erwartet \" + columns.length + \" Werte je Datensatz, die select-Anweisung liefert aber \" + table.columns.length + \".\", \"error\", astNode.position);\r\n                    } else {\r\n                        for (let i = 0; i < columns.length; i++) {\r\n                            let insertColumn = columns[i];\r\n                            let selectColumn = table.columns[i];\r\n                            if (insertColumn.type != null && selectColumn.type != null) {\r\n                                if (!selectColumn.type.canCastTo(insertColumn.type)) {\r\n                                    this.pushError(\"Der Datentyp \" + selectColumn.type.toString() + \" der \"\r\n                                        + (i + 1) + \"-ten Spalte des select-Terms kann nicht in den Datentyp \" +\r\n                                        insertColumn.type.toString() + \" der entsprechenden Spalte der insert-Anweisung umgewandelt werden.\", \"error\", astNode.position);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n            } else {\r\n                // Parse value lists\r\n                for (let valueList of astNode.values) {\r\n                    if (valueList.length != columns.length && valueList.length > 0) {\r\n                        this.pushError(\"Erwartet werden \" + columns.length + \" Elemente, hier stehen aber \" + valueList.length + \" Elemente in der Liste.\", \"error\", valueList[0].position);\r\n                    } else {\r\n                        for (let i = 0; i < valueList.length; i++) {\r\n                            let value = valueList[i];\r\n                            let column = columns[i];\r\n                            value.sqlType = SQLBaseType.fromConstantType(value.constantType);\r\n                            // constantType == 40 means: null\r\n                            // TODO: check if column is nullable!\r\n                            let destType = column.type.toString().toLocaleLowerCase();\r\n                            if (value.constantType == TokenType.keywordNull) {\r\n                                if (!column.isNullable || column.notNull) {\r\n                                    this.pushError(\"Die Spalte \" + column.identifier + \" ist nicht nullable, daher kann null hier nicht eingefügt werden.\", \"error\", value.position);\r\n                                }\r\n                            } else if (!value.sqlType.canCastTo(column.type)) {\r\n                                let error: string = \"Der Wert \" + value.constant + \" vom Datentyp \" + value.sqlType.toString() + \" kann nicht in den Datentyp \" + column.type.toString() + \" der Spalte \" + column.identifier + \" umgewandelt werden.\";\r\n\r\n                                if (destType == \"date\") error += \"<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.\";\r\n                                if (destType == \"datetime\" || destType == \"timestamp\") error += \"<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.\";\r\n\r\n                                this.pushError(error, \"error\", value.position);\r\n                            } else if (destType == \"date\") {\r\n                                if (!isDate(value.constant)) {\r\n                                    let error: string = `'${value.constant}' ist kein date-Wert.<br><b>Tipp: </b>Datumswerte haben die Form 'yyyy-mm-dd', also z.B. '2022-06-15'.`;\r\n                                    this.pushError(error, \"error\", value.position);\r\n                                }\r\n                            } else if (destType == \"datetime\" || destType == \"timestamp\") {\r\n                                if (!isDateTime(value.constant)) {\r\n                                    let error: string = `'${value.constant}' ist kein ${destType}-Wert.<br><b>Tipp: </b>Timestamps haben die Form 'yyyy-mm-dd hh:min:ss', also z.B. '2022-06-15 07:56:22'.`;\r\n                                    this.pushError(error, \"error\", value.position);\r\n                                }\r\n                            } else if (destType == \"time\") {\r\n                                if (!isTime(value.constant)) {\r\n                                    let error: string = `'${value.constant}' ist kein ${destType}-Wert.<br><b>Tipp: </b>Time-Werte haben die Form 'hh:min:ss', also z.B. '07:56:22'.`;\r\n                                    this.pushError(error, \"error\", value.position);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.symbolTableStack.pop();\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { SymbolResolver } from \"./parser/SymbolResolver.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule().file.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n        \r\n        // 3rd pass: check symbols and types\r\n        let databaseTool = this.main.getDatabaseTool();\r\n        let symbolResolver: SymbolResolver = new SymbolResolver(databaseTool);\r\n\r\n        for(let m of moduleStore.getModules(false)){\r\n            symbolResolver.start(m);\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { ASTNode } from \"./AST.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { stringToDate } from \"../../tools/StringTools.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\n\r\nexport type CompletionHint = {\r\n    fromLine: number,\r\n    fromColumn: number,\r\n    toLine: number, \r\n    toColumn: number,\r\n    hintColumns: boolean,\r\n    hintColumnsOfTable?: string,\r\n    hintTables: boolean,\r\n    hintKeywords: string[],\r\n    dontHint?: string[],\r\n    praefix?: string,\r\n    suffix?: string\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: any;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: any[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    sqlStatements: SQLStatement[];\r\n    mainSymbolTable: SymbolTable;\r\n\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    completionHints: Map<number, CompletionHint[]> = new Map(); // Map from line numbers to hints\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"vscSQL\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if (main1.workspacesOwnerId != main1.user.id) {\r\n                    if (that.file.text_before_revision == null || that.file.student_edited_after_revision) {\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    addCompletionHint(fromPosition: TextPosition, toPosition: TextPosition, hintColumns: boolean|string, hintTables: boolean, \r\n        hintKeywords: string[], dontHint?: string[], praefix: string = \"\", suffix: string = \"\"){\r\n        let ch: CompletionHint = {\r\n            fromColumn: fromPosition.column,\r\n            fromLine: fromPosition.line,\r\n            toColumn: toPosition.column,\r\n            toLine: toPosition.line,\r\n            hintColumns: (typeof hintColumns == \"boolean\")? hintColumns : true, \r\n            hintColumnsOfTable: (typeof hintColumns == \"string\")? hintColumns : null,\r\n            hintTables: hintTables,\r\n            hintKeywords: hintKeywords == null ? null : hintKeywords.map(s => s.toUpperCase()),\r\n            dontHint: dontHint,\r\n            praefix: praefix,\r\n            suffix: suffix\r\n        }\r\n\r\n        for(let i = ch.fromLine; i <= ch.toLine; i++){\r\n            let chList = this.completionHints.get(i);\r\n            if(chList == null){\r\n                chList = [];\r\n                this.completionHints.set(i, chList);\r\n            }\r\n            chList.push(ch);\r\n        }\r\n    }\r\n\r\n    getSQLSTatementsAtSelection(sel: monaco.Selection): SQLStatement[] {\r\n        let selStart = {line: sel.startLineNumber, column: sel.startColumn};\r\n        let selEnd = {line: sel.endLineNumber, column: sel.endColumn};\r\n\r\n        if(this.sqlStatements == null){\r\n            return [];\r\n        }\r\n\r\n        return this.sqlStatements.filter(stmt => {\r\n            return !(this.compare(stmt.to, selStart) < 0 || this.compare(stmt.from, selEnd) > 0);\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n     * returns 1 if a > b, 0 if a == b and -1 if a < b\r\n     * @param a \r\n     * @param b \r\n     */\r\n    compare(a: {line: number, column: number}, b: {line: number, column: number}): number{\r\n        if(a.line > b.line) return 1;\r\n        if(a.line < b.line) return -1;\r\n        if(a.column > b.column) return 1;\r\n        if(a.column < b.column) return -1;\r\n        return 0;\r\n    }\r\n\r\n\r\n\r\n    getSQLStatementAtPosition(p: { lineNumber: number, column: number }): SQLStatement {\r\n\r\n        return this.sqlStatements.find(statement => {\r\n            if(statement.from.line > p.lineNumber ) return false;\r\n            if(statement.from.line == p.lineNumber && statement.from.column > p.column) return false;\r\n            if(statement.to.line < p.lineNumber) return false;\r\n            if(statement.to.line == p.lineNumber && statement.to.column < p.column) return false;\r\n            return true;\r\n        });        \r\n\r\n    }\r\n\r\n\r\n    getCompletionHint(line: number, column: number){\r\n        let chList = this.completionHints.get(line);\r\n        \r\n        if(chList == null || chList.length == 0){\r\n            return null;\r\n        }\r\n\r\n        let pos = line * 1000 + column;\r\n        chList = chList.filter(ch => pos >= ch.fromLine * 1000 + ch.fromColumn && pos <= ch.toLine * 1000 + ch.toColumn);\r\n        if(chList.length == 0){\r\n            return;\r\n        }\r\n\r\n        // take CompletionHint with smallest range:\r\n        let bestCh: CompletionHint = chList[0];\r\n        let bestRangeLength  = (bestCh.toLine - bestCh.fromLine)*1000 + (bestCh.toColumn - bestCh.fromColumn);\r\n\r\n        for(let i = 1; i < chList.length; i++){\r\n            let ch = chList[i];\r\n            let rangeLength = (ch.toLine - ch.fromLine) * 1000 + (ch.toColumn - ch.fromColumn);\r\n\r\n            if(rangeLength < bestRangeLength){\r\n                bestCh = ch;\r\n                bestRangeLength = rangeLength;\r\n            }\r\n\r\n        }\r\n\r\n        return bestCh;\r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: f.text,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: true,\r\n            version: f.version,\r\n            id: f.id\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 11\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: any) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): any {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n\r\n        this.methodCallPositions = {};\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if (el.find(error => error.level == \"error\")) {\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if (this.errorLevelCompare(e1.level, e2.level) == 1) {\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if (level1 == \"error\") return 1;\r\n        if (level2 == \"error\") return 2;\r\n        if (level1 == \"warning\") return 1;\r\n        if (level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: Map<string, Module> = new Map();\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for (let module of this.modules) {\r\n            if (module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main);\r\n        for (let m of this.modules) {\r\n            ms.putModule(m.copy());\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                return mo;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                ret.push(m);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            button.on('mousedown', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\nimport { NewNotifier } from \"./NewNotifier.js\";\r\nimport { PushClientManager } from \"./pushclient/PushClientManager.js\";\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++; //Test\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport var csrfToken: string = \"\";\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n        if(!url.startsWith(\"http\")){\r\n            url = \"servlet/\" + url;\r\n        }\r\n   \r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    let headers: {[key: string]: string;} = {};\r\n    if(csrfToken != null) headers = {\"x-token-pm\": csrfToken};\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        headers: headers,\r\n        url: url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            if(response[\"csrfToken\"] != null)\r\n            {\r\n                csrfToken = response[\"csrfToken\"];\r\n            }\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').css('visibility','visible');\r\n    } else {\r\n        jQuery('.jo_network-busy').css('visibility','hidden');\r\n    }\r\n}\r\n\r\n\r\nexport function extractCsrfTokenFromGetRequest(){\r\n    let url = window.location.href;\r\n    let tokenIndex = url.indexOf(\"csrfToken=\");\r\n    if(tokenIndex >= 0){\r\n        let token = url.substring(tokenIndex + \"csrfToken=\".length);\r\n        if(token != null && token.length > 0){\r\n            csrfToken = token;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport async function ajaxAsync(url: string, data: any): Promise<any>{\r\n    let headers: [string, string][] = [[\"content-type\", \"text/json\"]];\r\n\r\n    if(csrfToken != null){\r\n        headers.push([\"x-token-pm\", csrfToken]);\r\n    }\r\n\r\n    try {\r\n        let response = await fetch(url, {\r\n            method: \"POST\",\r\n            headers: headers,\r\n            body: JSON.stringify(data)\r\n        })\r\n\r\n         let obj: any = await response.json()\r\n\r\n        if(obj[\"token\"] != null){\r\n            csrfToken = obj[\"token\"];\r\n        }\r\n\r\n        if(obj == null){\r\n            alert(\"Fehler beim Übertragen der Daten.\");             \r\n        } else if(obj.success != true){\r\n            alert(\"Fehler beim Übertragen der Daten:\\n\" + obj.message);             \r\n        }\r\n\r\n        return obj;\r\n    } catch (exception){\r\n        return {\r\n            status: \"Error\",\r\n            message: \"Es ist ein Fehler aufgetreten: \" + exception\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { DatabaseData } from \"../communication/Data.js\";\r\n\r\nexport class WDatabase {\r\n\r\n    id: number;\r\n    name: string;\r\n\r\n    templateDump: Uint8Array;\r\n    based_on_template_id: number;\r\n    templateName: string;\r\n\r\n    statements: string[];\r\n    published_to: number;\r\n    version: number;\r\n    description: string;\r\n    owner_id: number;\r\n\r\n    static fromDatabaseData(data: DatabaseData, version: number): WDatabase {\r\n\r\n        let db = new WDatabase();\r\n\r\n        db.id = data.id;\r\n        db.name = data.name;\r\n        db.statements = data.statements;\r\n        db.published_to = data.published_to;\r\n        db.version = version;\r\n        db.description = data.description;\r\n        db.templateDump = null;\r\n        db.based_on_template_id = data.based_on_template_id;\r\n        db.owner_id = data.owner_id;\r\n        return db;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","export class CacheManager {\r\n    \r\n    fetchTemplateFromCache(databaseId: number, callback: (templateDump: Uint8Array) => void) {\r\n        if(databaseId == null){callback(null); return;}\r\n        let that = this;\r\n        if(!this.cacheAvailable()) callback(null);\r\n        this.getCache((cache) => {\r\n            cache.match(that.databaseIdToCacheIdentifier(databaseId)).then(\r\n                (value)=>{\r\n                    value.arrayBuffer().then((buffer) => callback(new Uint8Array(buffer)));\r\n                })\r\n                .catch(() => callback(null));\r\n        })        \r\n    }\r\n\r\n    saveTemplateToCache(databaseId: number, templateDump: Uint8Array) {\r\n        if(!this.cacheAvailable()) return;\r\n        let that = this;\r\n        this.getCache((cache) => {\r\n            cache.put(that.databaseIdToCacheIdentifier(databaseId), new Response(templateDump));\r\n        })        \r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n    getCache(callback: (cache: Cache) => void) {\r\n        caches.open('my-cache').then(callback);\r\n    }\r\n\r\n    databaseIdToCacheIdentifier(databaseId: number): string {\r\n        return \"/onlineIdeTemplateDb\" + databaseId;\r\n    }\r\n\r\n}","import { csrfToken } from \"../communication/AjaxHelper.js\";\r\nimport { UploadTemplateResponse } from \"../communication/Data.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\n\r\nexport class TemplateUploader {\r\n\r\n    uploadCurrentDatabase(workspace_id: number, main: Main, dump: Uint8Array | null, \r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\" | \"distributeWorkspace\", \r\n        callback: (response: UploadTemplateResponse) => void = () => { }) {\r\n            \r\n        main.waitOverlay.show('Bitte warten, lade Vorlage auf den Server hoch ...');\r\n        if (workspace_id >= 0) {\r\n            let dbTool = main.getDatabaseTool();\r\n            dbTool.export((buffer) => {\r\n                // @ts-ignore\r\n                buffer = pako.deflate(buffer);\r\n                this.uploadIntern(buffer, workspace_id, reason, main, callback);\r\n            }, (error) => {\r\n                alert(\"Fehler beim Exportieren der Datenbank: \" + error)\r\n                main.waitOverlay.hide();\r\n            })\r\n        } else {\r\n            this.uploadIntern(dump, -1, reason, main, callback);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private uploadIntern(buffer: Uint8Array, workspace_id: number,\r\n        reason: \"publishDatabaseAsTemplate\" | \"uploadBaseTemplateForWorkspace\"| \"distributeWorkspace\",\r\n        main: Main, callback: (response: UploadTemplateResponse) => void) {\r\n\r\n        let headers: {[key: string]: string;} = { 'x-workspaceid': \"\" + workspace_id, \"x-reason\": reason };\r\n        if(csrfToken != null) headers[\"x-token-pm\"] = csrfToken;\r\n        \r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            contentType: 'application/octet-stream',\r\n            data: buffer,\r\n            processData: false,\r\n            headers: headers,\r\n            url: \"servlet/uploadTemplate\",\r\n            success: function (response: UploadTemplateResponse) {\r\n                main.waitOverlay.hide();\r\n                callback(response);\r\n                return;\r\n\r\n            },\r\n            error: function (jqXHR, message) {\r\n                alert('message');\r\n                main.waitOverlay.hide();\r\n            }\r\n        }\r\n        );\r\n        return buffer;\r\n    }\r\n}","export class FileTool {\r\n    static zipSignature: number[] = [0x78, 0x9c];\r\n    static sqLiteSignature: number[] = [0x53, 0x51, 0x4C, 0x69, 0x74, 0x65, 0x20, 0x66, 0x6F, 0x72, 0x6D, 0x61, 0x74, 0x20, 0x33, 0x00];\r\n\r\n    static isZipfile(fileData: Uint8Array): boolean {\r\n\r\n        return FileTool.checkSignature(fileData, this.zipSignature);\r\n\r\n    }\r\n\r\n    static isSqLiteFile(fileData: Uint8Array): boolean {\r\n\r\n        return FileTool.checkSignature(fileData, this.sqLiteSignature);\r\n\r\n    }\r\n\r\n    static checkSignature(fileData: Uint8Array, signature: number[]): boolean {\r\n\r\n        if(fileData == null) return false;\r\n        if(fileData.byteLength < signature.length) return false;\r\n        \r\n        for(let i = 0; i < signature.length; i++){\r\n            if(fileData[i] != signature[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n}","import { BasePushClientManager } from \"./BasePushClientManager.js\";\r\n\r\nexport abstract class PushClientStrategy {\r\n\r\n    nextStrategy: PushClientStrategy;\r\n\r\n    constructor(public name: string, public manager: BasePushClientManager){\r\n\r\n    }\r\n\r\n    abstract open(): void;\r\n\r\n    abstract close();\r\n\r\n}\r\n","import { csrfToken } from \"../AjaxHelper\";\r\nimport { BasePushClientManager } from \"./BasePushClientManager.js\";\r\nimport { PushClientStrategy } from \"./PushClientStrategy\";\r\n\r\nexport class PushClientLongPollingStrategy extends PushClientStrategy {\r\n\r\n    isClosed: boolean;\r\n    csrfToken: string;\r\n\r\n    shortestTimeoutMs: number = 60000;   // 60 s\r\n    timeOpened: number = null;\r\n\r\n    abortController: AbortController;\r\n\r\n\r\n\r\n    constructor(manager: BasePushClientManager) {\r\n        super(\"long-polling strategy\", manager);\r\n        this.isClosed = false;\r\n    }\r\n\r\n    open(): void {\r\n\r\n        this.isClosed = false;\r\n\r\n        this.abortController = new AbortController();\r\n\r\n        this.timeOpened = performance.now();\r\n\r\n        let headers: [string, string][] = [[\"content-type\", \"text/json\"]];\r\n\r\n        headers.push([\"x-token-pm\", csrfToken]);\r\n        this.csrfToken = csrfToken;\r\n        headers.push([\"x-timeout\", this.shortestTimeoutMs + \"\"]);\r\n\r\n        try {\r\n            fetch(\"/servlet/registerLongpollingListener\", {\r\n                signal: this.abortController.signal,\r\n                method: \"POST\",\r\n                headers: headers,\r\n                body: JSON.stringify({})\r\n            }).then((response) => {\r\n\r\n                if (response.status != 200) {\r\n                    console.log(`Long-polling listener got http-status: ${response.status} (${response.statusText})`);\r\n                    let timeMs = Math.round(performance.now() - this.timeOpened) - 4000;\r\n                    if (timeMs < this.shortestTimeoutMs) this.shortestTimeoutMs = timeMs;\r\n                }\r\n\r\n                switch (response.status) {\r\n                    case 200:\r\n                        response.json().then(data => {\r\n                            this.manager.onMessage(data)\r\n                        });\r\n                        this.reopen();\r\n                        break;\r\n                    case 502:   // timeout!\r\n                    case 504:   // gateway timeout!\r\n                        this.reopen(1000, false);\r\n                        break;\r\n                    default:\r\n                        this.reopen(10000, false);\r\n                        break;\r\n                }\r\n\r\n            }).catch((reason) => {\r\n                console.log(`Long-polling listener failed due to reason: ${reason}`);\r\n                this.reopen(10000, false);\r\n            }).finally(() => {\r\n                this.abortController = null;\r\n            })\r\n\r\n        } catch (ex) {\r\n            this.reopen(10000, false);\r\n        }\r\n\r\n    }\r\n\r\n    reopen(timeout: number = 500, silently: boolean = true) {\r\n        if (this.isClosed) return;\r\n        if(timeout > 500){\r\n            console.log(`Reopen long-polling listener in ${timeout / 1000} seconds...`);\r\n        }\r\n        setTimeout(() => {\r\n            if (this.isClosed) return;\r\n            this.open();\r\n        }, timeout);\r\n\r\n    }\r\n\r\n\r\n    async close() {\r\n        this.isClosed = true;\r\n        this.abortController?.abort();\r\n\r\n        let headers: [string, string][] = [[\"content-type\", \"text/json\"]];\r\n\r\n        headers.push([\"x-token-pm\", this.csrfToken]);\r\n\r\n        await fetch(\"/servlet/unregisterLongpollingListener\", {\r\n            method: \"POST\",\r\n            headers: headers,\r\n            body: JSON.stringify({})\r\n        })\r\n    }\r\n\r\n}","import { csrfToken } from \"../AjaxHelper\";\r\nimport { BasePushClientManager, ServerSentMessage } from \"./BasePushClientManager.js\";\r\nimport { PushClientStrategy } from \"./PushClientStrategy\";\r\n\r\nexport class PushClientWebsocketStrategy extends PushClientStrategy {\r\n\r\n    csrfToken: string;\r\n\r\n    websocket: WebSocket;\r\n\r\n    isClosed: boolean;\r\n\r\n    openedTimestamp: number;\r\n\r\n    currentTimer: any;\r\n\r\n    constructor(manager: BasePushClientManager) {\r\n        super(\"websocket strategy\", manager);\r\n    }\r\n\r\n    open(): void {\r\n\r\n        this.isClosed = false;\r\n\r\n        try {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/pushWebsocket?csrfToken=\" + csrfToken;\r\n\r\n            this.websocket = new WebSocket(url);\r\n    \r\n            this.websocket.onopen = (event) => {\r\n                this.openedTimestamp = performance.now();\r\n            }\r\n    \r\n            this.websocket.onclose = (event) => {\r\n                console.log(\"Websocket has been closed, code: \" + event.code + \", reason: \" + event.reason);\r\n\r\n                this.isClosed = true;\r\n                \r\n                if(event.code == 1001 && performance.now() - this.openedTimestamp > 1e4){\r\n                    // timeout? => reopen\r\n                    console.log(\"Reason was timeout, dt > 10s => Reopen!\");\r\n                    this.open();\r\n                } else {\r\n                    this.manager.onStrategyFailed(this);\r\n                    this.isClosed = true;\r\n                }\r\n                \r\n            }\r\n    \r\n            this.websocket.onerror = (event) => { \r\n                console.log(\"Error on websocket, type: \" + event.type);\r\n                this.websocket.close();\r\n                this.manager.onStrategyFailed(this);\r\n                this.isClosed = true;\r\n            }\r\n    \r\n            this.websocket.onmessage = (event) => {\r\n                if(event.data == \"pong\") return;\r\n                const msg: ServerSentMessage[] = JSON.parse(event.data);\r\n                this.manager.onMessage(msg);\r\n            }\r\n\r\n            if(this.currentTimer != null){\r\n                clearTimeout(this.currentTimer);\r\n            }\r\n\r\n            this.doPing();\r\n\r\n        } catch (ex){\r\n            this.manager.onStrategyFailed(this);\r\n            this.isClosed = true;\r\n        }\r\n\r\n    }\r\n\r\n    doPing(){\r\n        this.currentTimer = setTimeout(() => {\r\n            if(!this.isClosed){\r\n                this.websocket.send(\"ping\");\r\n                this.doPing();\r\n            } else {\r\n                this.currentTimer = null;\r\n            }            \r\n        }, 25000);\r\n\r\n    }\r\n\r\n\r\n    async close() {\r\n        this.isClosed = true;\r\n        this.websocket.close();\r\n    }\r\n\r\n}","import { PushClientLongPollingStrategy } from \"./PushClientLongPollingStrategy\";\r\nimport { PushClientStrategy } from \"./PushClientStrategy\";\r\nimport { PushClientWebsocketStrategy } from \"./PushClientWebsocketStrategy\";\r\n\r\nexport type PushEventType = \"startPruefung\" | \"stopPruefung\" | \"doFileUpdate\" | \"broadcastDatabaseChange\" | \"checkIfAlive\" | \"close\" | \"onPruefungChanged\"\r\n                     | \"onGradeChangedInPruefungAdministration\"| \"onGradeChangedInMainWindow\" | \"onOpen\" | \"keepAlive\";\r\n\r\nexport type ServerSentMessage = {eventType: PushEventType, data?: any};\r\n\r\nexport type PushMessageHandler = (data: any) => void;\r\n\r\nexport type PushSubscriberInfo = {\r\n    eventType: PushEventType;\r\n    handler: PushMessageHandler;\r\n}\r\n\r\nexport class BasePushClientManager {\r\n\r\n    strategies: PushClientStrategy[] = [];\r\n    currentStrategy: PushClientStrategy;\r\n\r\n    eventTypeToSubscriberInfoMap: Map<string, PushSubscriberInfo> = new Map();\r\n\r\n    public subscribe(eventType: PushEventType, handler: PushMessageHandler) {\r\n        this.eventTypeToSubscriberInfoMap.set(eventType, { eventType: eventType, handler: handler });\r\n    }\r\n    \r\n    public unsubscribe(eventType: PushEventType){\r\n        this.eventTypeToSubscriberInfoMap.delete(eventType);\r\n    }\r\n\r\n\r\n    protected constructor(public baseURL: string){\r\n        this.strategies = [\r\n            new PushClientWebsocketStrategy(this),\r\n            new PushClientLongPollingStrategy(this)\r\n        ]\r\n\r\n        for(let i = this.strategies.length - 2; i >= 0; i--){\r\n            this.strategies[i].nextStrategy = this.strategies[i+1];\r\n        }\r\n    }\r\n\r\n    open(){\r\n        if(this.currentStrategy == null){\r\n            this.currentStrategy = this.strategies[0];\r\n            console.log(`Opening ${this.currentStrategy.name}`);\r\n            this.currentStrategy.open();\r\n        }\r\n    }\r\n\r\n    onMessage(messages: ServerSentMessage[]){\r\n\r\n        for(let message of messages){            \r\n            if(message.eventType == \"keepAlive\") return;\r\n    \r\n            this.eventTypeToSubscriberInfoMap.get(message.eventType)?.handler(message.data);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onStrategyFailed(failedStrategy: PushClientStrategy){\r\n        if(failedStrategy != this.currentStrategy) return;\r\n\r\n        let oldStrategy = this.currentStrategy;\r\n        this.currentStrategy = this.currentStrategy.nextStrategy;\r\n\r\n        let text: string = `${oldStrategy.name} failed. `;\r\n\r\n        if(this.currentStrategy != null){\r\n                text += `=> Trying ${this.currentStrategy.name} in 3 seconds...`;\r\n            setTimeout(() => {\r\n                console.log(`Opening ${this.currentStrategy.name}`);\r\n                this.currentStrategy.open();                \r\n            }, 3000);\r\n        } else {\r\n            text += `It was the last resort, unfortunately this client has no means to receive push-messages from server.`;\r\n        }\r\n\r\n        console.log(text);\r\n\r\n    }\r\n\r\n    close() {\r\n        if(this.currentStrategy != null){\r\n            this.currentStrategy.close();\r\n            this.currentStrategy = null;\r\n        }\r\n    }\r\n\r\n\r\n}","import { BasePushClientManager, PushEventType, PushMessageHandler } from \"./BasePushClientManager.js\";\r\n\r\n\r\nexport class PushClientManager extends BasePushClientManager {\r\n\r\n    private static instance: PushClientManager;\r\n\r\n\r\n    public static subscribe(eventType: PushEventType, handler: PushMessageHandler) {\r\n        PushClientManager.getInstance().subscribe(eventType, handler);\r\n    }\r\n    \r\n    public static unsubscribe(eventType: PushEventType){\r\n        PushClientManager.getInstance().unsubscribe(eventType);\r\n    }\r\n\r\n\r\n    public static getInstance(): PushClientManager {\r\n        if(PushClientManager.instance == null){\r\n            PushClientManager.instance = new PushClientManager(\"\");\r\n        }\r\n        return PushClientManager.instance;\r\n    }\r\n\r\n\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax, csrfToken } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, GetDatabaseRequest, getDatabaseResponse, GetNewStatementsRequest, GetNewStatementsResponse, AddDatabaseStatementsRequest, AddDatabaseStatementsResponse, TemplateListEntry, GetTemplateListRequest, GetTemplateListResponse, CreateWorkspaceData, GetDatabaseSettingsResponse, GetDatabaseSettingsRequest, setDatabaseSecretRequest as SetDatabaseSecretRequest, SetDatabaseSecretResponse, SetPublishedToRequest, SetPublishedToResponse, GetTemplateRequest, RollbackRequest, RollbackResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { CacheManager } from \"./CacheManager.js\";\r\nimport { TemplateUploader } from \"../tools/TemplateUploader.js\";\r\nimport { FileTool } from \"../tools/FileTool.js\";\r\nimport { PushClientManager } from \"./pushclient/PushClientManager.js\";\r\n\r\n\r\nexport class NetworkManager {\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 20;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 20;\r\n    forcedUpdateEvery: number = 4;\r\n    counterTillForcedUpdate: number = 2;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                this.counterTillForcedUpdate--;\r\n                let forceUpdate = this.counterTillForcedUpdate == 0;\r\n                if (forceUpdate) this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                that.sendUpdates(() => { }, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false) {\r\n\r\n        if (this.main.user == null) return;\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        if (this.main.userDataDirty) {\r\n\r\n            this.main.userDataDirty = false;\r\n            this.sendUpdateUserSettings(() => { });\r\n        }\r\n\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 1,\r\n            currentWorkspaceId: this.main.getCurrentWorkspace()?.id,\r\n            getModifiedWorkspaces: false\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty) {\r\n            ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                that.errorHappened = !response.success;\r\n                if (!that.errorHappened) {\r\n\r\n                    that.updateWorkspaces(request, response);\r\n\r\n                    if (callback != null) {\r\n                        callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }, () => {\r\n                that.errorHappened = true;\r\n            });\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initializeSSE() {\r\n        PushClientManager.subscribe(\"doFileUpdate\", (data) => {\r\n            let oldWorkspaces = this.main.workspaceList.slice();\r\n            this.sendUpdates(() => {\r\n\r\n                let names = this.main.workspaceList.filter(ws => oldWorkspaces.indexOf(ws) < 0)\r\n                .map(ws => ws.name).join(\", \");\r\n\r\n                alert(`Deine Lehrkraft hat Dir folgende Datenbank übermittelt: ${names}`);\r\n\r\n            }, true);\r\n        })\r\n\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(wd: CreateWorkspaceData, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            wd.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            wd.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getDatabaseSettings(workspace_id: number, callback: (response: GetDatabaseSettingsResponse) => void) {\r\n        let request: GetDatabaseSettingsRequest = {\r\n            workspaceId: workspace_id\r\n        };\r\n        ajax(\"getDatabaseSettings\", request, (response: GetDatabaseSettingsResponse) => {\r\n            callback(response);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNewSecret(workspace_id: number, kind: string, callback: (secret: string) => void) {\r\n        let request: SetDatabaseSecretRequest = {\r\n            workspaceId: workspace_id,\r\n            secretKind: kind\r\n        };\r\n        ajax(\"setNewSecret\", request, (response: SetDatabaseSecretResponse) => {\r\n            callback(response.secret);\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n    setNameAndPublishedTo(workspace_id: number, name: string, published_to: number, description: string, callback: () => void) {\r\n        let request: SetPublishedToRequest = {\r\n            workspaceId: workspace_id,\r\n            databaseName: name,\r\n            publishedTo: published_to,\r\n            description: description\r\n        };\r\n\r\n        ajax(\"setPublishedTo\", request, (response: SetPublishedToResponse) => {\r\n            callback();\r\n        }, (message) => { alert(message) })\r\n    }\r\n\r\n\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 1\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        let callbackAfterSettingWorkspaceActive = () => {\r\n\r\n            new TemplateUploader().uploadCurrentDatabase(ws.id, this.main, null,\r\n                \"distributeWorkspace\",\r\n                (response) => {\r\n\r\n                    this.sendUpdates(() => {\r\n\r\n                        let request: DistributeWorkspaceRequest = {\r\n                            workspace_id: ws.id,\r\n                            database_as_template_id: response.newTemplateId,\r\n                            class_id: klasse?.id,\r\n                            student_ids: student_ids\r\n                        }\r\n\r\n                        ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                            callback(response.message)\r\n                        }, callback);\r\n\r\n                    }, false);\r\n                });\r\n\r\n        }\r\n\r\n        this.main.projectExplorer.setWorkspaceActive(ws, callbackAfterSettingWorkspaceActive);\r\n\r\n    }\r\n\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void) {\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id,\r\n            current_workspace_id: this.main.getCurrentWorkspace()?.id\r\n        }\r\n\r\n        ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    getNewStatements(workspace: Workspace, callback: (statements: string[], firstNewStatementIndex: number) => void) {\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version\r\n        }\r\n\r\n        ajax(\"getNewStatements\", request, (response: GetNewStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.newStatements, response.firstNewStatementIndex);\r\n            }\r\n        });\r\n    }\r\n\r\n    AddDatabaseStatements(workspace: Workspace, statements: string[], callback: (statements_before: string[], new_version: number) => void) {\r\n        let request: AddDatabaseStatementsRequest = {\r\n            workspaceId: workspace.id,\r\n            version_before: workspace.database.version,\r\n            statements: statements\r\n        }\r\n\r\n        ajax(\"addDatabaseStatements\", request, (response: AddDatabaseStatementsResponse) => {\r\n            if (response.success) {\r\n                callback(response.statements_before, response.new_version);\r\n            }\r\n        });\r\n    }\r\n\r\n    fetchDatabase(workspace: Workspace, callback: (error: string) => void) {\r\n\r\n        let cacheManager: CacheManager = new CacheManager();\r\n\r\n        let request: GetDatabaseRequest = {\r\n            workspaceId: workspace.id\r\n        }\r\n\r\n        ajax(\"getDatabase\", request, (response: getDatabaseResponse) => {\r\n            if (response.success) {\r\n\r\n                workspace.database = WDatabase.fromDatabaseData(response.database, response.version)\r\n                workspace.databaseId = workspace.database.id;\r\n\r\n                if (workspace.database.based_on_template_id == null) {\r\n                    callback(null);\r\n                    return\r\n                }\r\n\r\n                cacheManager.fetchTemplateFromCache(workspace.database.based_on_template_id, (templateDump: Uint8Array) => {\r\n\r\n                    if (FileTool.isZipfile(templateDump)) {\r\n                        try {\r\n                            // @ts-ignore\r\n                            workspace.database.templateDump = pako.inflate(templateDump);\r\n                        } catch (err) {\r\n                            console.log(err);\r\n                            console.log(\"Dump seems not to be compressed...\");\r\n                            workspace.database.templateDump = templateDump;\r\n                        }\r\n                    } else {\r\n                        workspace.database.templateDump = templateDump;\r\n                    }\r\n\r\n                    if (FileTool.isSqLiteFile(workspace.database.templateDump)) {\r\n                        callback(null);\r\n                        return;\r\n                    } else {\r\n                        this.fetchTemplate(workspace.id, (template, error) => {\r\n                            if (template != null) {\r\n                                cacheManager.saveTemplateToCache(workspace.database.based_on_template_id, template);\r\n                                // @ts-ignore\r\n                                workspace.database.templateDump = pako.inflate(template);\r\n                                callback(null);\r\n                                return;\r\n                            } else {\r\n                                workspace.database.templateDump = null;\r\n                                callback(error);\r\n                                return;\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    fetchTemplate(workspaceId: number, callback: (template: Uint8Array, error?: string) => void) {\r\n        let request: GetTemplateRequest = {\r\n            workspaceId: workspaceId\r\n        }\r\n\r\n        let headers: { [key: string]: string; } = {};\r\n        if (csrfToken != null) headers = { \"x-token-pm\": csrfToken };\r\n\r\n        $.ajax({\r\n            type: 'POST',\r\n            async: true,\r\n            data: JSON.stringify(request),\r\n            contentType: 'application/json',\r\n            url: \"servlet/getTemplate\",\r\n            headers: headers,\r\n            xhrFields: { responseType: 'arraybuffer' },\r\n            success: function (response: any) {\r\n                callback(new Uint8Array(response));\r\n            },\r\n            error: function (jqXHR, message) {\r\n                callback(null, \"Konnte das Template nicht laden.\");\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    fetchTemplateList(callback: (templateList: TemplateListEntry[]) => void) {\r\n        let request: GetTemplateListRequest = { user_id: this.main.user.id }\r\n\r\n        ajax(\"getTemplateList\", request, (response: GetTemplateListResponse) => {\r\n            if (response.success) {\r\n                callback(response.templateList);\r\n            } else {\r\n                callback([]);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback([]);\r\n        })\r\n\r\n    }\r\n\r\n    updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (remoteFileData.version > module.file.version) {\r\n                        if (fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate) {\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false) {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.sql_history = \"\";\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n\r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: \"workspace\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n    }\r\n\r\n    createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n    rollback(callback: (error: string, rollbackLocalNeeded: boolean) => void) {\r\n        let workspace = this.main.currentWorkspace;\r\n        let request: RollbackRequest = { workspaceId: workspace.id, version: workspace.database.version }\r\n\r\n        ajax(\"rollback\", request, (response: RollbackResponse) => {\r\n            if (response.success) {\r\n\r\n                callback(null, workspace.database.version > response.new_version);\r\n            } else {\r\n                alert(response.message);\r\n                callback(response.message, false);\r\n            }\r\n        }, (message) => {\r\n            alert(message);\r\n            callback(message, false);\r\n        })\r\n\r\n    }\r\n\r\n\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { copyTextToClipboard, makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\n\r\nexport class DatabaseSettingsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private workspace: Workspace) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Datenbank-Einstellungen</div>\r\n            <div style=\"width: 100%; padding-left: 10px; box-sizing: border-box\">\r\n                <div class=\"jo_ds_settings\" style=\"margin-left: 0px\">\r\n                <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n                </div>\r\n\r\n                <div class=\"jo_ds_settings_caption\"> Eigentümer/in: <span class='jo_ds_settings_owner' style='font-weight: normal' ></span></div>\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                    Beschreibung:\r\n                </div>\r\n                <div>\r\n                    <textarea class=\"jo_ds_settings_description\" maxlength=\"5000\"></textarea>\r\n                </div>\r\n\r\n                <div id=\"jo_ds_ownerSettings\">\r\n                <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                    Zugriffscodes für andere Benutzer:\r\n                    </div>\r\n                                    \r\n                    <div>\r\n                        <table class=\"jo_ds_secret_table\">\r\n                        <tr>\r\n                            <td>Nur Lesen:</td><td class=\"jo_ds_secret jo_ds_secret_read\"></td><td id=\"copySecretTdread\"></td><td><button class=\"jo_small_button jo_button_code_read\">Neuen Code generieren</button></td>\r\n                        <tr>\r\n                            <td>Lesen und schreiben:</td><td class=\"jo_ds_secret jo_ds_secret_write\"></td><td id=\"copySecretTdwrite\"></td><td><button class=\"jo_small_button jo_button_code_write\">Neuen Code generieren</button></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Lesen, schreiben und Struktur verändern:</td><td class=\"jo_ds_secret jo_ds_secret_ddl\"></td><td id=\"copySecretTdddl\"></td><td><button class=\"jo_small_button jo_button_code_ddl\">Neuen Code generieren</button></td>\r\n                        </tr>\r\n                        </table>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"jo_ds_settings_caption\" style=\"margin-top: 20px\">\r\n                    Datenbank freigeben als Vorlage für andere Benutzer:\r\n                    </div>\r\n\r\n                    <fieldset id=\"jo_ds_publishedTo\">\r\n                        <input type=\"radio\" id=\"b0\" name=\"publishedFilter\" value=\"0\" checked=\"checked\"><label for=\"b0\">Keine Freigabe</label>\r\n                        <input type=\"radio\" id=\"b1\" name=\"publishedFilter\" value=\"1\"><label for=\"b1\">Freigabe für meine Klasse(n)</label>\r\n                        <input type=\"radio\" id=\"b2\" name=\"publishedFilter\" value=\"2\" style=\"visibility: none\"><label id=\"lb2\" for=\"b2\" style=\"visibility: none\">Freigabe für meine Schule</label>\r\n                        <input type=\"radio\" id=\"b3\" name=\"publishedFilter\" value=\"3\" style=\"visibility: none\"><label id=\"lb3\" for=\"b3\" style=\"visibility: none\">Freigabe für alle Schulen</label>\r\n                    </fieldset>\r\n\r\n                    <div class=\"jo_ds_settings_caption\" style=\"margin-top: 5px\">\r\n                    Wichtiger Hinweis:\r\n                    </div>\r\n                    <div style=\"font-weight: normal\">\r\n                    Beim erstmaligen Freigeben wird der aktuelle Zustand der Datenbank als Vorlage für andere Benutzer/innen hochgeladen und bereitgestellt. Änderungen, die danach \r\n                    in der Datenbank vorgenommen werden, werden nur dann in die Vorlage integriert, wenn explizit \"Datenbank -> Aktuellen Zustand als Vorlage hochladen\" aufgerufen wird.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_save_button\">Speichern</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n\r\n        let that = this;\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        if (!this.main.user.is_teacher) {\r\n            jQuery('#b2').next().remove();\r\n            jQuery('#b2').remove();\r\n        }\r\n\r\n        if (!(this.main.user.is_admin || this.main.user.username == 'DB-Vorlagen')) {\r\n            jQuery('#b3').next().remove();\r\n            jQuery('#b3').remove();\r\n        }\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_save_button').on('click', () => {\r\n            this.saveNameAndPublishedTo();\r\n        })\r\n\r\n        this.setValues();\r\n\r\n        [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n            jQuery('.jo_button_code_' + kind).on('pointerdown', () => {\r\n                that.main.networkManager.setNewSecret(that.workspace.id, kind, (secret) => {\r\n                    jQuery('.jo_ds_secret_' + kind).text(secret);\r\n                })\r\n            })\r\n            let $copyButton = jQuery('<button class=\"jo_small_button jo_copy_secret_button jo_active\">Kopieren</button>')\r\n            jQuery('#copySecretTd' + kind).append($copyButton);\r\n            $copyButton.on('pointerdown', () => {\r\n                copyTextToClipboard(jQuery('.jo_ds_secret_' + kind).text());\r\n            })\r\n        })\r\n\r\n\r\n    }\r\n\r\n    saveNameAndPublishedTo() {\r\n        let published_to = 0;\r\n        jQuery('#jo_ds_publishedTo').find('input').each((n, element) => {\r\n            let $element = jQuery(element);\r\n            //@ts-ignore\r\n            if (<HTMLInputElement>element.checked) {\r\n                published_to = Number.parseInt(<string>$element.attr('value'));\r\n            }\r\n        })\r\n\r\n        let newName = <string>jQuery('.jo_databasename').val();\r\n        let newDescription = <string>jQuery('.jo_ds_settings_description').val();\r\n\r\n        this.workspace.name = newName;\r\n        this.workspace.panelElement.$htmlFirstLine.find('.jo_filename').text(newName);\r\n        this.workspace.saved = false;\r\n\r\n        let database = this.workspace.database;\r\n\r\n        this.main.networkManager.setNameAndPublishedTo(this.workspace.id,\r\n            newName, published_to, newDescription,\r\n            () => {\r\n                this.workspace.name = newName;\r\n                if (database.published_to == 0 && published_to > 0) {\r\n                    new TemplateUploader().uploadCurrentDatabase(this.workspace.id, this.main, null, \"publishDatabaseAsTemplate\");\r\n                }\r\n                database.published_to = published_to;\r\n                database.description = newDescription;\r\n                this.showMainWindow();\r\n            })\r\n    }\r\n\r\n    setValues() {\r\n        jQuery('.jo_databasename').val(this.workspace.database.name);\r\n        this.main.networkManager.getDatabaseSettings(this.workspace.id, (response) => {\r\n\r\n            let ownerText: string = response.owner;\r\n            if (!response.userIsOwner && response.secrets != null) ownerText += \" (hat aber keinen mit der Datenbank verbundenen Workspace)\";\r\n\r\n            jQuery('.jo_ds_settings_owner').text(ownerText);\r\n\r\n            [\"read\", \"write\", \"ddl\"].forEach(kind => {\r\n                let secret: string = \"---\";\r\n                if (response.secrets != null) secret = response.secrets[kind];\r\n                jQuery('.jo_ds_secret_' + kind).text(secret);\r\n            });\r\n            if (this.main.user.is_admin || this.main.user.username == 'DB-Vorlagen') {\r\n                jQuery('#b3').css('visibility', 'visible');\r\n                jQuery('#lb3').css('visibility', 'visible');\r\n            }\r\n            if (this.main.user.is_schooladmin) {\r\n                jQuery('#b2').css('visibility', 'visible');\r\n                jQuery('#lb2').css('visibility', 'visible');\r\n            }\r\n            // jQuery('#jo_ds_publishedTo input').attr('checked', '');\r\n            jQuery('#b' + response.publishedTo).prop('checked', true);\r\n\r\n            jQuery('#jo_upload_db').prop('checked', response.publishedTo != 0);\r\n\r\n            jQuery('.jo_ds_settings_description').val(this.workspace.database.description);\r\n\r\n            if (response.secrets == null) {\r\n                this.$dialog.find('input, textarea').attr('readonly', '').css('background-color', '#888');\r\n                this.$dialog.find('#jo_ds_ownerSettings').hide();\r\n                this.$dialog.find('#jo_ds_save_button').hide();\r\n            } else {\r\n                this.$dialog.find('input, textarea').removeAttr('readonly').css('background-color', '#fff');;\r\n                this.$dialog.find('#jo_ds_ownerSettings').show();\r\n                this.$dialog.find('#jo_ds_save_button').show();\r\n            }\r\n\r\n\r\n        })\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { WorkspaceData } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { DatabaseSettingsDialog } from \"../main/gui/DatabaseSettingsDialog.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { WDatabase } from \"./WDatabase.js\";\r\n\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string = \"\";\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    \r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    databaseId: number;\r\n    database: WDatabase;\r\n\r\n    sql_history: string;\r\n\r\n    permissions: number;\r\n\r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main);\r\n        this.sql_history = \"\";\r\n    }\r\n    \r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            sql_history: this.sql_history,\r\n            path: this.path,\r\n            isFolder: false,  \r\n            permissions: this.permissions,\r\n            database_id: this.databaseId\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n    renderSettingsButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonSettings');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        // let myMain: Main = <Main>this.main;\r\n\r\n            let $button = jQuery('<div class=\"jo_settingsButton img_settings jo_button jo_active\" title=\"Datenbank-Einstellungen...\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('pointerdown', (e) => e.stopPropagation());\r\n            $button.on('pointerup', (e) => {\r\n                e.stopPropagation();\r\n\r\n                new DatabaseSettingsDialog(<any>that.main, that);\r\n\r\n            });\r\n\r\n            $button[0].addEventListener(\"contextmenu\", (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }, false);\r\n\r\n        // } else {\r\n        //     $buttonDiv.find('.jo_startButton').remove();\r\n        // }\r\n    }\r\n\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.sql_history = ws.sql_history;\r\n        w.permissions = ws.permissions;\r\n        w.databaseId = ws.database_id;\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","import { Editor } from \"./Editor.js\";\r\nimport { CompletionHint, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Symbol, SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Column, Table } from \"../../compiler/parser/SQLTable.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' ', ',', '('];\r\n\r\n    public keywordCompletionItems: Map<string, monaco.languages.CompletionItem> = new Map();\r\n\r\n    constructor(private main: MainBase) {\r\n        this.setupKeywordCompletionItems();\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let that = this;\r\n\r\n            let wfc = function waitForCompiler(){\r\n                if(module.file.dirty){\r\n                    setTimeout(() => {\r\n                        wfc();\r\n                    }, 100);\r\n                } else {\r\n                    resolve(that.provideCompletionItemsIntern(model, position, context, token));\r\n                }\r\n            }\r\n        \r\n            wfc();\r\n\r\n        })\r\n\r\n        // Promise.resolve({\r\n        //     suggestions: completionItems\r\n        // });\r\n    }\r\n\r\n    provideCompletionItemsIntern(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, \r\n        token: monaco.CancellationToken): monaco.languages.CompletionList {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n        }, 500);\r\n\r\n        let module: Module =\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null || module.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let symbolTable = module.mainSymbolTable.findTableAtPosition(position.lineNumber, position.column);\r\n        let completionHint: CompletionHint = module.getCompletionHint(position.lineNumber, position.column);\r\n        if (completionHint == null) {\r\n            completionHint = {\r\n                fromColumn: 0,\r\n                toColumn: 0,\r\n                fromLine: 0,\r\n                toLine: 0,\r\n                hintColumns: false,\r\n                hintTables: false,\r\n                hintKeywords: []\r\n            }\r\n        }\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n        this.addKeywordCompletionItems(completionHint, completionItems);\r\n\r\n        let dotMatch = textUntilPosition.match(/.*\\s([\\wöäüÖÄÜß]*)(\\.)([\\wöäüÖÄÜß]*)$/);\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        if (dotMatch == null) {\r\n            this.addIdentifierCompletionItems(completionHint, symbolTable, completionItems);\r\n        } else {\r\n            this.addDotCompletionItems(position, dotMatch, identifierAndBracketAfterCursor, symbolTable, completionItems);\r\n        }\r\n\r\n        let word = model.getWordUntilPosition(position);\r\n        let replaceWordRange = { startColumn: word.startColumn, startLineNumber: position.lineNumber, endColumn: word.endColumn, endLineNumber: position.lineNumber };\r\n        let insertAfterCursorRange = { startColumn: position.column, startLineNumber: position.lineNumber, endColumn: position.column, endLineNumber: position.lineNumber }\r\n\r\n        for (let item of completionItems) {\r\n            if (item.range == null) {\r\n                if (item.insertText.startsWith(\",\")) {\r\n                    item.range = insertAfterCursorRange;\r\n                } else {\r\n                    item.range = replaceWordRange;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (completionHint.dontHint != null) {\r\n            completionItems = completionItems.filter(item => completionHint.dontHint.indexOf(item.insertText) < 0);\r\n        }\r\n\r\n        return {\r\n            suggestions: completionItems\r\n        };\r\n    }\r\n\r\n\r\n    addDotCompletionItems(position: monaco.Position, dotMatch: RegExpMatchArray, identifierAndBracketAfterCursor: string,\r\n        symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let textAfterDot = dotMatch[3];\r\n        let textBeforeDot = dotMatch[1];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        for (let symbol of symbolTable.symbolList) {\r\n            if (symbol.table != null) {\r\n                let identifier: string = symbol.table.identifier;\r\n                if (symbol.tableAlias != null) identifier = symbol.tableAlias;\r\n                if (identifier.toLowerCase() == textBeforeDot) {\r\n                    for (let column of symbol.table.columns) {\r\n                        completionItems.push({\r\n                            label: column.identifier,\r\n                            detail: \"Spalte \" + column.identifier + \" der Tabelle \" + symbol.table.identifier,\r\n                            filterText: column.identifier,\r\n                            insertText: column.identifier,\r\n                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: monaco.languages.CompletionItemKind.Field,\r\n                            range: rangeToReplace\r\n                        })\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    addIdentifierCompletionItems(completionHint: CompletionHint, symbolTable: SymbolTable, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n        if (!(completionHint.hintTables || completionHint.hintColumns)) {\r\n            return;\r\n        }\r\n\r\n        let tableIdentifiers: { [identifier: string]: boolean } = {};\r\n\r\n        let st: SymbolTable = symbolTable;\r\n        let columns: { [identifier: string]: Symbol[] } = {};\r\n        let columnIdentifiers: string[] = [];\r\n\r\n        while (st != null) {\r\n            for (let symbol of st.symbolList) {\r\n                if (symbol.column != null) {\r\n                    let columnIdentifier = symbol.column.identifier;\r\n                    if (columns[columnIdentifier] == null) {\r\n                        columns[columnIdentifier] = [symbol];\r\n                        columnIdentifiers.push(columnIdentifier);\r\n                    } else {\r\n                        columns[columnIdentifier].push(symbol);\r\n                    }\r\n                } else if (symbol.table != null && completionHint.hintTables) {\r\n                    if (!tableIdentifiers[symbol.identifier]) {\r\n                        let insertText = praefix + symbol.identifier + suffix;\r\n                        completionItems.push({\r\n                            label: symbol.identifier,\r\n                            detail: \"Tabelle \" + symbol.table.identifier,\r\n                            filterText: symbol.identifier,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Class,\r\n                            range: undefined,\r\n                            sortText: \"aa\" + symbol.identifier\r\n                        });\r\n                        tableIdentifiers[symbol.identifier] = true;\r\n                    }\r\n                }\r\n            }\r\n            st = st.parent;\r\n        }\r\n\r\n        if (completionHint.hintColumns) {\r\n            for (let ci of columnIdentifiers) {\r\n                let columList = columns[ci];\r\n                let withTable = columList.length > 1 && completionHint.hintColumnsOfTable == null;\r\n                for (let cs of columList) {\r\n                    let text = cs.identifier;\r\n                    if (withTable && cs.identifier == cs.column.identifier.toLowerCase()) {\r\n                        text = (cs.tableAlias == null ? cs.column.table.identifier : cs.tableAlias) + \".\" + text;\r\n                    }\r\n                    if (completionHint.hintColumnsOfTable == null || cs.column?.table?.identifier == completionHint.hintColumnsOfTable) {\r\n                        let insertText = praefix + text + suffix;\r\n                        completionItems.push({\r\n                            label: text,\r\n                            detail: \"Die Spalte \" + cs.column.identifier + \" der Tabelle \" + cs.column.table.identifier,\r\n                            filterText: text,\r\n                            insertText: insertText,\r\n                            insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                            kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Field,\r\n                            range: undefined\r\n                        })\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    keywordToSnippetMap: { [keyword: string]: string } = {\r\n        \"(\": \"(\\n\\t$0\\n)\",\r\n        \"varchar\": \"varchar($1) $0\",\r\n        \"decimal\": \"decimal($1, $2) $0\"\r\n    }\r\n\r\n    addKeywordCompletionItems(completionHint: CompletionHint, completionItems: monaco.languages.CompletionItem[]) {\r\n        let praefix: string = completionHint.praefix == null ? \"\" : completionHint.praefix;\r\n        let suffix: string = completionHint.suffix == null ? \"\" : completionHint.suffix;\r\n\r\n\r\n        for (let text of completionHint.hintKeywords) {\r\n            let insertText = praefix + text + suffix;\r\n            let snippet = this.keywordToSnippetMap[text];\r\n\r\n            let ci = this.keywordCompletionItems.get(text);\r\n            if (ci != null) {\r\n                completionItems.push(ci);\r\n            } else if (snippet != null) {\r\n                let label = snippet.replace(\"$0\", \"\").replace(\"$1\", \"\").replace(\"$2\", \"\").replace(/ /g, \"\").replace(/\\n/g, \"\").replace(/\\t/g, \"\");\r\n                completionItems.push({\r\n                    label: label,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: snippet,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                })\r\n            } else {\r\n                completionItems.push({\r\n                    label: text,\r\n                    detail: \"\",\r\n                    filterText: text,\r\n                    insertText: text,\r\n                    insertTextRules: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : monaco.languages.CompletionItemInsertTextRule.KeepWhitespace,\r\n                    kind: insertText.indexOf(\"$\") >= 0 ? monaco.languages.CompletionItemKind.Snippet : monaco.languages.CompletionItemKind.Keyword,\r\n                    range: undefined,\r\n                    sortText: text == \"from\" ? \"*\" : undefined\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setupKeywordCompletionItems() {\r\n        this.keywordCompletionItems.set(\"delete from\",\r\n            {\r\n                label: \"delete from <Tabelle> where <Bedingung>\",\r\n                detail: \"Anweisung zum Löschen von Datensätzen\",\r\n                filterText: `delete from`,\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `delete from `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"drop table\",\r\n            {\r\n                label: \"drop table <Tabelle>\",\r\n                detail: \"Anweisung zum Löschen einer Tabelle\",\r\n                filterText: 'drop table',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `drop table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"alter\",\r\n            {\r\n                label: \"alter table <Tabelle> <rename to, rename column, add column, drop column>\",\r\n                detail: \"Anweisung zum Ändern des Schemas (alter table <Tabelle> <rename to, rename column, add column, drop column>)\",\r\n                filterText: 'alter',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `alter table `,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"select\",\r\n            {\r\n                label: \"select <Spalten> from <Tabellen> where <Bedingung>\",\r\n                detail: \"Select-Anweisung\",\r\n                filterText: 'select',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `select * from $1\\nwhere $0\\n`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        this.keywordCompletionItems.set(\"create table\",\r\n            {\r\n                label: \"create table <Tabellenbezeichner> (<Spaltendefinitionen>)\",\r\n                detail: \"Create table-Anweisung (Erstellt eine neue Tabelle)\",\r\n                filterText: 'create',\r\n                // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                insertText: `create table $1 (\\n\\t$0\\n);`,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            });\r\n\r\n        // this.keywordCompletionItems.set(\"from\",\r\n        //     {\r\n        //         label: \"from <Tabellen> where <Bedingung>\",\r\n        //         detail: \"from-Teil der select-Anweisung\",\r\n        //         filterText: 'from',\r\n        //         // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n        //         insertText: `from $1\\nwhere $0\\n`,\r\n        //         command: {\r\n        //             id: \"editor.action.triggerSuggest\",\r\n        //             title: '123',\r\n        //             arguments: []\r\n        //         },\r\n        //         insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n        //         kind: monaco.languages.CompletionItemKind.Snippet,\r\n        //         range: undefined\r\n        //     });\r\n\r\n    }\r\n\r\n\r\n}","import { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                this.main.compileIfDirty();\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = \r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"select\": \"```\\nselect spalte1, spalte2, ..., spalteN from tabelle where <Bedingung>\\n``` \\nsucht alle Zeilen der Tabelle, die der Bedingung genügen (**Selektion**) und gibt davon die angegebenen Spalten aus (**Projektion**). Das Ergebnis der ```select```-Anweisung ist wieder eine Tabelle. \\n \",\r\n        \"from\": \"```\\nselect spalte1, spalte2, ..., spalteN from tabelle where <Bedingung>\\n``` \\nsucht alle Zeilen der Tabelle, die der Bedingung genügen (**Selektion**) und gibt davon die angegebenen Spalten aus (**Projektion**). Das Ergebnis der ```select```-Anweisung ist wieder eine Tabelle. \\n \",\r\n        \"where\": \"```\\n... where <Bedingung>\\n``` \\nHinter ```where``` steht immer eine Bedingung, d.h. ein Term mit booleschem Wert (```true``` oder ```false```). Die Anweisung wird für alle Zeilen ausgeführt, die der Bedingung genügen, d.h. für die der Term den Wert ```true``` ergibt. \\n \",\r\n        \"delete\": \"```\\ndelete from tabelle where <Bedingung>\\n``` \\nlöscht alle Zeilen der Tabelle, die der Bedingung genügen. \\n \",\r\n        \"insert\": \"```\\ninsert (spalte1, spalte2, ..., spalteN) into tabelle values (Wert1, ..., WertN), (Wert1, ..., WertN), ... \\n``` \\nFügt Datensätze in eine Tabelle ein. Die Werte ```wert1, ..., wertN``` müssen den angegebenen Spalten ```Spalte1, ..., SpalteN``` entsprechen.\\n \",\r\n        \"values\": \"```\\ninsert (spalte1, spalte2, ..., spalteN) into tabelle values (Wert1, ..., WertN), (Wert1, ..., WertN), ... \\n``` \\nFügt Datensätze in eine Tabelle ein. Die Werte ```wert1, ..., wertN``` müssen den angegebenen Spalten ```Spalte1, ..., SpalteN``` entsprechen.\\n \",\r\n        \"update\": \"```\\nupdate tabelle set Spalte1 = Wert1, Spalte2 = Wert2, ..., SpalteN = WertN where <Bedingung> \\n``` \\nÄndert in allen Datensätze der Tabelle, die der Bedingung genügen, die Werte in den angegebenen Spalten ```Spalte1, ..., SpalteN```.\\n \",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"=\": \"```\\na = b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\n```=``` nennt man **Vergleichsoperator**. \\n\\n**Tipp:** In SQL gibt es auch einen **Ungleich-Operator**: ```<>```\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"<>\": \"```\\na <> b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\n```<>``` nennt man **Ungleich-Operator**.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineVscSQL() {\r\n    monaco.languages.register({\r\n        id: 'vscSQL',\r\n        extensions: ['.sql'],\r\n        //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        comments: {\r\n            lineComment: '--',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')']\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ]\r\n    };\r\n    let language = {\r\n\r\n        defaultToken: '',\r\n        tokenPostfix: '.sql',\r\n        ignoreCase: true,\r\n        brackets: [\r\n            { open: '[', close: ']', token: 'delimiter.square' },\r\n            { open: '(', close: ')', token: 'delimiter.parenthesis' }\r\n        ],\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"'])/,\r\n        keywords: [\r\n            \"ABORT\", \"ACTION\", \"ADD\", \"AFTER\", \"ALL\", \"ALTER\", \"ANALYZE\", \"AND\", \"AS\", \"ASC\", \"ATTACH\", \"AUTOINCREMENT\", \"BEFORE\",\r\n            \"BEGIN\", \"BETWEEN\", \"BY\", \"CASCADE\", \"CASE\", \"CAST\", \"CHECK\", \"COLLATE\", \"COLUMN\", \"COMMIT\", \"CONFLICT\", \"CONSTRAINT\",\r\n            \"CREATE\", \"CROSS\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"DATABASE\", \"DEFAULT\", \"DEFERRABLE\", \"DEFERRED\",\r\n            \"DELETE\", \"DESC\", \"DETACH\", \"DISTINCT\", \"DROP\", \"EACH\", \"ELSE\", \"END\", \"ESCAPE\", \"EXCEPT\", \"EXCLUSIVE\", \"EXISTS\", \"EXPLAIN\",\r\n            \"FAIL\", \"FOR\", \"FOREIGN\", \"FROM\", \"FULL\", \"GLOB\", \"GROUP\", \"HAVING\", \"IF\", \"IGNORE\", \"IMMEDIATE\", \"IN\", \"INDEX\", \"INDEXED\",\r\n            \"INITIALLY\", \"INNER\", \"INSERT\", \"INSTEAD\", \"INTERSECT\", \"INTO\", \"IS\", \"ISNULL\", \"JOIN\", \"KEY\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MATCH\",\r\n            \"NATURAL\", \"NO\", \"NOT\", \"NOTNULL\", \"NULL\", \"OF\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\", \"PLAN\", \"PRAGMA\", \"PRIMARY\", \"QUERY\",\r\n            \"RAISE\", \"RECURSIVE\", \"REFERENCES\", \"REGEXP\", \"REINDEX\", \"RELEASE\", \"RENAME\", \"REPLACE\", \"RESTRICT\", \"RIGHT\", \"ROLLBACK\", \"ROW\",\r\n            \"SAVEPOINT\", \"SELECT\", \"SET\", \"TABLE\", \"TEMP\", \"TEMPORARY\", \"THEN\", \"TO\", \"TRANSACTION\", \"TRIGGER\", \"UNION\", \"UNIQUE\", \"UPDATE\",\r\n            \"USING\", \"VACUUM\", \"VALUES\", \"VIEW\", \"VIRTUAL\", \"WHEN\", \"WHERE\", \"WITH\", \"WITHOUT\", \"ENGINE\", \"CHARSET\"\r\n        ],\r\n        operators: [\r\n            \"AND\", \"BETWEEN\", \"IN\", \"LIKE\", \"NOT\", \"OR\", \"IS\", \"NULL\", \"INTERSECT\", \"UNION\", \"INNER\", \"JOIN\", \"LEFT\", \"OUTER\", \"RIGHT\"\r\n        ],\r\n        builtinFunctions: [\r\n            \"abs\", \"changes\", \"char\", \"coalesce\", \"count\", \"glob\", \"hex\", \"ifnull\",\r\n            \"iif\", \"instr\", \"last_insert_rowid\", \"length\", \"like\", \"likelihood\", \"likely\",\r\n            \"lower\", \"ltrim\", \"max\", \"min\", \"nullif\", \"quote\", \"random\", \"randomblob\",\r\n            \"replace\", \"round\", \"rtrim\", \"sign\", \"soundex\", \"sqlite_version\", \"substr\", \"substring\",\r\n            \"total_changes\", \"trim\", \"typeof\", \"unicode\", \"unlikely\", \"upper\", \"zeroblob\"\r\n        ],\r\n        builtinVariables: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        pseudoColumns: [\r\n            // NOT SUPPORTED\r\n        ],\r\n        tokenizer: {\r\n            root: [\r\n                { include: '@comments' },\r\n                { include: '@whitespace' },\r\n                { include: '@pseudoColumns' },\r\n                { include: '@numbers' },\r\n                { include: '@strings' },\r\n                { include: '@complexIdentifiers' },\r\n                { include: '@scopes' },\r\n                [/[;,.]/, 'delimiter'],\r\n                [/[()]/, '@brackets'],\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@builtinFunctions': 'functions',\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[\\w@#$]+/, {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@operators': 'operator',\r\n                        '@builtinVariables': 'predefined',\r\n                        // '@builtinFunctions': 'functions',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[<>=!%&+\\-*/|~^]/, 'operator'],\r\n            ],\r\n            whitespace: [\r\n                [/\\s+/, 'white']\r\n            ],\r\n            comments: [\r\n                [/--+.*/, 'comment'],\r\n                [/\\/\\*/, { token: 'comment.quote', next: '@comment' }]\r\n            ],\r\n            comment: [\r\n                [/[^*/]+/, 'comment'],\r\n                // Not supporting nested comments, as nested comments seem to not be standard?\r\n                // i.e. http://stackoverflow.com/questions/728172/are-there-multiline-comment-delimiters-in-sql-that-are-vendor-agnostic\r\n                // [/\\/\\*/, { token: 'comment.quote', next: '@push' }],    // nested comment not allowed :-(\r\n                [/\\*\\//, { token: 'comment.quote', next: '@pop' }],\r\n                [/./, 'comment']\r\n            ],\r\n            pseudoColumns: [\r\n                [/[$][A-Za-z_][\\w@#$]*/, {\r\n                    cases: {\r\n                        '@pseudoColumns': 'predefined',\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n            ],\r\n            numbers: [\r\n                [/0[xX][0-9a-fA-F]*/, 'number'],\r\n                [/[$][+-]*\\d*(\\.\\d*)?/, 'number'],\r\n                [/((\\d+(\\.\\d*)?)|(\\.\\d+))([eE][\\-+]?\\d+)?/, 'number']\r\n            ],\r\n            strings: [\r\n                [/'/, { token: 'string', next: '@string' }],\r\n            ],\r\n            string: [\r\n                [/[^\\\\']+/, 'string'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/''/, 'string'],\r\n                [/'/, { token: 'string', next: '@pop' }]\r\n            ],\r\n            complexIdentifiers: [\r\n                [/\"/, { token: 'identifier.quote', next: '@quotedIdentifier' }]\r\n            ],\r\n            quotedIdentifier: [\r\n                [/[^\"]+/, 'identifier'],\r\n                [/\"\"/, 'identifier'],\r\n                [/\"/, { token: 'identifier.quote', next: '@pop' }]\r\n            ],\r\n            scopes: [\r\n                // NOT SUPPORTED\r\n            ]\r\n        }\r\n\r\n\r\n\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('vscSQL', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('vscSQL', language);\r\n\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\n\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: Main, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let user = main.user;\r\n        if(user == null) return;\r\n\r\n        let helperHistory = user.settings!.helperHistory;\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"newDatabaseHelper\":\r\n                    text = `Es gibt noch keine Datenbank. <br> Nutzen Sie den Button\r\n                        <span class='img_add-database-dark jo_inline-image'></span> um eine Datenbank anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                    case \"newSQLFileHelper\":\r\n                        text = `Es gibt noch keine Datei mit SQL-Anweisungen. <br> Nutzen Sie den Button \r\n                            <span class='img_add-file-dark jo_inline-image'></span> um eine neue Datei anzulegen.\r\n                            `;\r\n                        direction = \"left\";\r\n                        break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"playButtonHelper\":\r\n                    text = `Mit dem \"Start-Button\"\r\n                        (<span class='img_start-dark jo_inline-image'></span>) \r\n                        oder der Tastenkombination &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt; \r\n                        wird die Anweisung ausgeführt, in der der Cursor gerade steht. \r\n                        <br> Wollen Sie mehrere Anweisungen hintereinander ausführen, so markieren \r\n                        Sie alle Anweisungen und klicken Sie dann auf <span class='img_start-dark jo_inline-image'></span>\r\n                        oder drücken Sie  &lt;Strg&gt;&nbsp;+&nbsp&lt;Enter&gt;. `;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { defineVscSQL } from \"./VSCSql.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\n\r\nexport class Editor {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineVscSQL();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'string.sql', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: '7bef3f' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: 'effefe' },\r\n                { token: 'statement', foreground: '9cdcfe', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '619ceb', fontStyle: 'bold' },\r\n                { token: 'table', foreground: 'ff0000', fontStyle: 'bold' },\r\n                { token: 'delimiter', foreground: 'e8eb38' }\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#402020\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'functions', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'string.sql', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '8000e0' },\r\n                { token: 'statement', foreground: '001080', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightStatementGreen\": \"#004000\",\r\n                \"jo_highlightStatementYellow\": \"#404000\",\r\n                \"jo_highlightStatementRed\": \"#400000\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'vscSQL',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            if(element != null){\r\n                element.removeEventListener(\"wheel\", mouseWheelListener);\r\n                element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n            }\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('vscSQL', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('vscSQL', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('vscSQL', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('vscSQL', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('vscSQL', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if (!nextLine.trim().startsWith(\"*\")) {\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n        }\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        let that = this;\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Execute statement',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'SQL-Anweisung ausführen',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.0,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                that.main.getActionManager().trigger('execute');\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        let executeActionActive = false;\r\n\r\n        for(let sqlStatement of module.getSQLSTatementsAtSelection(this.editor.getSelection())){\r\n\r\n            let classname = \"jo_highlightStatementGreen\";\r\n            if (sqlStatement != null) {\r\n                if (sqlStatement.hasErrors) {\r\n                    classname = \"jo_highlightStatementRed\";\r\n                    if (sqlStatement.acceptedBySQLite) {\r\n                        classname = \"jo_highlightStatementYellow\";\r\n                        executeActionActive = true;\r\n                    }\r\n                } else {\r\n                    executeActionActive = true;\r\n                }\r\n    \r\n                decorations.push({\r\n                    range: {\r\n                        startColumn: sqlStatement.from.column, startLineNumber: sqlStatement.from.line,\r\n                        endColumn: sqlStatement.to.column, endLineNumber: sqlStatement.to.line\r\n                    },\r\n                    options: {\r\n                        className: classname, isWholeLine: false, overviewRuler: {\r\n                            color: { id: classname },\r\n                            darkColor: { id: classname },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: classname },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n    \r\n            }\r\n        }\r\n\r\n\r\n        this.main.getActionManager().setActive('execute', executeActionActive);\r\n\r\n        if(executeActionActive && !this.main.isEmbedded()){\r\n            Helper.showHelper(\"playButtonHelper\", <any>this.main, jQuery('div.img_start-dark'));\r\n        }\r\n\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n\r\n}","export function createDb1(SQL, buffer) {\r\n\r\n    var db = new SQL.Database(buffer);\r\n\r\n    db.create_function(\"month\", function(inputText){\r\n        var dateformat = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n        let match = inputText.match(dateformat);\r\n        if (match){\r\n            return Number(match[1]);\r\n        }\r\n        return -1;\r\n    })\r\n\r\n    db.create_function(\"day\", function(inputText){\r\n        var dateformat = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n        let match = inputText.match(dateformat);\r\n        if (match){\r\n            return Number(match[2]);\r\n        }\r\n        return -1;\r\n    })\r\n\r\n    db.create_function(\"year\", function(inputText){\r\n        var dateformat = /^(\\d{4})[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n        let match = inputText.match(dateformat);\r\n        if (match){\r\n            return Number(match[1]);\r\n        }\r\n        return -1;\r\n    })\r\n\r\n    db.create_function(\"isDate\", function (inputText) {\r\n\r\n        if (inputText == null) return true;\r\n        if (typeof inputText != 'string') return false;\r\n\r\n        // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n        var dateformat = /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\r\n        // Match the date format through regular expression\r\n        if (inputText.match(dateformat)) {\r\n            //Test which seperator is used '/' or '-'\r\n            var opera1 = inputText.split('/');\r\n            var opera2 = inputText.split('-');\r\n            var lopera1 = opera1.length;\r\n            var lopera2 = opera2.length;\r\n            // Extract the string into month, date and year\r\n            if (lopera1 > 1) {\r\n                var pdate = inputText.split('/');\r\n            }\r\n            else if (lopera2 > 1) {\r\n                var pdate = inputText.split('-');\r\n            }\r\n            if (pdate.length != 3) return false;\r\n            var dd = parseInt(pdate[2]);\r\n            var mm = parseInt(pdate[1]);\r\n            var yy = parseInt(pdate[0]);\r\n            // Create list of days of a month [assume there is no leap year by default]\r\n            var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n            if (mm == 1 || mm > 2) {\r\n                if (dd > ListofDays[mm - 1]) {\r\n                    return false;\r\n                }\r\n            }\r\n            if (mm == 2) {\r\n                var lyear = false;\r\n                if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                    lyear = true;\r\n                }\r\n                if ((lyear == false) && (dd >= 29)) {\r\n                    return false;\r\n                }\r\n                if ((lyear == true) && (dd > 29)) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n\r\n            return true;\r\n\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    });\r\n\r\n    db.create_function(\"isDateTime\", function (inputText) {\r\n        if (inputText == null) return true;\r\n\r\n        if (typeof inputText != 'string') return false;\r\n\r\n        // var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n        var dateformat = /^\\d{4}[\\-](0[1-9]|1[012])[\\-](0[1-9]|[12][0-9]|3[01]) ([01][0-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n        // Match the date format through regular expression\r\n        if (inputText.match(dateformat)) {\r\n            var splitStr = inputText.split(' ');\r\n            var dateStr = splitStr[0];\r\n            //var timeStr = splitStr[1];\r\n\r\n            // if (dateStr.length != 3) return false;\r\n            // var dd = parseInt(dateStr[2]);\r\n            // var mm = parseInt(dateStr[1]);\r\n            // var yy = parseInt(dateStr[0]);\r\n            if (dateStr.length != 10) return false;\r\n            var dd = parseInt(dateStr.substring(8, 10));\r\n            var mm = parseInt(dateStr.substring(5, 7));\r\n            var yy = parseInt(dateStr.substring(0, 4));\r\n            // Create list of days of a month [assume there is no leap year by default]\r\n            var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n            if (mm == 1 || mm > 2) {\r\n                if (dd > ListofDays[mm - 1]) {\r\n                    return false;\r\n                }\r\n            }\r\n            if (mm == 2) {\r\n                var lyear = false;\r\n                if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n                    lyear = true;\r\n                }\r\n                if ((lyear == false) && (dd >= 29)) {\r\n                    return false;\r\n                }\r\n                if ((lyear == true) && (dd > 29)) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n\r\n            return true;\r\n\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    });\r\n\r\n    db.create_function(\"isTime\", function (inputText) {\r\n        if (inputText == null) return true;\r\n\r\n        if (typeof inputText != 'string') return false;\r\n\r\n        var timeformat = /^([01][0-9]|2[0123]):([0-5][0-9]):([0-5][0-9])$/;\r\n        // Match the date format through regular expression\r\n        return inputText.match(timeformat) != null;\r\n    });\r\n\r\n    db.create_function(\"concat\", function (arg) {\r\n        console.log(\"Hier1\");\r\n        if (arguments == null) return \"\";\r\n        let erg = \"\";\r\n        for(let i = 0; i < arguments.length; i++){\r\n            erg += (\"\" + arguments[i]);\r\n        }\r\n        return erg;\r\n    })\r\n\r\n    return db;\r\n}\r\n\r\n","import { createDb1 } from \"./sqljsWorkerTools.js\";\r\n\r\nexport class WorkerSim {\r\n\r\n    //@ts-ignore\r\n    initsql = initSqlJs({locateFile: (path, scriptDirectory) => \"https://embed.learn-sql.de/include/lib/sql.js/sql-wasm.wasm\"});\r\n    db;\r\n    SQL;\r\n\r\n    onmessage: (event: {data: any}) => void;\r\n\r\n    onError: (event: ErrorEvent) => void;\r\n\r\n    postMessageToClient(message: any) {\r\n        this.onmessage({data: message})\r\n    }\r\n\r\n    postMessage(data: any){\r\n        let that = this;\r\n        if (that.db == null) {\r\n            that.initsql.then((SQL1) => {\r\n                that.SQL = SQL1;\r\n                that.db = createDb1(SQL1, undefined);\r\n                that.worker(data);\r\n            }).catch((err) => {\r\n                console.log(err);\r\n                //@ts-ignore\r\n                return that.postMessageToClient({\r\n                    id: this[\"data\"][\"id\"],\r\n                    error: err[\"message\"]\r\n                });\r\n            })\r\n        } else {\r\n            that.worker(data);\r\n        }\r\n    }\r\n\r\n    terminate() {\r\n\r\n    }\r\n\r\n    worker(data: any) {\r\n        var buff; var result;\r\n        var config = data[\"config\"] ? data[\"config\"] : {};\r\n        try {\r\n            switch (data && data[\"action\"]) {\r\n                case \"open\":\r\n                    buff = data[\"buffer\"];\r\n                    this.db = createDb1(this.SQL, buff && new Uint8Array(buff));\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"],\r\n                        ready: true\r\n                    });\r\n                case \"exec\":\r\n                    if (this.db === null) {\r\n                        this.db = createDb1(this.SQL, undefined);\r\n                    }\r\n                    if (!data[\"sql\"]) {\r\n                        throw \"exec: Missing query string\";\r\n                    }\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"],\r\n                        results: this.db.exec(data[\"sql\"], data[\"params\"], config)\r\n                    });\r\n                case \"each\":\r\n                    if (this.db === null) {\r\n                        this.db = createDb1(this.SQL, undefined);\r\n                    }\r\n                    var callback = function callback(row) {\r\n                        //@ts-ignore\r\n                        return this.postMessage({\r\n                            id: data[\"id\"],\r\n                            row: row,\r\n                            finished: false\r\n                        });\r\n                    };\r\n                    var done = function done() {\r\n                        //@ts-ignore\r\n                        return this.postMessage({\r\n                            id: data[\"id\"],\r\n                            finished: true\r\n                        });\r\n                    };\r\n                    return this.db.each(data[\"sql\"], data[\"params\"], callback, done, config);\r\n                case \"export\":\r\n                    buff = this.db[\"export\"]();\r\n                    result = {\r\n                        id: data[\"id\"],\r\n                        results: [\r\n                            {\r\n                                buffer: buff\r\n                            }\r\n                        ]\r\n                    };\r\n                    try {\r\n                        //@ts-ignore\r\n                        return this.postMessageToClient(result);\r\n                    } catch (error) {\r\n                        //@ts-ignore\r\n                        return this.postMessageToClient(result);\r\n                    }\r\n                case \"close\":\r\n                    if (this.db) {\r\n                        this.db.close();\r\n                    }\r\n                    //@ts-ignore\r\n                    return this.postMessageToClient({\r\n                        id: data[\"id\"]\r\n                    });\r\n                default:\r\n                    throw new Error(\"Invalid action : \" + (data && data[\"action\"]));\r\n            }\r\n\r\n        } catch (err) {\r\n\r\n            //@ts-ignore\r\n            return this.postMessageToClient({\r\n                id: data[\"id\"],\r\n                error: err[\"message\"]\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { MainBase } from \"../main/MainBase.js\";\r\nimport { WorkerSim } from \"../sqljs-worker/sqljsWorkerSim.js\";\r\n\r\n\r\nexport type DatabaseDumpType = \"binaryUncompressed\" | \"binaryCompressed\" | \"other\";\r\n\r\nexport type DatabaseDirectoryEntry = {\r\n    name: string,\r\n    description: string,\r\n    filename: string\r\n}\r\n\r\nexport type QueryResult = {\r\n    columns: string[],\r\n    values: any[][],\r\n    buffer?: Uint8Array\r\n}\r\n\r\nexport type QuerySuccessCallback = (results: QueryResult[]) => void;\r\nexport type QueryErrorCallback = (error: string) => void;\r\n\r\nexport type ColumnStructure = {\r\n    name: string;\r\n    table: TableStructure;\r\n\r\n    typeLengths?: number[]; // for varchar(5), ...\r\n    completeTypeSQL: string;\r\n    enumValues: string[];\r\n\r\n    references?: ColumnStructure;\r\n    referencesRawData?: any[];\r\n    isPrimaryKey: boolean;\r\n    isAutoIncrement: boolean;\r\n\r\n    notNull: boolean;\r\n    defaultValue: string;\r\n\r\n    dumpValueFunction?: (any) => string\r\n}\r\n\r\nexport type TableStructure = {\r\n    name: string;\r\n    size: number;\r\n    columns: ColumnStructure[];\r\n    completeSQL: string;\r\n    type: (\"table\"|\"view\");\r\n}\r\n\r\nexport type DatabaseStructure = {\r\n    tables: TableStructure[]\r\n}\r\n\r\n\r\nexport class DatabaseTool {\r\n\r\n    databaseDirectoryEntries: DatabaseDirectoryEntry[] = null;\r\n\r\n    worker: Worker;\r\n\r\n    queryId: number = 0;\r\n\r\n    querySuccessCallbacksMap: Map<number, QuerySuccessCallback> = new Map();\r\n    queryErrorCallbackMap: Map<number, QueryErrorCallback> = new Map();\r\n\r\n    databaseStructure: DatabaseStructure;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    initializeWorker(template: Uint8Array, queries: string[], callbackAfterInitializing?: (errors: string[]) => void,\r\n        callbackAfterRetrievingStructure?: () => void) {\r\n        \r\n        this.main.getWaitOverlay().show('Bitte warten, die Datenbank wird initialisiert...');\r\n        \r\n            if (this.worker != null) {\r\n            this.worker.terminate();\r\n        }\r\n\r\n        let t = performance.now();\r\n\r\n        // console.log(\"Starting worker...\");\r\n\r\n        let url: string = \"worker/sqljs-worker.js\"\r\n        if(this.main.isEmbedded()){\r\n            //@ts-ignore\r\n            url = window.javaOnlineDir + url;\r\n        }\r\n\r\n        //@ts-ignore\r\n        if(window.jo_doc){\r\n            //@ts-ignore\r\n            this.worker = new WorkerSim();\r\n        } else {\r\n            this.worker = new Worker(url);\r\n        }\r\n        let that = this;\r\n\r\n        let errors: string[] = [];\r\n\r\n        this.worker.onmessage = () => {\r\n            // console.log(\"Database opened (\" + (performance.now() - t)/1000 + \" s)\");\r\n            that.worker.onmessage = event => {\r\n\r\n                // console.log(event.data);\r\n\r\n                let id = event.data.id;\r\n                if (event.data.error == null) {\r\n                    let querySuccessCallback = that.querySuccessCallbacksMap.get(id);\r\n                    if (querySuccessCallback != null) {\r\n                        querySuccessCallback(event.data.results);\r\n                    }\r\n                } else {\r\n                    let queryErrorCallback = that.queryErrorCallbackMap.get(id);\r\n                    if (queryErrorCallback != null) {\r\n                        queryErrorCallback(event.data.error);\r\n                    }\r\n                }\r\n\r\n                // if(event.data.buffer){\r\n                //     console.log(event.data.buffer);\r\n                // }\r\n\r\n\r\n                this.queryErrorCallbackMap.delete(id);\r\n                this.querySuccessCallbacksMap.delete(id);\r\n\r\n            };\r\n\r\n            if(queries == null) queries = [];\r\n            queries = queries.slice();\r\n            queries.unshift(\"PRAGMA foreign_keys = OFF;\")\r\n            queries.push(\"PRAGMA foreign_keys = ON;\")\r\n            let queryCount = queries.length;\r\n\r\n            let execQuery = () => {\r\n                if (queries.length > 0) {\r\n                    this.main.getWaitOverlay().setProgress(`${Math.round((1-queries.length/queryCount)*100) + \" %\"}`)\r\n                    let query = queries.shift();\r\n                    that.executeQuery(query, (result) => {\r\n                        execQuery();\r\n                    }, (error) => {\r\n                        errors.push(\"Error while setting up database: \" + error + \", query: \" + query);\r\n                        console.log({\"error\": \"Error while setting up database: \" + error, \"query\": query});\r\n                        console.log()\r\n                        execQuery();\r\n                    })\r\n                } else {\r\n                    if (callbackAfterInitializing != null) callbackAfterInitializing(errors);\r\n                    that.retrieveDatabaseStructure(() => {\r\n                        // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n                        if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n                        this.main.getWaitOverlay().hide();\r\n\r\n                    });\r\n                }\r\n            }\r\n\r\n            execQuery();\r\n\r\n            // that.executeQuery(sql, (result) => {\r\n            //     // console.log(\"Template written (\" + (performance.now() - t)/1000 + \" s)\");\r\n\r\n            //     if (callbackAfterInitializing != null) callbackAfterInitializing();\r\n            //     that.retrieveDatabaseStructure(() => {\r\n            //         // console.log(\"Database structure retrieved (\" + (performance.now() - t)/1000 + \" s)\");\r\n            //         if (callbackAfterRetrievingStructure) callbackAfterRetrievingStructure();\r\n            //         jQuery('#bitteWarten').css('display', 'none');\r\n\r\n            //     });\r\n            //     // that.executeQuery(\"select * from test\", (results: QueryResult[]) => {console.log(results)}, (error) => {console.log(\"Error:\" + error)});\r\n            // },\r\n            //     (error) => {\r\n            //         console.log(\"Error while setting up database: \" + error);\r\n            //     });\r\n\r\n            // that.worker.postMessage({\r\n            //     action: \"export\"\r\n            // })\r\n\r\n        };\r\n\r\n        this.worker.onerror = (e) => {\r\n            errors.push(\"Worker error: \" + e.error);\r\n            console.log(\"Worker error: \" + e.error);\r\n        }\r\n\r\n        this.worker.postMessage({\r\n            id: that.queryId++,\r\n            action: \"open\",\r\n            buffer: template, /*Optional. An ArrayBuffer representing an SQLite Database file*/\r\n        });\r\n\r\n    }\r\n\r\n    executeQuery(query: string, successCallback: QuerySuccessCallback, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, successCallback);\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"exec\",\r\n            sql: query,\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    export(successCallback: (buffer: Uint8Array) => void, errorCallback: QueryErrorCallback) {\r\n\r\n        let id = this.queryId++;\r\n\r\n        this.querySuccessCallbacksMap.set(id, (results) => { successCallback(results[0].buffer)  });\r\n        this.queryErrorCallbackMap.set(id, errorCallback);\r\n\r\n        this.worker.postMessage({\r\n            id: id,\r\n            action: \"export\",\r\n            params: {}\r\n        });\r\n\r\n    }\r\n\r\n    \r\n\r\n    getDirectoryEntries(callback: (entries: DatabaseDirectoryEntry[]) => void) {\r\n        if (this.databaseDirectoryEntries != null) {\r\n            callback(this.databaseDirectoryEntries);\r\n        } else {\r\n            jQuery.getJSON(\"assets/databases/directory.json\", function (entries: DatabaseDirectoryEntry[]) {\r\n                callback(entries);\r\n            });\r\n        }\r\n    }\r\n\r\n    retrieveDatabaseStructure(callback: (dbStructure: DatabaseStructure) => void) {\r\n\r\n        /*\r\n            @see https://stackoverflow.com/questions/6460671/sqlite-schema-information-metadata\r\n        */\r\n        let sql = `SELECT name, sql, type FROM sqlite_master WHERE type='table' or type='view';`\r\n        let that = this;\r\n\r\n        this.executeQuery(sql, (result) => {\r\n            let sql1 = \"\";\r\n            let values = result[0]?.values;\r\n            let types: (\"table\"|\"view\")[] = values?.map(value => value[2]);\r\n\r\n            values?.forEach(value => sql1 += `PRAGMA table_info(\"${value[0]}\");\\nPRAGMA foreign_key_list(\"${value[0]}\");\\nselect count(*) from \"${value[0]}\";\\n\\n`)\r\n\r\n            if (sql1 != \"\") {\r\n                this.executeQuery(sql1, (result1) => {\r\n                    // console.log(\"DB structure: \");\r\n                    // console.log(result1);\r\n\r\n                    that.databaseStructure = that.parseDatabaseStructure(result, result1, types)\r\n\r\n                    callback(that.databaseStructure);\r\n\r\n                }, (error) => { \r\n                    console.log(error);\r\n                    that.databaseStructure = { tables: [] };\r\n                    callback(that.databaseStructure);\r\n                });\r\n            } else {\r\n                that.databaseStructure = { tables: [] };\r\n                callback(that.databaseStructure);\r\n            }\r\n\r\n        }, (error) => { console.log(error) });\r\n\r\n\r\n    }\r\n\r\n    parseDatabaseStructure(tables: QueryResult[], columns: QueryResult[], types: (\"table\"|\"view\")[]): DatabaseStructure {\r\n        this.databaseStructure = {\r\n            tables: []\r\n        };\r\n\r\n        let tableNameToStructureMap: Map<string, TableStructure> = new Map();\r\n\r\n        let index = 0;\r\n        for (let i = 0; i < tables[0].values.length; i++) {\r\n            let tableName = tables[0].values[i][0];\r\n            let tableSQL = <string>tables[0].values[i][1];\r\n\r\n            let tableStructure: TableStructure = {\r\n                name: tableName,\r\n                size: 0,\r\n                completeSQL: tableSQL,\r\n                columns: [],\r\n                type: types[i]\r\n            }\r\n\r\n            tableNameToStructureMap.set(tableName, tableStructure);\r\n\r\n            this.databaseStructure.tables.push(tableStructure);\r\n\r\n            let columnArray = columns[index].values;\r\n            let foreignKeyList: any[][] = null;\r\n            if (columns.length > index + 1 && columns[index + 1].columns[0] == \"id\") {\r\n                foreignKeyList = columns[index + 1].values;\r\n                index++;\r\n            }\r\n            index++;\r\n            let size: number = columns[index].values[0][0];\r\n            index++;\r\n\r\n            tableStructure.size = size;\r\n\r\n            columnArray.forEach(columnArray1 => {\r\n                let cid: number = columnArray1[0];\r\n                let name: string = columnArray1[1];\r\n                let type: string = columnArray1[2];\r\n                let notNull: boolean = columnArray1[3] == 1;\r\n                let dflt_value: string = columnArray1[4];\r\n                let isPrimaryKey: boolean = columnArray1[5] != 0;\r\n\r\n                let enumValues: string[] = [];\r\n\r\n                if(type.indexOf(\"Enum\") >= 0){\r\n                    let rs = `\"${name}\" ${type} .* check\\\\(\"${name}\" in \\\\((.*)\\\\)\\\\)`;\r\n                    let regEx = new RegExp(rs);\r\n                    let match = tableSQL.match(regEx);\r\n                    if(match != null){\r\n                        enumValues = match[1].split(\", \");\r\n                    }\r\n                }\r\n\r\n                let columnStructure: ColumnStructure = {\r\n                    name: name,\r\n                    isPrimaryKey: isPrimaryKey,\r\n                    isAutoIncrement: isPrimaryKey && tableSQL.toLowerCase().indexOf(\"autoincrement\") >= 0,\r\n                    completeTypeSQL: type,\r\n                    enumValues: enumValues,\r\n                    table: tableStructure,\r\n                    typeLengths: [],\r\n                    defaultValue: dflt_value,\r\n                    notNull: notNull\r\n                }\r\n                /*\r\n                    columns: (8) [\"id\", \"seq\", \"table\", \"from\", \"to\", \"on_update\", \"on_delete\", \"match\"]\r\n                    values: Array(1)\r\n                    0: (8) [0, 0, \"land\", \"LNR\", \"lnr\", \"NO ACTION\", \"NO ACTION\", \"NONE\"]\r\n                */\r\n\r\n                if (foreignKeyList != null) {\r\n                    let fkInfo: any[] = foreignKeyList.find(foreignKeyInfo => foreignKeyInfo[3].toLocaleLowerCase() == name.toLocaleLowerCase());\r\n                    if (fkInfo != null) {\r\n                        columnStructure.referencesRawData = fkInfo;\r\n                    }\r\n                }\r\n\r\n                tableStructure.columns.push(columnStructure);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        for (let ts of this.databaseStructure.tables) {\r\n            for (let cs of ts.columns) {\r\n                if (cs.referencesRawData != null) {\r\n                    let table = tableNameToStructureMap.get(cs.referencesRawData[2]);\r\n                    // SQlite doesn't remove foreign key references to columns of a dropped table\r\n                    if(table == null) continue;\r\n                    let column = table.columns.find(c => c.name.toLocaleLowerCase() == cs.referencesRawData[4].toLocaleLowerCase());\r\n                    cs.references = column;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(this.databaseStructure);\r\n\r\n        return this.databaseStructure;\r\n\r\n    }\r\n\r\n    static getDumpType(dump: Uint8Array): DatabaseDumpType {\r\n\r\n        let sqliteMagicBytes: number[] = [0x53, 0x51, 0x4c, 0x69, 0x74, 0x65];\r\n        let zlibMagicByte: number = 0x78;\r\n\r\n        let found: boolean = true;\r\n        for (let i = 0; i < sqliteMagicBytes.length; i++) {\r\n            if (sqliteMagicBytes[i] != dump[i]) {\r\n                found = false;\r\n                break;\r\n            }\r\n        }\r\n        if (found) return \"binaryUncompressed\";\r\n\r\n        if (dump[0] == zlibMagicByte) return \"binaryCompressed\";\r\n\r\n        return \"other\";\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ASTNode, ConstantNode, CreateTableColumnNode, CreateTableNode, ForeignKeyInfo, InsertNode } from \"./AST.js\";\r\nimport { SQLStatement } from \"./Parser.js\";\r\n\r\nexport class StatementCleaner {\r\n\r\n    MaxRowsPerInsert: number = 300;\r\n\r\n    clean(statement: SQLStatement): string {\r\n        switch (statement.ast.type) {\r\n            case TokenType.keywordCreate:   // Create Table statement\r\n                statement.sqlCleaned = this.cleanCreateTableStatement(statement.ast);\r\n                return statement.sqlCleaned;\r\n            case TokenType.keywordInsert:\r\n                if(statement.ast.select != null){\r\n                    return statement.sql;\r\n                } else {\r\n                    statement.sqlCleaned = this.cleanInsertStatement(statement.ast);\r\n                    return statement.sqlCleaned;\r\n                }\r\n            default:\r\n                return statement.sql;\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    cleanInsertStatement(ast: InsertNode): string {\r\n        let statementHeader: string = `insert into ${ast.table.identifier}`;\r\n\r\n        if (ast.columnList != null && ast.columnList.length > 0) {\r\n            statementHeader += `(${ast.columnList.map(c => this.escapeIdentifier(c.identifier)).join(\", \")})`;\r\n        }\r\n\r\n        statementHeader += '\\nvalues';\r\n\r\n        let st = \"\";\r\n\r\n        let lines: string[] = [];\r\n        if (ast.values != null && ast.values.length > 0) {\r\n            for (let vline of ast.values) {\r\n                lines.push(`\\n(${vline.map(v => this.cleanValue(v)).join(\", \")})`);\r\n            }\r\n            //st += lines.join(\",\\n\");\r\n        }\r\n\r\n        while (lines.length > 0) {\r\n            st += statementHeader;\r\n            st += lines.splice(0, Math.max(this.MaxRowsPerInsert, lines.length)).join(\",\\n\");\r\n            st += \";\\n\";\r\n        }\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    cleanValue(v: ConstantNode) {\r\n        if (v.constantType == TokenType.stringConstant) {\r\n            let s: string = v.constant;\r\n            s = s.replace(/'/g, \"''\");\r\n            return `'${s}'`;\r\n        } else {\r\n            return v.constant;\r\n        }\r\n    }\r\n\r\n    cleanCreateTableStatement(ast: CreateTableNode): string {\r\n        let st: string = `create table ${ast.ifNotExists ? \" if not exists\" : \"\"} ${this.escapeIdentifier(ast.identifier)}(\\n   `;\r\n\r\n        st += ast.columnList.map(column => this.cleanColumnDef(column)).join(\",\\n   \");\r\n        if (ast.foreignKeyInfoList != null && ast.foreignKeyInfoList.length > 0) {\r\n            st += \",\\n   \" + ast.foreignKeyInfoList.map(fki => this.cleanForeignKeyInfo(fki)).join(\",\\n   \");\r\n        }\r\n\r\n        let pkc = ast.combinedPrimaryKeyColumns.slice(); //.map(s => s.toLocaleLowerCase());\r\n        for (let column of ast.columnList) {\r\n            let c = column.identifier;\r\n            if (column.isAutoIncrement && pkc.indexOf(c) >= 0) {\r\n                pkc.splice(pkc.indexOf(c), 1);\r\n            }\r\n        }\r\n\r\n        if (pkc.length > 0) {\r\n            st += `,\\n   primary key(${this.escapeIdentifiers(pkc).join(\", \")})`;\r\n        }\r\n\r\n        if (ast.uniqueConstraints.length > 0) {\r\n            st += \",\\n   \" + ast.uniqueConstraints.map(uk => 'unique(' + this.escapeIdentifiers(uk).join(\", \") + \")\").join(\",\\n   \");\r\n        }\r\n\r\n        st += '\\n);';\r\n\r\n        return st;\r\n    }\r\n\r\n    cleanForeignKeyInfo(fki: ForeignKeyInfo): string {\r\n        let fkiString = `foreign key (${this.escapeIdentifier(fki.column)}) references ${this.escapeIdentifier(fki.referencesTable)}(${this.escapeIdentifier(fki.referencesColumn)})`;\r\n        if (fki.onDelete) {\r\n            fkiString += ` on delete ` + fki.onDelete;\r\n        }\r\n        if (fki.onUpdate) {\r\n            fkiString += ` on update ` + fki.onUpdate;\r\n        }\r\n        return fkiString;\r\n    }\r\n\r\n    cleanColumnDef(column: CreateTableColumnNode): string {\r\n\r\n        let type = column.baseType.getSQLiteType();\r\n        if (type == \"int\" && column.isAutoIncrement) {\r\n            type = \"integer\";\r\n        }\r\n\r\n        let st: string = `${this.escapeIdentifier(column.identifier)} ${type}`;\r\n        if (column.parameters != null && column.parameters.length > 0 && !column.isAutoIncrement) {\r\n            st += `(${column.parameters.join(\", \")})`;\r\n        }\r\n        if (column.notNull) {\r\n            st += \" not null\";\r\n        }\r\n        if (column.defaultValue != null) {\r\n            st += \" default \" + column.defaultValue;\r\n        }\r\n        if (column.isPrimary || column.isAutoIncrement) {\r\n            st += \" primary key\";\r\n        }\r\n        if (column.isAutoIncrement) {\r\n            st += \" autoincrement\";\r\n        }\r\n        if (column.foreignKeyInfo != null) {\r\n            let fki = column.foreignKeyInfo;\r\n            let c: string = fki.referencesColumn;\r\n            if (fki.referencesTable) c = this.escapeIdentifier(fki.referencesTable) + \"(\" + this.escapeIdentifier(c) + \")\";\r\n            st += \" references \" + c;\r\n        }\r\n        if (column.collate != null) {\r\n            let collate = column.collate.toLocaleLowerCase();\r\n            if ([\"binary\", \"nocase\", \"rtrim\"].indexOf(collate) >= 0) {\r\n                st += \" collate \" + collate;\r\n            }\r\n        }\r\n        let parameters = column.parameters ? column.parameters : [0, 0];\r\n        let checkFunction = column.baseType.checkFunction(this.escapeIdentifier(column.identifier), parameters);\r\n        if (checkFunction != \"\") {\r\n            st += \" \" + checkFunction;\r\n        }\r\n        return st;\r\n    }\r\n\r\n    escapeIdentifier(id: string){\r\n        return '\"' + id + '\"';\r\n    }\r\n\r\n    escapeIdentifiers(list: string[]):string[] {\r\n        return list.map(this.escapeIdentifier);\r\n    }\r\n\r\n}","import { Lexer } from \"../compiler/lexer/Lexer.js\";\r\nimport { TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { AlterTableNode, CreateTableNode, InsertNode } from \"../compiler/parser/AST.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { Parser, SQLStatement } from \"../compiler/parser/Parser.js\";\r\nimport { StatementCleaner } from \"../compiler/parser/StatementCleaner.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\n\r\nexport class MySqlImporter {\r\n\r\n    private createTableNodes: CreateTableNode[];\r\n    private insertNodes: InsertNode[];\r\n    private tableModifyingNodes: AlterTableNode[];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    async loadFromUrl(url: string): Promise<LoadableDatabase> {\r\n        if (url == null) return;\r\n\r\n        let text = null;\r\n        if (url.endsWith(\".zip\")) {\r\n            text = await this.unzipURL(url);\r\n        } else {\r\n            text = await (await fetch(url)).text();\r\n        }\r\n\r\n        return this.importFromText(text);\r\n    }\r\n\r\n    async loadFromFile(file: globalThis.File): Promise<LoadableDatabase> {\r\n        if (file == null) return;\r\n\r\n        if (file.name.endsWith(\".zip\")) {\r\n            let text = await this.unzipFile(file);\r\n            return this.importFromText(text);\r\n        } else {\r\n\r\n            return new Promise<LoadableDatabase>(\r\n                (resolve, reject) => {\r\n                    var reader = new FileReader();\r\n                    reader.onload = (event) => {\r\n                        let text = <string>event.target.result;\r\n                        resolve(this.importFromText(text));\r\n                    };\r\n                    reader.readAsText(file);\r\n                }\r\n            )\r\n\r\n\r\n        }\r\n    }\r\n\r\n    async unzipURL(url: string): Promise<string> {\r\n        //@ts-ignore\r\n        const reader = new zip.ZipReader(new zip.HttpReader(url));\r\n        return this.unzipIntern(reader);\r\n    }\r\n\r\n    async unzipFile(file: globalThis.File): Promise<string> {\r\n        // create a BlobReader to read with a ZipReader the zip from a Blob object\r\n        //@ts-ignore\r\n        const reader = new zip.ZipReader(new zip.BlobReader(file));\r\n        return this.unzipIntern(reader);\r\n    }\r\n\r\n    async unzipIntern(reader: any): Promise<string> {\r\n        // get all entries from the zip\r\n        let entries = await reader.getEntries();\r\n        entries = entries.filter(entry => entry.filename.endsWith(\".sql\"))\r\n        let text: string = \"\";\r\n        if (entries.length) {\r\n            for(let entry of entries){\r\n                // get first entry content as text by using a TextWriter\r\n                text += await entry.getData(\r\n                    // writer\r\n                    //@ts-ignore\r\n                    new zip.TextWriter(),\r\n                    // options\r\n                    {\r\n                        onprogress: (index, max) => {\r\n                            // onprogress callback\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }\r\n\r\n        // close the ZipReader\r\n        await reader.close();\r\n\r\n        return text;\r\n    }\r\n\r\n    private async importFromText(text: string): Promise<LoadableDatabase> {\r\n        if (text == null) return null;\r\n\r\n        let lexer: Lexer = new Lexer();\r\n        let lexOutput = lexer.lex(text);\r\n\r\n        let parser: Parser = new Parser();\r\n        let m: Module = new Module({\r\n            dirty: false,\r\n            name: \"\",\r\n            saved: true,\r\n            student_edited_after_revision: false,\r\n            submitted_date: null,\r\n            text: text,\r\n            text_before_revision: null,\r\n            version: 0\r\n        }, this.main);\r\n        m.tokenList = lexOutput.tokens;\r\n\r\n        parser.parse(m);\r\n\r\n        this.createTableNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordCreate).map(st => <CreateTableNode>st.ast);\r\n        this.insertNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordInsert).map(st => <InsertNode>st.ast);\r\n        this.tableModifyingNodes = m.sqlStatements.filter(st => st.ast.type == TokenType.keywordAlter &&\r\n            (<AlterTableNode>st.ast).kind == \"omittedKind\").map(st => <AlterTableNode>st.ast);\r\n\r\n        for (let tmn of this.tableModifyingNodes) {\r\n            let createTableNode = this.findCreateTableNode(tmn.tableIdentifier);\r\n            if (createTableNode == null) continue;\r\n\r\n            if (tmn.primaryKeys != null) {\r\n                createTableNode.combinedPrimaryKeyColumns = tmn.primaryKeys;\r\n                createTableNode.columnList.forEach(c => c.isPrimary = false);\r\n            }\r\n\r\n            if (tmn.autoIncrementColumn != null) {\r\n                let pcn = this.findCreateTableColumnNode(createTableNode, tmn.autoIncrementColumn);\r\n                if (pcn != null) pcn.isPrimary = true;\r\n            }\r\n\r\n            if (tmn.modifyColumnInfo != null) {\r\n                for (let mci of tmn.modifyColumnInfo) {\r\n                    let mcn = this.findCreateTableColumnNode(createTableNode, mci.identifier);\r\n                    let index = createTableNode.columnList.indexOf(mcn);\r\n                    createTableNode.columnList.splice(index, 1, mci);\r\n                }\r\n            }\r\n\r\n            if (tmn.foreignKeys != null) {\r\n                for (let fk of tmn.foreignKeys) {\r\n                    createTableNode.foreignKeyInfoList.push(fk);\r\n                }\r\n            }\r\n\r\n            if (tmn.indices != null) {\r\n                for (let index of tmn.indices) {\r\n                    m.sqlStatements.push({\r\n                        acceptedBySQLite: true,\r\n                        from: null, to: null, hasErrors: false,\r\n                        ast: {\r\n                            type: TokenType.keywordIndex,\r\n                            columnIdentifier: index.column,\r\n                            indexIdentifier: index.index_name,\r\n                            tableIdentifier: tmn.tableIdentifier,\r\n                            unique: index.unique,\r\n                            position: null, endPosition: null, symbolTable: null\r\n                        },\r\n                        sql: `create ${index.unique ? 'unique ' : ''} index ${index.index_name} on ${tmn.tableIdentifier}(${index.column});`,\r\n                        resultTypes: []\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.makeDatabase(m.sqlStatements);\r\n    }\r\n\r\n    private findCreateTableNode(tableIdentifier: string): CreateTableNode {\r\n        tableIdentifier = tableIdentifier.toLocaleLowerCase();\r\n        return this.createTableNodes.find(node => node.identifier.toLocaleLowerCase() == tableIdentifier);\r\n    }\r\n\r\n    private findCreateTableColumnNode(tableNode: CreateTableNode, columnIdentifier: string) {\r\n        columnIdentifier = columnIdentifier.toLocaleLowerCase();\r\n        return tableNode.columnList.find(columnNode => columnNode.identifier.toLocaleLowerCase() == columnIdentifier)\r\n    }\r\n\r\n    private async makeDatabase(statements: SQLStatement[]): Promise<LoadableDatabase> {\r\n\r\n        let statementCleaner: StatementCleaner = new StatementCleaner();\r\n\r\n        let sqlStatements: string[] = statements.filter(st => st.ast.type != TokenType.omittedeStatement)\r\n            .map(st => statementCleaner.clean(st));\r\n        sqlStatements.unshift(\"PRAGMA foreign_keys = OFF;\");\r\n        sqlStatements.push(\"PRAGMA foreign_keys = ON;\")\r\n\r\n        let dbTool = new DatabaseTool(this.main);\r\n\r\n        let promise = new Promise<LoadableDatabase>((resolve, reject) => {\r\n            dbTool.initializeWorker(null, sqlStatements, () => {\r\n                dbTool.export((buffer) => {\r\n                    resolve({\r\n                        binDump: buffer\r\n                    })\r\n                }, (error) => {\r\n                    reject(error);\r\n                })\r\n            });\r\n\r\n        })\r\n\r\n        return promise;\r\n\r\n    }\r\n\r\n\r\n}","import { MainBase } from \"../main/MainBase.js\";\r\nimport { LoadableDatabase } from \"./DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\nimport { downloadFile } from \"./HtmlTools.js\";\r\nimport { MySqlImporter } from \"./MySqlImporter.js\";\r\n\r\nexport class DatabaseImportExport {\r\n\r\n    async loadFromFile(file: globalThis.File, main: MainBase): Promise<LoadableDatabase>{\r\n        let that = this;\r\n        if (file == null) return;\r\n        main.getWaitOverlay().show(\"Lese Datei ein...\");\r\n        if(file.name.endsWith(\".sql\") || file.name.endsWith(\".zip\")){\r\n            let ld = await new MySqlImporter(main).loadFromFile(file);\r\n            main.getWaitOverlay().hide();\r\n            return ld;\r\n        } else {\r\n            var reader = new FileReader();\r\n            return new Promise<LoadableDatabase>((resolve, reject) => {\r\n                reader.onload = (event) => {\r\n                    let ab: ArrayBuffer = <ArrayBuffer>event.target.result;\r\n                    let db: Uint8Array = new Uint8Array(ab);\r\n        \r\n                    //@ts-ignore\r\n                    if(DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n                    \r\n                    main.getWaitOverlay().hide();\r\n                    resolve({binDump: db});\r\n                };\r\n                reader.readAsArrayBuffer(file);\r\n    \r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    saveToFile(dbTool: DatabaseTool){\r\n        dbTool.export((db) => {\r\n            let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", \"datenbank.sqLite\");\r\n            if (filename == null) {\r\n                alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n                return;\r\n            }\r\n            if (!filename.endsWith(\".sqLite\")) filename = filename + \".sqLite\";\r\n            downloadFile(new Blob([db.buffer]), filename, true);\r\n        }, () => {});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { CreateWorkspaceData, WorkspaceData } from \"../../communication/Data.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { LoadableDatabase } from \"../../tools/DatabaseLoader.js\";\r\nimport { DatabaseTool } from \"../../tools/DatabaseTools.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionElement } from \"./Accordion.js\";\r\n\r\n\r\ntype CreateMode = \"emptyDatabase\" | \"fromTemplate\" | \"useExistingDatabase\" | \"useDumpFile\";\r\n\r\nexport class NewDatabaseDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    database: LoadableDatabase;\r\n\r\n    constructor(private main: Main, private owner_id: number, private path: string[]) {\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Neue Datenbank anlegen</div>\r\n\r\n            <div class=\"jo_ds_settings\">\r\n               <div class=\"jo_ds_settings_caption\">Name der Datenbank:</div><div><input class=\"dialog-input jo_databasename\" value=\"Neue Datenbank\"></input></div>\r\n            </div>\r\n\r\n             <div class=\"jo_tabheadings jo_cdtabheading\">\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createEmptyDatabaseTab\">Leere Datenbank</div>\r\n             <div class=\"jo_tabheading jo_active\" data-target=\"jo_createDatabaseFromTemplateTab\">Von Vorlage kopieren</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseExistingTab\">Bestehende Datenbank mitnutzen</div>\r\n             <div class=\"jo_tabheading\" data-target=\"jo_createDatabaseUseDumpFile\">Import aus Dumpfile (SQLite- oder MySQL-Format)</div>\r\n             </div>\r\n             <div class=\"jo_tabs\" style=\"width: 100%; margin-top: 10px\">\r\n                 <div class=\"jo_createEmptyDatabaseTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">\r\n                        Erstellt wird eine leere Datenbank.\r\n                    </div>\r\n                 </div>\r\n                 <div class=\"jo_createDatabaseFromTemplateTab jo_active\">\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Vorlage suchen:</div><div><input class=\"dialog-input jo_templatename\"></input></div>\r\n                    </div>\r\n                    <div class=\"jo_scrollable jo_templatelist\"></div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseExistingTab\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wenn Du die Datenbank einer anderen Nutzerin/eines anderen Nutzers mitnutzen möchtest, brauchst Du einen Zugriffscode von ihr/ihm. Er ist unter Datenbank->Einstellungen zu finden.            \r\n                    </div>\r\n                    <div class=\"jo_ds_settings\">\r\n                       <div class=\"jo_ds_settings_caption\">Zugriffscode:</div><div><input class=\"dialog-input jo_databasecodeinput\"></input></div>\r\n                    </div>\r\n                 </div>\r\n                <div class=\"jo_createDatabaseUseDumpFile\">\r\n                    <div class=\"jo_createDatabaseDescription\">Wähle hier die Datei mit dem Datenbank-Dump aus (Endung .sqLite (SQLite-Datenbankdatei) oder .zip (gepackter MySql-Dump) oder .sql (MySql-Dump)):</div>\r\n                    <input type=\"file\" class=\"jo_dumpfile\" name=\"dumpfile\" style=\"padding: 10px\"/>\r\n                    <div class=\"jo_databaseimport_dropzone\" style=\"width: 70vw; margin-left: 10px\">Alternativ: Datei in dieses Feld ziehen</div>\r\n                    <div class=\"jo_databaseimport_ok\"></div>\r\n                 </div>\r\n             </div>\r\n\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_create_database_button\">Datenbank anlegen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        makeTabs(this.$dialog);\r\n\r\n        let $templatelist = jQuery('.jo_templatelist');\r\n        this.main.networkManager.fetchTemplateList((templatelist) => {\r\n            templatelist.forEach(tle => {\r\n\r\n                let $tle = jQuery('<div class=\"jo_templateListEntry\"></div>')\r\n                $tle.append(jQuery(`<div class=\"jo_tle_firstline\">${tle.name} <span class=\"jo_tle_ownername\"> (von ${tle.ownerName})</span></div>`))\r\n                $tle.append(jQuery(`<div class=\"jo_tle_secondline\">${tle.description}</div>`))\r\n                $tle.data('templateId', tle.id);\r\n                $tle.data('name', tle.name);\r\n\r\n                $templatelist.append($tle);\r\n                tle.$tle = <JQuery<HTMLDivElement>>$tle;\r\n\r\n                $tle.on('pointerdown', () => {\r\n                    $templatelist.find('.jo_templateListEntry').removeClass('jo_active');\r\n                    $tle.addClass('jo_active');\r\n                })\r\n\r\n            })\r\n            let $templateName = <JQuery<HTMLInputElement>>jQuery('.jo_templatename');\r\n            $templateName.on('input', () => {\r\n                let s = <string>$templateName.val();\r\n                $templatelist.find('.jo_templateListEntry').hide();\r\n                templatelist.forEach(tle => {\r\n                    let tleString = tle.name + tle.ownerName + (tle.description ? tle.description : \"\");\r\n                    if (tleString.indexOf(s) >= 0) tle.$tle.show();\r\n                })\r\n            })\r\n        })\r\n\r\n        let $dropZone = jQuery('.jo_databaseimport_dropzone');\r\n\r\n        $dropZone.on('dragover', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\r\n        })\r\n        $dropZone.on('drop', (evt) => {\r\n            evt.stopPropagation();\r\n            evt.preventDefault();\r\n\r\n            var files = evt.originalEvent.dataTransfer.files;\r\n            this.importFile(files);\r\n        })\r\n\r\n        let $dumpFileInput = jQuery('.jo_dumpfile');\r\n        $dumpFileInput.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            this.importFile(files).then(() => {\r\n                $dumpFileInput.val(null);\r\n            });\r\n\r\n        })\r\n\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { this.showMainWindow(); });\r\n        jQuery('#jo_ds_create_database_button').on('click', () => {\r\n            let createMode: CreateMode = \"emptyDatabase\";\r\n            if (jQuery('.jo_createDatabaseFromTemplateTab').hasClass('jo_active')) createMode = \"fromTemplate\";\r\n            if (jQuery('.jo_createDatabaseUseExistingTab').hasClass('jo_active')) createMode = \"useExistingDatabase\";\r\n            if (jQuery('.jo_createDatabaseUseDumpFile').hasClass('jo_active')) createMode = \"useDumpFile\";\r\n\r\n            let workspaceData: CreateWorkspaceData = {\r\n                id: null,\r\n                isFolder: false,\r\n                name: <string>jQuery('.dialog-input.jo_databasename').val(),\r\n                path: this.path.join(\"/\"),\r\n            }\r\n\r\n            switch (createMode) {\r\n                case \"emptyDatabase\":\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"fromTemplate\":\r\n                    let $template = jQuery('.jo_templateListEntry.jo_active');\r\n                    if ($template.length != 1) {\r\n                        alert('Bitte wählen Sie genau eine Vorlage aus.');\r\n                        return;\r\n                    } else {\r\n                        workspaceData.template_database_id = $template.data('templateId');\r\n                        if (workspaceData.name == \"Neue Datenbank\") workspaceData.name = $template.data('name');\r\n                        this.createWorkspace(workspaceData);\r\n                    }\r\n                    break;\r\n                case \"useExistingDatabase\":\r\n                    let code = <string>jQuery('.jo_databasecodeinput').val();\r\n                    let tIndex = code.indexOf(\"T\");\r\n                    if (tIndex == -1) {\r\n                        alert(\"Der Zugriffscode muss das Zeichen T enthalten.\");\r\n                        return;\r\n                    }\r\n                    workspaceData.otherDatabaseId = Number.parseInt(code.substring(0, tIndex));\r\n                    workspaceData.secret = code.substring(tIndex + 1);\r\n                    this.createWorkspace(workspaceData);\r\n                    break;\r\n                case \"useDumpFile\":\r\n                    if (this.database != null) {\r\n                        new TemplateUploader().uploadCurrentDatabase(-1, this.main, this.database.binDump,\r\n                            \"uploadBaseTemplateForWorkspace\",\r\n                            (response) => {\r\n                            workspaceData.template_id = response.newTemplateId;\r\n                            this.createWorkspace(workspaceData);\r\n                        });\r\n\r\n                    } else {\r\n                        alert('Bitte laden Sie zuerst den Binärdump einer Datenbank hoch.')\r\n                        return;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    private createWorkspace(workspaceData: CreateWorkspaceData) {\r\n        this.main.networkManager.sendCreateWorkspace(workspaceData, this.owner_id, (error?: string) => {\r\n            if (error != null) { alert(error); return; }\r\n\r\n            let w = this.main.createNewWorkspace(workspaceData.name, this.owner_id);\r\n            w.path = workspaceData.path;\r\n            w.id = workspaceData.id;\r\n            w.sql_history = \"\";\r\n\r\n            let projectExplorer = this.main.projectExplorer;\r\n\r\n            this.main.workspaceList.push(w);\r\n            let accordionElement: AccordionElement = {\r\n                name: workspaceData.name,\r\n                externalElement: w,\r\n                iconClass: \"workspace\",\r\n                isFolder: false,\r\n                path: this.path\r\n            };\r\n\r\n            projectExplorer.workspaceListPanel.addElement(accordionElement, true);\r\n\r\n            w.panelElement = accordionElement;\r\n            w.renderSettingsButton(accordionElement);\r\n\r\n            projectExplorer.workspaceListPanel.sortElements();\r\n            projectExplorer.fileListPanel.sortElements();\r\n\r\n            projectExplorer.setWorkspaceActive(w);\r\n\r\n            this.showMainWindow();\r\n\r\n        });\r\n    }\r\n\r\n    async importFile(files: FileList) {\r\n        let that = this;\r\n        let importer = new DatabaseImportExport();\r\n        let db: LoadableDatabase = await importer.loadFromFile(files[0], this.main)\r\n        let isDatabase: boolean = false;\r\n        let dumpFileType = DatabaseTool.getDumpType(db.binDump);\r\n        if (dumpFileType == \"binaryCompressed\") {\r\n            // @ts-ignore\r\n            let dbUncompressed = pako.inflate(db.binDump);\r\n            if (DatabaseTool.getDumpType(dbUncompressed) == \"binaryUncompressed\") {\r\n                isDatabase = true;\r\n            }\r\n        } else if (DatabaseTool.getDumpType(db.binDump) == \"binaryUncompressed\") {\r\n            //@ts-ignore\r\n            db.binDump = pako.deflate(db.binDump);\r\n            isDatabase = true;\r\n        }\r\n\r\n        if (isDatabase) {\r\n            that.database = db;\r\n            jQuery('.jo_databaseimport_ok').html(\"Die Datenbankdatei wurde erfolgreich von Datei eingelesen. Sie können die Datenbank jetzt durch Klick auf den Button unten erstellen.\");\r\n        } else {\r\n            alert(\"In der Datei befindet sich kein Binärdump einer Datenbank.\");\r\n        }\r\n    }\r\n\r\n    showMainWindow() {\r\n        jQuery('#main').css('visibility', 'visible');\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n    }\r\n\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { DatabaseSettingsDialog } from \"./DatabaseSettingsDialog.js\";\r\nimport { DatabaseImportExport } from \"../../tools/DatabaseImportExport.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nimport { TemplateUploader } from \"../../tools/TemplateUploader.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n    noHoverAnimation?: boolean\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); } },\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Datenbank\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Neue Datenbank anlegen...\", action: () => {\r\n                                    let owner_id: number = that.main.user.id;\r\n                                    if (that.main.workspacesOwnerId != null) {\r\n                                        owner_id = that.main.workspacesOwnerId;\r\n                                    }\r\n\r\n                                    new NewDatabaseDialog(that.main, owner_id, []);\r\n                                }\r\n                            },\r\n                            { identifier: \"Einstellungen...\", action: () => { new DatabaseSettingsDialog(this.main, this.main.currentWorkspace) } },\r\n                            {\r\n                                identifier: \"Export als Binärdump (.sqLite-File)...\", action: () => {\r\n                                    new DatabaseImportExport().saveToFile(this.main.getDatabaseTool());\r\n                                }\r\n                            },\r\n                            {\r\n                                identifier: \"Aktuellen Zustand als Vorlage hochladen...\", action: () => {\r\n                                    let currentWorkspace = this.main.currentWorkspace;\r\n                                    if(currentWorkspace == null){\r\n                                        alert('Es ist kein Workspace ausgewählt.');\r\n                                        return;\r\n                                    }\r\n                                    if(currentWorkspace.database.owner_id != this.main.user.id){\r\n                                        alert('Die Datenbank gehört einer anderen Benutzerin/einem anderen Benutzer. Sie kann daher nicht als Vorlage hochgeladen werden.');\r\n                                        return;\r\n                                    }\r\n                                    if(currentWorkspace.database.published_to == 0){\r\n                                        alert('Die Datenbank ist noch nicht für andere Benutzer/innen veröffentlicht, daher kann sie nicht als Vorlage hochgeladen werden. \\nDie Möglichkeit zum Veröffentlichen finden Sie unter Datenbank->Einstellungen.');\r\n                                        return;\r\n                                    }\r\n                                    new TemplateUploader().uploadCurrentDatabase(currentWorkspace.id, this.main, null, \"publishDatabaseAsTemplate\", \r\n                                    () => {alert('Der aktuelle Zustand der Datebank wurde erfolgreich als Vorlage hochgeladen.')});\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push({\r\n                            identifier:\"Shutdown server...\",\r\n                            action: () => {\r\n                                if(confirm(\"Server wirklich herunterfahren?\")){\r\n                                    ajax(\"shutdown\", {}, () => {\r\n                                        alert('Server erfolgreich heruntergefahren.');\r\n                                    }, (message) => {\r\n                                        alert(message);\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n            )\r\n        }\r\n\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                let noHoverKlass = mi.noHoverAnimation ? ' class=\"jo_menuitem_nohover\"' : '';\r\n                mi.$element = jQuery(`<div${noHoverKlass}>${mi.identifier}</div>`);\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"pointerdown\", (event) => {\r\n                        event.stopPropagation();\r\n                    })\r\n                    $link.on(\"pointerup\", (ev) => {\r\n                        ev.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('pointerdown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('pointerdown', (ev) => {\r\n                ev.stopPropagation();\r\n            })\r\n\r\n\r\n            mi.$element.on('pointerup', (ev) => {\r\n                ev.stopPropagation();\r\n                mi.action(mi.identifier);\r\n                for (let i = 0; i < 5; i++) {\r\n                    if (that.currentSubmenu[i] != null) {\r\n                        that.currentSubmenu[i].hide();\r\n                        that.currentSubmenu[i] = null;\r\n                    }\r\n                }\r\n                that.openSubmenusOnMousemove = false;\r\n            });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem, animateToTransparent, jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newFilesElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newDatabaseElementCallback: (path: string[]) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newFilesElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        if(element == null) return;\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonSettings\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neue Datenbank...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n\r\n                            that.newDatabaseElementCallback(element.path.concat(element.name));\r\n\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n\r\n            element.$htmlFirstLine.find('.jo_delete')[0].addEventListener(\"contextmenu\", (event) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }, false);\r\n\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'up', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    pathStartsWith(path: string[], pathStart: string[]){\r\n        if(path.length < pathStart.length) return false;\r\n        for(let i = 0; i < pathStart.length; i++){\r\n            if(path[i] != pathStart[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            let oldName = element.name;\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n\r\n            if(element.isFolder){\r\n                \r\n                let oldPath = element.path.slice().concat([oldName]);\r\n\r\n                let movedElements: AccordionElement[] = [];\r\n\r\n                for(let e of this.elements){\r\n\r\n                    if(this.pathStartsWith(e.path, oldPath)){\r\n                        e.path[oldPath.length - 1] = element.name;\r\n                        movedElements.push(e);\r\n                    }\r\n\r\n                }\r\n\r\n                if(movedElements.length > 0) this.moveCallback(movedElements);\r\n\r\n            }\r\n\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                let filterTextLowerCase = filterText.toLocaleLowerCase();\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.toLocaleLowerCase().indexOf(filterTextLowerCase) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { that.close() });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeDatabase();});\r\n\r\n        (<HTMLInputElement>jQuery('.jo_ds_filterdiv>input')[0]).focus();\r\n\r\n    }\r\n\r\n    distributeDatabase() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        this.close();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { WorkspaceData, Workspaces, ClassData, CreateWorkspaceData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { NewDatabaseDialog } from \"./NewDatabaseDialog.js\";\r\n\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"1\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newFilesElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                if(module && module.file && that?.main?.networkManager){\r\n                    that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                        if (error == null) {\r\n                            that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                            callbackIfSuccessful();\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n    \r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                // if (file.submitted_date == null) {\r\n                //     cmiList.push({\r\n                //         caption: \"Als Hausaufgabe markieren\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = dateToString(new Date());\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n                //         }\r\n                //     });\r\n                // } else {\r\n                //     cmiList.push({\r\n                //         caption: \"Hausaufgabenmarkierung entfernen\",\r\n                //         callback: (element: AccordionElement) => {\r\n\r\n                //             let file = (<Module>element.externalElement).file;\r\n                //             file.submitted_date = null;\r\n                //             file.saved = false;\r\n                //             that.main.networkManager.sendUpdates(null, true);\r\n                //             that.renderHomeworkButton(file);\r\n\r\n                //         }\r\n                //     });\r\n                // }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"Datenbanken\", \"3\",\r\n            null, \"Neue Datenbank...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        let $newWorkspaceAction = jQuery('<div class=\"img_add-database-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Neue Datenbank auf oberster Ordnerebene anlegen\">');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $newWorkspaceAction.on(mousePointer + 'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, this.workspaceListPanel.getCurrentlySelectedPath());\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction($newWorkspaceAction);\r\n        if(this.workspaceListPanel.$buttonNew != null){\r\n            this.workspaceListPanel.$buttonNew.hide();\r\n        }\r\n\r\n        this.workspaceListPanel.newDatabaseElementCallback = (path: string[]) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            new NewDatabaseDialog(that.main, owner_id, path);\r\n\r\n        }\r\n\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substring(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n\r\n                // if user owns database: rename it, too\r\n                if(workspace.database.owner_id == workspace.owner_id){\r\n                    workspace.database.name = newName;\r\n                    that.main.networkManager.setNameAndPublishedTo(workspace.id, newName, workspace.database.published_to, workspace.database.description, () => {})\r\n                }\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        if(!workspace.isFolder){\r\n                            that.fileListPanel.clear();\r\n                            that.main.databaseExplorer.clear();\r\n                            that.main.getResultsetPresenter().clear();\r\n                            that.fileListPanel.enableNewButton(false);\r\n                            that.main.getMonacoEditor().setModel(null);\r\n                        }\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Fehler: ' + error);\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if(workspace?.isFolder) return;\r\n                if (workspace != this.main.currentWorkspace) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            let wd: CreateWorkspaceData = {\r\n                id: -1,\r\n                isFolder: true,\r\n                name: folder.name,\r\n                path: folder.path\r\n            }\r\n\r\n            that.main.networkManager.sendCreateWorkspace(wd, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    folder.id = wd.id;\r\n                    successCallback(folder);\r\n\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n\r\n        this.$homeAction.on(mousePointer +'down', (e) => {\r\n            e.stopPropagation();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: 'workspace',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n            w.renderSettingsButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace, callback?: () => void, scrollIntoView: boolean = false) {\r\n\r\n        if(callback == null) callback = () => {}\r\n\r\n        if(w == this.main.getCurrentWorkspace()){\r\n            if(callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        if (w != null) {\r\n            if(w.isFolder){\r\n                this.main.currentWorkspace = null;\r\n                this.main.databaseTool.initializeWorker(null, [], null, () => {\r\n                    this.main.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n                });\r\n                this.setModuleActive(null);\r\n                return;\r\n            } else {\r\n                this.fileListPanel.$buttonNew.show();\r\n            }\r\n        }\r\n\r\n        this.workspaceListPanel.select(w, false, scrollIntoView);\r\n\r\n        let callbackAfterDatabaseFetched = (error: string) => {\r\n            this.main.waitOverlay.show(\"Bitte warten, initialisiere Datenbank ...\");\r\n            if (error != null) {\r\n                alert(error);\r\n            }    \r\n            this.initializeDatabaseTool(w, callback)\r\n        };\r\n\r\n        if(w == null) return;\r\n\r\n        if (w.database == null) {\r\n            this.main.waitOverlay.show(\"Bitte warten, hole Datenbank vom Server ...\");\r\n\r\n            this.main.networkManager.fetchDatabase(w, callbackAfterDatabaseFetched);\r\n        } else {\r\n            callbackAfterDatabaseFetched(null);\r\n        }\r\n\r\n    }\r\n\r\n    initializeDatabaseTool(w: Workspace, callback?: () => void) {\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        let statements: string[] = w.database.statements;\r\n        if (statements == null) statements = [];\r\n\r\n        dbTool.initializeWorker(w.database.templateDump, statements,\r\n            () => {\r\n                this.main.currentWorkspace = w;\r\n\r\n                if (this.main.user?.id == w.owner_id) {\r\n                    this.main.user.currentWorkspace_id = w.id;\r\n                }\r\n\r\n                this.renderFiles(w);\r\n\r\n                if (w != null) {\r\n                    let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n                    if (w.currentlyOpenModule != null) {\r\n                        this.setModuleActive(w.currentlyOpenModule);\r\n                    } else if (nonSystemModules.length > 0) {\r\n                        this.setModuleActive(nonSystemModules[0]);\r\n                    } else {\r\n                        this.setModuleActive(null);\r\n                    }\r\n\r\n                    for (let m of nonSystemModules) {\r\n                        m.file.dirty = true;\r\n                    }\r\n\r\n                    if (nonSystemModules.length == 0) {\r\n\r\n                        Helper.showHelper(\"newSQLFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n                    }\r\n\r\n                    \r\n                } else {\r\n                    this.setModuleActive(null);\r\n                }\r\n                \r\n                this.main.notifier.connect(w);\r\n            },\r\n            () => {\r\n                this.main.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n                this.main.getHistoryViewer().clearAndShowStatements(w.database.statements);\r\n                if(callback != null) callback();\r\n            });\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine Datenbanken\";\r\n        } else {\r\n            caption = \"Schüler-DB\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\n\r\nexport class RightDiv {\r\n\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopImmediatePropagation();\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopImmediatePropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 1\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentOwnWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(this.currentOwnWorkspace);\r\n        }\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return 1;\r\n            if (b.familienname > a.familienname) return -1;\r\n            if (a.rufname > b.rufname) return 1;\r\n            if (b.rufname > a.rufname) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let ud of userDataList) {\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","\r\n\r\nexport type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/graphics/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { userInfo } from \"os\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\nimport { PushClientManager } from \"../communication/pushclient/PushClientManager.js\";\r\n\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            let loginRequest: LoginRequest = {\r\n                username: <string>jQuery('#login-username').val(),\r\n                password: <string>jQuery('#login-password').val(),\r\n                language: 1\r\n            }\r\n\r\n            ajax('login', loginRequest, (response: LoginResponse) => {\r\n\r\n                if (!response.success) {\r\n                    jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                } else {\r\n\r\n                    PushClientManager.getInstance().open();\r\n\r\n                    // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                    // Alternatively we now set a long expiry interval for cookie.\r\n                    // credentials.username = loginRequest.username;\r\n                    // credentials.password = loginRequest.password;\r\n\r\n                    jQuery('#login').hide();\r\n\r\n                    this.main.waitOverlay.show('Bitte warten...');\r\n\r\n                    let user: UserData = response.user;\r\n                    if (user.settings == null || user.settings.helperHistory == null) {\r\n                        user.settings = {\r\n                            helperHistory: {\r\n                            },\r\n                            viewModes: null,\r\n                            classDiagram: null\r\n                        }\r\n                    }\r\n\r\n                    this.main.waitForGUICallback = () => {\r\n\r\n                        that.main.mainMenu.initGUI(user);\r\n\r\n                        that.main.waitOverlay.hide();\r\n                        $loginSpinner.hide();\r\n                        jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n\r\n                        new UserMenu(that.main).init();\r\n\r\n                        if (user.is_teacher) {\r\n                            that.main.initTeacherExplorer(response.classdata);\r\n                        }\r\n\r\n                        that.main.user = user;\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = user.id;\r\n\r\n                        that.main.networkManager.initializeTimer();\r\n\r\n                        that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                        that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                        that.main.viewModeController.initViewMode();\r\n                        that.main.bottomDiv.hideHomeworkTab();\r\n\r\n                        that.main.networkManager.initializeSSE();\r\n\r\n                    }\r\n\r\n                    if (this.main.startupComplete == 0) {\r\n                        this.main.waitForGUICallback();\r\n                        this.main.waitForGUICallback = null;\r\n                    }\r\n\r\n                }\r\n\r\n            }, (errorMessage: string) => {\r\n                jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n                jQuery('#login-spinner>img').hide();\r\n            }\r\n            );\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            this.main.waitOverlay.show('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            PushClientManager.getInstance().close();\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                this.main.notifier.connect(null);\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                this.main.networkManager.sendUpdateUserSettings(() => {\r\n\r\n                    ajax('logout', logoutRequest, () => {\r\n                        // window.location.href = 'index.html';\r\n    \r\n                        jQuery('#login').show();\r\n                        this.main.waitOverlay.hide();\r\n                        jQuery('#login-message').empty();\r\n                        this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n                        this.main.projectExplorer.fileListPanel.clear();\r\n                        this.main.projectExplorer.workspaceListPanel.clear();\r\n    \r\n                        this.main.databaseExplorer.clear();\r\n                        this.main.resultsetPresenter.clear();\r\n    \r\n                        if (this.main.user.is_teacher) {\r\n                            this.main.teacherExplorer.removePanels();\r\n                            this.main.teacherExplorer = null;\r\n                        }\r\n    \r\n    \r\n                        this.main.currentWorkspace = null;\r\n                        this.main.user = null;\r\n    \r\n    \r\n                    });\r\n    \r\n\r\n                });\r\n\r\n            }, true);\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 20px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { Main } from \"../../main/Main.js\";\r\nimport { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { Table, Column } from \"../../compiler/parser/SQLTable.js\";\r\nimport { DatabaseStructure } from \"../../tools/DatabaseTools.js\";\r\n\r\n\r\nexport class DatabaseExplorer {\r\n\r\n    collapsedTables: Map<string, boolean> = new Map();\r\n\r\n    constructor(private main: MainBase, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    refresh() {\r\n\r\n        let dbTool = this.main.getDatabaseTool();\r\n\r\n        dbTool.retrieveDatabaseStructure((dbstructure: DatabaseStructure) => {\r\n\r\n            this.refreshAfterRetrievingDBStructure();\r\n        });\r\n\r\n    }\r\n\r\n    clear(){\r\n        this.$mainDiv.empty();\r\n    }\r\n\r\n    refreshAfterRetrievingDBStructure() {\r\n        let dbTool = this.main.getDatabaseTool();\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        if (workspace != null) {\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                m.file.dirty = true;\r\n            }\r\n        }\r\n\r\n        let tables = Table.fromTableStructureList(dbTool.databaseStructure.tables);\r\n\r\n        this.$mainDiv.empty();\r\n\r\n        for (let table of tables) {\r\n            if(table.identifier != \"sqlite_sequence\"){\r\n                let $table = this.renderTable(table);\r\n                this.$mainDiv.append($table);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderTable(table: Table): JQuery<HTMLElement> {\r\n        let isCollapsed = this.collapsedTables.get(table.identifier) != null;\r\n\r\n        let $table = jQuery(\r\n            `<div class=\"jo_table\">\r\n           <div class=\"jo_tableheader\">\r\n              <div class=\"${isCollapsed ? 'img_tree-collapsed-dark' : 'img_tree-expanded-dark'} jo_treeswitch jo_button jo_active\"></div>\r\n              <div class=\"jo_tableheaderlink\">\r\n                <div class=\"${table.type == \"table\"?\"img_table\" : \"img_view\"}\"></div>\r\n                <div>${table.identifier}</div></div><div class=\"jo_tablesize\">(${table.type == \"view\"?\"View, \" : \"\"}${table.size}&nbsp;Datensätze)</div>\r\n              </div>\r\n            </div>\r\n        </div>`);\r\n\r\n        $table.find('.jo_tableheader').on('pointerup', () => {\r\n            this.main.getResultsetPresenter().showTable(table);\r\n\r\n        })\r\n\r\n        let $columns = jQuery('<div class=\"jo_columnlist\"></div>')\r\n\r\n        for (let column of table.columns) {\r\n            let image = column.isPrimaryKey ? \"img_key\" : \"img_column\";\r\n\r\n            let referencesHtml = \"\";\r\n            if (column.references != null) {\r\n                referencesHtml = `<div class=\"img_foreign_key\" style=\"margin-left: 5px\"></div><div class=\"jo_references\">${column.references.table.identifier}.${column.references.identifier}</div>`\r\n            }\r\n\r\n            let type = column.type == null ? \"\" : column.type.toString();\r\n\r\n            let notNull: string = column.notNull ? '<div class=\"jo_dbnotnull\">not null</div>' : \"\";\r\n            let defaultValue: string = column.defaultValue ? `<div class=\"jo_dbdefault\">default ${column.defaultValue}</div>` : \"\";\r\n            let autoincrement: string = column.isAutoIncrement ? `<div class=\"jo_dbautoincrement\">autoincrement</div>` : \"\";\r\n\r\n            let $column = jQuery(`\r\n            <div class=\"jo_column\">\r\n                <div class=\"${image}\"></div>\r\n                <div>${column.identifier}</div>\r\n                <div class=\"jo_dbtype\">${type}</div>\r\n                ${autoincrement}\r\n                ${referencesHtml}\r\n                ${notNull}\r\n                ${defaultValue}\r\n            </div>\r\n            `);\r\n            $columns.append($column);\r\n        }\r\n\r\n        $table.append($columns);\r\n\r\n        let $treeSwitch = $table.find('.jo_treeswitch');\r\n        let that = this;\r\n        $treeSwitch.on('pointerup', (e) => {\r\n            e.stopPropagation();\r\n            let $columnList = $treeSwitch.parents('.jo_table').find('.jo_columnlist');\r\n            let collapsed = $treeSwitch.hasClass('img_tree-collapsed-dark');\r\n            if (collapsed) {\r\n                $treeSwitch.removeClass('img_tree-collapsed-dark');\r\n                $treeSwitch.addClass('img_tree-expanded-dark');\r\n                $columnList.slideDown(300);\r\n                that.collapsedTables.delete(table.identifier);\r\n            } else {\r\n                $treeSwitch.removeClass('img_tree-expanded-dark');\r\n                $treeSwitch.addClass('img_tree-collapsed-dark');\r\n                $columnList.slideUp(300);\r\n                that.collapsedTables.set(table.identifier, true);\r\n            }\r\n        });\r\n\r\n        return $table;\r\n    }\r\n\r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { ResultsetPresenter } from \"./ResultsetPresenter.js\";\r\n\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonRollback: JQuery<HTMLElement>;\r\n    // $buttonPause: JQuery<HTMLElement>;\r\n    // $buttonStop: JQuery<HTMLElement>;\r\n    // $buttonStepOver: JQuery<HTMLElement>;\r\n    // $buttonStepInto: JQuery<HTMLElement>;\r\n    // $buttonStepOut: JQuery<HTMLElement>;\r\n    // $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n\r\n    constructor(private main: MainBase, private $buttonsContainer: JQuery<HTMLElement>) {\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonRollback = jQuery('<div title=\"Rollback\" class=\"img_undo jo_button\"></div>');\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        am.registerAction(\"execute\", ['Strg + Enter'],\r\n            () => {\r\n                if (am.isActive(\"execute\")) {\r\n\r\n                    this.main.getResultsetPresenter().executeSelectedStatements();\r\n                }\r\n\r\n            }, \"SQL-Statement ausführen\", this.$buttonStart\r\n        );\r\n\r\n        am.setActive('execute',false);\r\n\r\n        am.registerAction(\"rollback\", ['Strg + LeftArrow'],\r\n            () => {\r\n                if (am.isActive(\"rollback\")) {\r\n\r\n                    this.main.getHistoryViewer().rollback();\r\n                }\r\n\r\n            }, \"Letztes schreibendes SQL-Statement rückgängig machen\", this.$buttonRollback\r\n        );\r\n\r\n        am.setActive('rollback',false);\r\n\r\n        // this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        // this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        // this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        // this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        // this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        // this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonRollback\r\n            // , this.$buttonPause, this.$buttonStop,\r\n            // this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart\r\n        );\r\n\r\n        // <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n        // <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n        // <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n        // <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n        // <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n        // <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n        // <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n        // <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { SQLStatement } from \"../../compiler/parser/Parser.js\";\r\nimport { Table } from \"../../compiler/parser/SQLTable.js\";\r\nimport { SQLType } from \"../../compiler/parser/SQLTypes.js\";\r\nimport { StatementCleaner } from \"../../compiler/parser/StatementCleaner.js\";\r\nimport { QueryResult } from \"../../tools/DatabaseTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\n\r\ntype RuntimeError = {\r\n    statement: SQLStatement,\r\n    message: string\r\n}\r\n\r\nexport interface WriteQueryListener {\r\n    notify(statements: SQLStatement[]): void;\r\n}\r\n\r\nexport class ResultsetPresenter {\r\n\r\n    $paginationDiv: JQuery<HTMLDivElement>;\r\n    $infoDiv: JQuery<HTMLDivElement>;\r\n    $arrowLeft: JQuery<HTMLDivElement>;\r\n    $arrowRight: JQuery<HTMLDivElement>;\r\n\r\n    paginationFrom: number;\r\n    paginationAll: number;\r\n\r\n    paginationSize: number = 1000;\r\n\r\n    result: QueryResult;\r\n    resultColumnTypes: SQLType[];\r\n\r\n    writeQueryListeners: WriteQueryListener[] = [];\r\n\r\n    public static StatementDelimiter: string = \";\\n\\n\"\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$paginationDiv = <any>$bottomDiv.find('.jo_pagination');\r\n        this.$arrowLeft = jQuery('<div class=\"jo_button img_arrow-left-dark jo_active\"></div>');\r\n        this.$infoDiv = jQuery('<div class=\"jo_pagination_info\"><span class=\"jo_pagination_fromto\">0001-1000</span>/<span class=\"jo_pagination_all\">5000</span></div>');\r\n        this.$arrowRight = jQuery('<div class=\"jo_button img_arrow-right-dark jo_active\"></div>');\r\n\r\n        this.$paginationDiv.empty();\r\n        this.$paginationDiv.append(this.$arrowLeft, this.$infoDiv, this.$arrowRight);\r\n\r\n        this.$paginationDiv.hide();\r\n\r\n        let mousePointer = (window.PointerEvent ? \"pointer\" : \"mouse\") + 'up';\r\n\r\n        let that = this;\r\n        this.$arrowLeft.on(mousePointer, (e) => {\r\n            if (that.paginationFrom > 1) {\r\n                that.paginationFrom = Math.max(that.paginationFrom - that.paginationSize, 1);\r\n                if (that.paginationFrom % 1000 != 1) {\r\n                    that.paginationFrom = (Math.floor(that.paginationFrom / that.paginationSize) + 1) * that.paginationSize + 1;\r\n                }\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n        this.$arrowRight.on(mousePointer, (e) => {\r\n            if (that.paginationFrom < this.paginationAll - that.paginationSize + 1) {\r\n                that.paginationFrom = Math.min(that.paginationFrom + that.paginationSize, that.paginationAll - that.paginationSize + 1);\r\n                that.showResults();\r\n                that.activateButtons();\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    public addWriteQueryListener(listener: WriteQueryListener) {\r\n        this.writeQueryListeners.push(listener);\r\n    }\r\n\r\n    private activateButtons() {\r\n        this.$arrowLeft.toggleClass('jo_active', this.paginationFrom > 1);\r\n        this.$arrowRight.toggleClass('jo_active', this.paginationFrom < this.paginationAll - this.paginationSize + 1);\r\n    }\r\n\r\n    executeSelectedStatements() {\r\n\r\n        let statements = this.fetchSelectedStatements().filter(st => st.ast.type != TokenType.omittedeStatement);\r\n\r\n        if (statements.length == 0) return;\r\n\r\n        let hasDDLStatements: boolean = statements.some(st => this.isDDLStatement(st));\r\n        let hasWriteStatements: boolean = statements.some(st => this.isWriteStatement(st));\r\n        let workspace = this.main.getCurrentWorkspace();\r\n        let database = workspace.database;\r\n\r\n        if (hasDDLStatements && workspace.permissions <= 1) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Ändern der Tabellenstruktur.\");\r\n            return;\r\n        }\r\n\r\n        if (hasWriteStatements && workspace.permissions == 0) {\r\n            alert(\"Der Benutzer hat keine Berechtigung zum Einfügen/Löschen/Ändern von Datensätzen.\");\r\n            return;\r\n        }\r\n\r\n        if (hasDDLStatements || hasWriteStatements) {\r\n            if (this.main.isEmbedded()) {\r\n                this.executeDDLWriteStatementsEmbedded(workspace, statements, database);\r\n\r\n            } else {\r\n                this.executeDDLWriteStatementsInOnlineIDE(workspace, statements, database);\r\n            }\r\n\r\n        } else {\r\n            this.executeStatements(statements, 0, [], () => { });\r\n        }\r\n\r\n    }\r\n\r\n    executeDDLWriteStatementsEmbedded(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n        this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n            if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                return;\r\n\r\n            this.main.getDatabaseExplorer().refresh();\r\n\r\n            this.writeQueryListeners.forEach(listener => listener.notify(sucessfullyExecutedModifyingStatements))\r\n        })\r\n    }\r\n\r\n    private executeDDLWriteStatementsInOnlineIDE(workspace: Workspace, statements: SQLStatement[], database: WDatabase) {\r\n        let main: Main = <Main>this.main;\r\n        // Step 1: Update Database to newest version to avoid potential database reset\r\n        main.networkManager.getNewStatements(workspace, (new_statements, firstStatementIndex) => {\r\n\r\n            main.notifier.executeNewStatements(new_statements, firstStatementIndex, () => { },\r\n                () => {\r\n                    // Step 2: Execute new statements to see which are successful\r\n                    let sucessfullyExecutedModifyingStatements: SQLStatement[] = [];\r\n                    this.executeStatements(statements, 0, sucessfullyExecutedModifyingStatements, () => {\r\n\r\n                        if (sucessfullyExecutedModifyingStatements.length == 0)\r\n                            return;\r\n\r\n                        let modifyingStatements = sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned)\r\n                        database.statements = database.statements.concat(modifyingStatements);\r\n                        this.main.getHistoryViewer().appendStatements(modifyingStatements);\r\n                        database.version += modifyingStatements.length;\r\n\r\n                        // Step 3: Send successful statements to server in order to retrieve new db-version-number\r\n                        main.networkManager.AddDatabaseStatements(workspace, sucessfullyExecutedModifyingStatements.map(st => st.sqlCleaned == null ? st.sql : st.sqlCleaned), (statements_before, new_version) => {\r\n\r\n                            // Step 5 (worst case): statements before is not empty, so the should be executed before the statements executed in step 2\r\n                            // => clear whole database and execute all statements in the right order, beginning with a empty database.\r\n                            if (statements_before.length > 0) {\r\n    \r\n                                workspace.database.version = 0;\r\n                                workspace.database.statements = [];\r\n                                main.networkManager.getNewStatements(workspace, () => {\r\n                                    this.resetDatabase(database);\r\n                                })\r\n\r\n\r\n                            } else {\r\n\r\n                                main.getDatabaseExplorer().refresh();\r\n\r\n                            }\r\n\r\n                        });\r\n                    });\r\n                }, false);\r\n        });\r\n    }\r\n\r\n    resetDatabase(database: WDatabase) {\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n            this.main.getDatabaseExplorer().refresh();\r\n        })\r\n    }\r\n\r\n    executeStatementsString(statements: string[], fromIndex: number, callback: () => void) {\r\n        if (statements.length == 0) {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        if (fromIndex < statements.length) {\r\n            this.main.getDatabaseTool().executeQuery(statements[fromIndex],\r\n                (results) => { this.executeStatementsString(statements, fromIndex + 1, callback) },\r\n                (error) => { console.log(\"Error when executing statement \" + statements[fromIndex] + \"\\nError : \" + error); this.executeStatementsString(statements, fromIndex + 1, callback) });\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n\r\n    executeStatements(statements: SQLStatement[], index: number, successfullyExecutedModifyingStatements: SQLStatement[], callback: () => void, errors: RuntimeError[] = []) {\r\n\r\n        if (index >= statements.length) {\r\n            this.showErrors(errors);\r\n\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        let statement = statements[index];\r\n\r\n\r\n        let callback1 = () => {\r\n            this.executeStatements(statements, index + 1, successfullyExecutedModifyingStatements, callback, errors);\r\n        }\r\n\r\n        if (statement.ast == null) {\r\n            callback1();\r\n            return;\r\n        }\r\n\r\n        if (statement.ast.type == TokenType.keywordSelect) {\r\n            let laterSelectExists: boolean = false;\r\n            for (let j = index + 1; j < statements.length; j++) laterSelectExists = laterSelectExists || this.isSelectStatement(statements[j]);\r\n            if (laterSelectExists) {\r\n                callback1();\r\n            } else {\r\n                if (statement.ast.limitNode == null) {\r\n                    statement.sql.trimRight();\r\n                    while (statement.sql.endsWith(\";\") || statement.sql.endsWith(\"\\n\") || statement.sql.endsWith(\"\\r\")) {\r\n                        statement.sql = statement.sql.substring(0, statement.sql.length - 1);\r\n                        statement.sql.trimRight();\r\n                    }\r\n                    statement.sql += \" limit 100000\";\r\n                }\r\n                this.main.getDatabaseTool().executeQuery(statement.sql,\r\n                    (results) => { this.presentResultsIntern(statement.sql, results, statement.resultTypes); callback1(); },\r\n                    (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n            }\r\n        } else {\r\n            let sql = new StatementCleaner().clean(statement);\r\n            console.log(sql);\r\n            this.main.getDatabaseTool().executeQuery(sql, (results) => { successfullyExecutedModifyingStatements.push(statement); callback1(); }, (error) => { errors.push({ statement: statement, message: error }); callback1(); });\r\n        }\r\n\r\n    }\r\n\r\n    oldErrorDecorations: string[] = [];\r\n    showErrorDecorations(errors: RuntimeError[]) {\r\n\r\n        let minimapColors = {\r\n            \"error\": \"#bc1616\",\r\n            \"warning\": \"#cca700\",\r\n            \"info\": \"#75beff\"\r\n        }\r\n\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n        for (let error of errors) {\r\n            let errorlevel = \"error\";\r\n\r\n            let linesDecorationsClassName: string;\r\n            let borderLeftClass: string;\r\n            let minimapColor: string = minimapColors[errorlevel];\r\n\r\n            switch (errorlevel) {\r\n                case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n            }\r\n\r\n            let severity: monaco.MarkerSeverity;\r\n            switch (errorlevel) {\r\n                case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n            }\r\n\r\n            markers.push({\r\n                startLineNumber: error.statement.from.line,\r\n                startColumn: error.statement.from.column,\r\n                endLineNumber: error.statement.to.line,\r\n                endColumn: error.statement.to.column,\r\n                message: error.message,\r\n                severity: severity\r\n            });\r\n\r\n            decorations.push({\r\n                range: {\r\n                    startLineNumber: error.statement.from.line,\r\n                    startColumn: error.statement.from.column,\r\n                    endLineNumber: error.statement.to.line,\r\n                    endColumn: error.statement.to.column,\r\n                },\r\n                options: {\r\n                    linesDecorationsClassName: linesDecorationsClassName,\r\n                    minimap: {\r\n                        position: monaco.editor.MinimapPosition.Inline,\r\n                        color: minimapColor\r\n                    }\r\n                }\r\n\r\n            });\r\n\r\n\r\n        }\r\n\r\n        let model = this.main.getCurrentlyEditedModule().model;\r\n        monaco.editor.setModelMarkers(model, 'test', markers);\r\n        this.oldErrorDecorations = model.deltaDecorations(this.oldErrorDecorations, decorations);\r\n\r\n    }\r\n\r\n    showTable(table: Table) {\r\n        let statement = \"select * from \" + table.identifier + \";\";\r\n        this.main.getDatabaseTool().executeQuery(statement,\r\n            (results) => {\r\n                this.presentResultsIntern(statement, results, table.columns.map(c => c.type));\r\n            },\r\n            (error) => { });\r\n    }\r\n\r\n\r\n\r\n    showErrors(errors: RuntimeError[]) {\r\n        let $runtimeErrorsTab = this.$bottomDiv.find('.jo_errorsTab');\r\n        let $runtimeErrorsTabHeading = this.$bottomDiv.find('.jo_errorsTabheading');\r\n\r\n        $runtimeErrorsTab.empty();\r\n        this.showErrorDecorations(errors);\r\n\r\n        if (errors.length == 0) return;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $runtimeErrorsTabHeading.trigger(mousePointer + \"down\");\r\n\r\n        let $errorList = jQuery('<div class=\"jo_errorlist\"></div>');\r\n        $runtimeErrorsTab.append($errorList);\r\n\r\n        for (let error of errors) {\r\n            let query = error.statement.sql;\r\n            query = query.replace(/\\n/g, \" \");\r\n            query = query.replace(/\\s\\s+/g, ' ');\r\n\r\n            let $errorLine = jQuery('<div class=\"jo_error-line\" style=\"flex-direction:column; width: fit-content\"></div>')\r\n            $errorList.append($errorLine);\r\n\r\n            $errorLine.on(mousePointer + 'down', () => {\r\n                let range = {\r\n                    startColumn: error.statement.from.column, startLineNumber: error.statement.from.line,\r\n                    endColumn: error.statement.to.column, endLineNumber: error.statement.to.line\r\n                };\r\n\r\n                this.main.getMonacoEditor().revealRangeInCenter(range);\r\n                $errorList.find('.jo_error-line').removeClass('jo_active');\r\n                $errorLine.addClass('jo_active');\r\n\r\n            })\r\n\r\n\r\n            let $sqlDiv = jQuery('<div class=\"jo_sqlErrorStatement\"></div>');\r\n            $errorLine.append($sqlDiv);\r\n\r\n            monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n                (html) => { $sqlDiv.html(html) });\r\n\r\n            let $messageDiv = jQuery('<div class=\"jo_sqlErrorMessage\">' + error.message + '</div>');\r\n            $errorLine.append($messageDiv);\r\n\r\n        }\r\n\r\n        this.$bottomDiv.find('.jo_tabheading').removeClass('jo_active');\r\n        $runtimeErrorsTabHeading.addClass('jo_active');\r\n        $runtimeErrorsTab.addClass('jo_active');\r\n\r\n    }\r\n\r\n    isSelectStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && statement.ast.type == TokenType.keywordSelect;\r\n    }\r\n\r\n    isDDLStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordCreate, TokenType.keywordDrop, TokenType.keywordAlter, TokenType.keywordView].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    isWriteStatement(statement: SQLStatement): boolean {\r\n        return statement.ast != null && [TokenType.keywordInsert, TokenType.keywordDelete, TokenType.keywordUpdate].indexOf(statement.ast.type) >= 0;\r\n    }\r\n\r\n    private presentResultsIntern(query: string, results: QueryResult[], columnTypes: SQLType[]) {\r\n        let $resultTabheading = this.$bottomDiv.find('.jo_resultTabheading');\r\n        let $resultHeader = this.$bottomDiv.find('.jo_result-header');\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        $resultTabheading.trigger(mousePointer + \"down\");\r\n        this.result = results.pop();\r\n        this.resultColumnTypes = columnTypes;\r\n\r\n        let headerDiv = $resultHeader;\r\n\r\n        query = query.replace(/\\n/g, \" \");\r\n        query = query.replace(/\\s\\s+/g, ' ');\r\n        query = query.replace(/limit 100000/g, '');\r\n\r\n        monaco.editor.colorize(query, \"vscSQL\", {}).then(\r\n            (html) => { headerDiv.html(html) });\r\n\r\n        this.paginationAll = this.result ? this.result.values.length : 0;\r\n        this.$infoDiv.find('.jo_pagination_all').html(`${this.paginationAll}`);\r\n        this.paginationFrom = 1;\r\n        this.$paginationDiv.show();\r\n        this.activateButtons();\r\n\r\n        this.showResults();\r\n\r\n    }\r\n\r\n    public clear() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n        $bodyDiv.empty();\r\n        this.$paginationDiv.hide();\r\n    }\r\n\r\n    private showResultsBusy: boolean = false;\r\n    private showResultPending: boolean = false;\r\n\r\n    private showResults() {\r\n        let $bodyDiv = this.$bottomDiv.find('.jo_result-body');\r\n\r\n        if (this.result == null) {\r\n            this.$infoDiv.find('.jo_pagination_fromto').html('---');\r\n            $bodyDiv.html('Die Datenbank lieferte eine leere Ergebnistabelle.');\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n        let from = this.paginationAll == 0 ? 0 : this.paginationFrom;\r\n        let to = this.paginationAll == 0 ? 0 : Math.min(this.paginationFrom + this.paginationSize - 1, this.paginationAll);\r\n        this.$infoDiv.find('.jo_pagination_fromto').html(`${from}-${to}`)\r\n\r\n        if (this.showResultsBusy) {\r\n            if (this.showResultPending) {\r\n                return;\r\n            }\r\n            this.showResultPending = true;\r\n            let waitFunction = () => {\r\n                if (that.showResultsBusy) {\r\n                    setTimeout(() => {\r\n                        waitFunction();\r\n                    }, 200);\r\n                } else {\r\n                    that.showResultPending = false;\r\n                    that.showResults();\r\n                }\r\n            }\r\n            setTimeout(waitFunction, 200);\r\n            return;\r\n        }\r\n\r\n        this.showResultsBusy = true;\r\n\r\n        let $table = jQuery('<table></table>');\r\n        let $header = jQuery('<tr></tr>');\r\n        $table.append($header);\r\n\r\n        this.result.columns.forEach((column) => { $header.append(jQuery(`<th><div>${column}</div></th>`)) });\r\n\r\n        let rows = this.result.values.slice(this.paginationFrom - 1, this.paginationFrom + this.paginationSize - 1);\r\n\r\n        let i = 0;\r\n\r\n        let typeIsBoolean: boolean[] = this.resultColumnTypes.map(t => {\r\n            return ['boolean', 'tinyint(1)'].indexOf(t.toString()) >= 0\r\n        })\r\n\r\n\r\n        let f = () => {\r\n            if (i < rows.length) {\r\n                for (let j = i; j < Math.min(i + 200, rows.length); j++) {\r\n                    let row = rows[j];\r\n                    let $row = jQuery('<tr></tr>');\r\n                    $table.append($row);\r\n                    row.forEach((cell, index) => {\r\n                        let stringValue = cell;\r\n                        if (typeIsBoolean[index]) {\r\n                            stringValue = cell == 1 ? 'true' : 'false';\r\n                        }\r\n                        $row.append(jQuery(`<td>${stringValue}</td>`))\r\n                    });\r\n                }\r\n                i = Math.min(i + 200, rows.length);\r\n                if (i < rows.length) {\r\n                    setTimeout(f, 30);\r\n                } else {\r\n                    $bodyDiv.empty().append($table);\r\n                    this.showResultsBusy = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        f();\r\n\r\n        // rows.forEach((row) => {\r\n        //     let $row = jQuery('<tr></tr>');\r\n        //     $table.append($row);\r\n        //     row.forEach((cell) => {$row.append(jQuery(`<td>${cell}</td>`))});\r\n        // });\r\n\r\n        // bodyDiv.empty().append($table);\r\n\r\n    }\r\n\r\n\r\n    fetchSelectedStatements(): SQLStatement[] {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if (module == null) return null;\r\n\r\n        let monacoEditor = this.main.getMonacoEditor();\r\n        // console.log(monacoEditor.getSelection());\r\n        // console.log(monacoEditor.getPosition());\r\n\r\n        let statements: SQLStatement[] = module.getSQLSTatementsAtSelection(monacoEditor.getSelection());\r\n        for (let statement of statements) {\r\n            statement.sql = monacoEditor.getModel().getValueInRange({\r\n                startColumn: statement.from.column,\r\n                startLineNumber: statement.from.line, endColumn: statement.to.column, endLineNumber: statement.to.line\r\n            });\r\n        }\r\n\r\n        // let sqlStatement = module.getSQLStatementAtPosition(monacoEditor.getPosition());\r\n\r\n        return statements;\r\n\r\n    }\r\n\r\n\r\n\r\n}","\r\nexport class WaitOverlay {\r\n\r\n    visible: boolean = false;\r\n    fadeOutPending: boolean = false;\r\n    $bitteWartenText: JQuery<HTMLElement>;\r\n    $bitteWartenProgress: JQuery<HTMLElement>;\r\n\r\n    constructor(private $waitDiv: JQuery<HTMLElement>){\r\n        $waitDiv.css('display', 'none');\r\n        this.$bitteWartenText = $waitDiv.find('.bitteWartenText');\r\n        this.$bitteWartenProgress = $waitDiv.find('.bitteWartenProgress');\r\n    }\r\n\r\n    show(message: string){\r\n        this.fadeOutPending = false;\r\n        this.$bitteWartenText.html(message);\r\n        this.$bitteWartenProgress.html('');\r\n        if(!this.visible){\r\n            this.visible = true;\r\n            this.$waitDiv.css('display', 'flex');\r\n            this.$waitDiv.hide();\r\n            this.$waitDiv.fadeIn(400);\r\n        }\r\n    }\r\n\r\n    setProgress(message: string){\r\n        this.$bitteWartenProgress.html(message);\r\n    }\r\n\r\n    hide(){\r\n        if(this.visible){\r\n            this.fadeOutPending = true;\r\n            setTimeout(() => {\r\n                if(this.fadeOutPending){\r\n                    this.fadeOutPending = false;\r\n                    this.$waitDiv.fadeOut(200, () => {\r\n                        this.$waitDiv.css('display', 'none');\r\n                    })\r\n                    this.visible = false;        \r\n                }                \r\n            }, 50);\r\n        }\r\n    }\r\n\r\n}","import { MainEmbedded } from \"../../embedded/MainEmbedded.js\";\r\nimport { copyTextToClipboard, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { WDatabase } from \"../../workspace/WDatabase.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\n\r\ntype HistoryPanelEntry = {\r\n    statement: string;\r\n    $div: JQuery<HTMLDivElement>;\r\n    $rollbackButton: JQuery<HTMLDivElement>;\r\n}\r\n\r\nexport class HistoryViewer {\r\n\r\n    panelEntries: HistoryPanelEntry[] = [];\r\n\r\n    constructor(private main: MainBase, private $historyPanel: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    clear() {\r\n        this.$historyPanel.empty();\r\n        this.main.getActionManager().setActive(\"rollback\", false);\r\n        this.panelEntries = [];\r\n    }\r\n\r\n    clearAndShowStatements(statements: string[]) {\r\n        this.clear();\r\n        this.appendStatements(statements);\r\n        this.main.getActionManager().setActive(\"rollback\", statements.length > 0);\r\n    }\r\n\r\n    appendStatements(statements: string[]) {\r\n        statements.forEach(stmt => {\r\n            let panelEntry = this.makePanelEntry(stmt, this.panelEntries.length + 1);\r\n            this.$historyPanel.prepend(panelEntry.$div);\r\n            this.panelEntries.unshift(panelEntry);\r\n        })\r\n\r\n        if(statements.length > 0){\r\n            this.main.getActionManager().setActive(\"rollback\", true);\r\n        }\r\n\r\n        this.makeLastButtonActive();\r\n    }\r\n\r\n    makeLastButtonActive() {\r\n        this.panelEntries.forEach(pe => pe.$rollbackButton.removeClass('jo_active'));\r\n\r\n        if (this.panelEntries.length > 0) {\r\n            this.panelEntries[0].$rollbackButton.addClass('jo_active');\r\n        }\r\n    }\r\n\r\n    makePanelEntry(statement: string, index: number): HistoryPanelEntry {\r\n        let $div = <JQuery<HTMLDivElement>>jQuery(`<div class=\"jo_panelEntry\"></div>`);\r\n        let $index = jQuery(`<div class=\"jo_panelEntryIndex\">${index}.</div>`);\r\n        let $text = jQuery(`<div class=\"jo_panelEntryText\"></div>`);\r\n        let t: string = statement.substring(0, Math.min(400, statement.length));\r\n        if (statement.length > 400) {\r\n            t += \"...\";\r\n        }\r\n        $text.text(t);\r\n        let $copybutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_copy jo_panelEntryCopyButton jo_active jo_button\" title=\"In die Zwischenablage kopieren\"></div>`)\r\n        let $rollbackbutton = <JQuery<HTMLDivElement>>jQuery(`<div class=\"img_undo jo_panelEntryRollbackButton jo_button\" title=\"Rollback\"></div>`)\r\n        let that = this;\r\n\r\n        $copybutton.on('click', () => {\r\n            copyTextToClipboard(statement);\r\n        })\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $rollbackbutton.on(mousePointer + 'up', (ev) => {\r\n            ev.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Abbrechen\",\r\n                callback: () => {\r\n                }\r\n            }, {\r\n                caption: \"Ich bin mir sicher: rollback!\",\r\n                color: \"#ff6060\",\r\n                callback: () => {\r\n                    this.rollback();\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        })\r\n\r\n        $div.append($index, $text, $copybutton, $rollbackbutton);\r\n        return {\r\n            $div: $div,\r\n            statement: statement,\r\n            $rollbackButton: $rollbackbutton\r\n        }\r\n    }\r\n\r\n    rollback() {\r\n        if (this.panelEntries.length == 0) return;\r\n\r\n        if (this.main.isEmbedded()) {\r\n            this.rollbackEmbedded();\r\n            this.main.getActionManager().setActive(\"rollback\", this.panelEntries.length > 0);\r\n        } else {\r\n            let main: Main = <Main>this.main;\r\n            main.networkManager.rollback((error: string, rollbackLocalNeeded: boolean) => {\r\n                if (error == null && rollbackLocalNeeded) {\r\n                    this.rollbackLocal();\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    rollbackLocal(new_version?: number) {\r\n        let database = this.main.getCurrentWorkspace().database;\r\n        if(new_version == null) new_version = database.version - 1;\r\n        \r\n        while(database.version > new_version){\r\n            database.statements.pop();\r\n            database.version--;\r\n        }\r\n        this.main.getDatabaseTool().initializeWorker(database.templateDump, database.statements, () => {\r\n\r\n        }, () => {\r\n            this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n            let lastPanelEntry = this.panelEntries.shift();\r\n            lastPanelEntry.$div.remove();\r\n            this.makeLastButtonActive();\r\n            this.main.getActionManager().setActive(\"rollback\", this.panelEntries.length > 0);\r\n        })\r\n    }\r\n\r\n    rollbackEmbedded() {\r\n        let main: MainEmbedded = <MainEmbedded>this.main;\r\n        main.writeQueryManager.rollback();\r\n\r\n        this.main.getDatabaseTool().initializeWorker(main.initialTemplateDump,\r\n            main.initialStatements.concat(main.writeQueryManager.writtenStatements), () => { },\r\n            () => {\r\n                this.main.getDatabaseExplorer().refreshAfterRetrievingDBStructure();\r\n                let lastPanelEntry = this.panelEntries.shift();\r\n                lastPanelEntry.$div.remove();\r\n                this.makeLastButtonActive();\r\n            })\r\n    }\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ajax, ajaxAsync, csrfToken } from \"./AjaxHelper.js\";\r\nimport { DatabaseChangedSSEMessage as DatabaseChangedPushMessage, GetNewStatementsRequest, GetNewStatementsResponse, RegisterDatabaseSSEListenerRequest as RegisterPushClientForDatabaseRequest } from \"./Data.js\";\r\nimport { PushClientManager } from \"./pushclient/PushClientManager.js\";\r\n\r\nexport class NewNotifier {\r\n\r\n    workspace: Workspace;\r\n    database: WDatabase;\r\n\r\n    constructor(public main: Main) {\r\n\r\n    }\r\n\r\n    async connect(workspace: Workspace) {\r\n\r\n        if(this.workspace != null){\r\n            let unregisterRequest: RegisterPushClientForDatabaseRequest = { workspaceId: this.workspace.id, registerOrUnregister: \"unregister\" }\r\n            await ajaxAsync(\"servlet/registerPushClientForDatabase\", unregisterRequest);\r\n        }\r\n\r\n        this.workspace = workspace;\r\n        \r\n        if(workspace == null){\r\n            PushClientManager.unsubscribe(\"onOpen\");\r\n            return;\r\n        } \r\n        \r\n        this.database = workspace.database;\r\n\r\n        let request: RegisterPushClientForDatabaseRequest = { workspaceId: workspace.id, registerOrUnregister: \"register\" }\r\n        ajaxAsync(\"servlet/registerPushClientForDatabase\", request);\r\n\r\n        PushClientManager.subscribe(\"broadcastDatabaseChange\", (data: DatabaseChangedPushMessage) => {\r\n            if(data.databaseId == this.workspace.databaseId){\r\n                if (data.rollbackToVersion != null) {\r\n                    this.main.getHistoryViewer().rollbackLocal(data.rollbackToVersion);\r\n                } else {\r\n                    this.executeNewStatements(data.newStatements, data.firstNewStatementIndex, () => {\r\n                        this.getNewStatementsHttp();\r\n                    })\r\n                }\r\n            } else {\r\n                request.registerOrUnregister = \"unregister\";\r\n                ajaxAsync(\"servlet/registerPushClientForDatabase\", request);\r\n                PushClientManager.unsubscribe(\"onOpen\");\r\n            }\r\n        })\r\n\r\n        PushClientManager.subscribe(\"onOpen\", () => {            \r\n            request.registerOrUnregister = \"register\";\r\n            ajaxAsync(\"servlet/registerPushClientForDatabase\", request);\r\n        })\r\n        \r\n\r\n    }\r\n\r\n    executeNewStatements(newStatements: string[], firstNewStatementIndex: number, callbackIfTooFewStatements: () => void, callbackIfDone: () => void = () => { }, doRefreshDatabaseExplorer: boolean = true) {\r\n        if (this.database == null) return;\r\n        let that = this;\r\n        let delta = firstNewStatementIndex - (this.database.version + 1);\r\n        if (delta > 0) {\r\n            callbackIfTooFewStatements();\r\n            callbackIfDone();\r\n            return;\r\n        } else {\r\n            if (delta < 0) {\r\n                newStatements.splice(0, -delta);\r\n                firstNewStatementIndex -= delta;\r\n            }\r\n            let statements = newStatements;\r\n            if (statements.length > 0) {\r\n                this.main.resultsetPresenter.executeStatementsString(statements, 0, () => {\r\n                    that.main.getHistoryViewer().appendStatements(statements);\r\n                    that.database.statements = that.database.statements.concat(statements)\r\n                    that.database.version = firstNewStatementIndex + newStatements.length - 1;\r\n                    if (doRefreshDatabaseExplorer) {\r\n                        that.main.databaseExplorer.refresh();\r\n                    }\r\n                    callbackIfDone();\r\n                })\r\n            } else {\r\n                callbackIfDone();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getNewStatementsHttp() {\r\n        let that = this;\r\n        if (this.workspace == null || this.database == null) return;\r\n\r\n        let request: GetNewStatementsRequest = {\r\n            workspaceId: this.workspace.id,\r\n            version_before: this.workspace.database.version\r\n        }\r\n\r\n        ajax('getNewStatements', request, (response: GetNewStatementsResponse) => {\r\n\r\n            if(response.rollbackToVersion != null){\r\n                that.main.getHistoryViewer().rollbackLocal(response.rollbackToVersion);\r\n            } else {\r\n                that.executeNewStatements(response.newStatements, response.firstNewStatementIndex, () => {\r\n                    that.getNewStatementsHttp();\r\n                })\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { MainBase } from \"./MainBase.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { DatabaseExplorer } from \"./gui/DatabaseExplorer.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ResultsetPresenter } from \"./gui/ResultsetPresenter.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { WaitOverlay } from \"./gui/WaitOverlay.js\";\r\nimport { HistoryViewer } from \"./gui/HistoryViewer.js\";\r\n\r\nimport { NewNotifier } from \"../communication/NewNotifier.js\";\r\n\r\nexport class Main implements MainBase {\r\n    isEmbedded(): boolean {\r\n        return false;\r\n    }\r\n\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    getDatabaseTool(): DatabaseTool {\r\n        return this.databaseTool;\r\n    }\r\n\r\n    getDatabaseExplorer():DatabaseExplorer {\r\n        return this.databaseExplorer;\r\n    }\r\n\r\n    getResultsetPresenter(): ResultsetPresenter {\r\n        return this.resultsetPresenter;\r\n    }\r\n\r\n    getWaitOverlay(): WaitOverlay {\r\n        return this.waitOverlay;\r\n    }\r\n\r\n    getHistoryViewer(): HistoryViewer {\r\n        return this.historyViewer;\r\n    }\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    databaseTool: DatabaseTool;\r\n\r\n    databaseExplorer: DatabaseExplorer;\r\n\r\n    resultsetPresenter: ResultsetPresenter;\r\n\r\n    notifier: NewNotifier;\r\n\r\n    waitOverlay: WaitOverlay = new WaitOverlay(jQuery('.bitteWarten'));\r\n    historyViewer: HistoryViewer = new HistoryViewer(this, jQuery('.jo_historyTab'));\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n\r\n        this.login = new Login(this);\r\n        this.login.initGUI();\r\n\r\n        this.databaseTool = new DatabaseTool(this);\r\n        this.databaseExplorer = new DatabaseExplorer(this, jQuery(\".jo_db_tree\"));\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n        new ProgramControlButtons(this, jQuery('#controls'));\r\n\r\n        this.resultsetPresenter = new ResultsetPresenter(this, jQuery('.jo_bottomdiv-inner'));\r\n\r\n        this.notifier = new NewNotifier(this);\r\n\r\n    }\r\n\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '450px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 450 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n            }\r\n            \r\n        });\r\n\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        let currentWorkspace: Workspace = null;\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id && !ws.isFolder) {\r\n                currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (currentWorkspace == null && this.workspaceList.length > 0) {\r\n            for(let ws of this.workspaceList){\r\n                if(!ws.isFolder){\r\n                    currentWorkspace = this.workspaceList[0];\r\n                    \r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(currentWorkspace, null, true);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newDatabaseHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.main.getResultsetPresenter().showErrorDecorations([]);\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\"));\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n    }\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        jQuery('.jo_homeworkTabheading').trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        jQuery('.jo_tabheadings').children().first().trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n\r\n}","export class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        this.$sliderDiv.on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(\"mousemove.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider\", () => {\r\n                jQuery(document).off(\"mousemove.slider\");\r\n                jQuery(document).off(\"mouseup.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        let $filesDiv = $fileListDiv.parent();\r\n        let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n        $filesDiv.append($addButton);\r\n\r\n        $addButton.on(\"click\", () => {\r\n\r\n            let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"sql\" });\r\n            let fileData = this.addModule(module);\r\n\r\n            this.renameElement(fileData, () => {\r\n                // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                if (that.currentFile != fileData) {\r\n                    that.selectFile(fileData);\r\n                }\r\n            });\r\n        });\r\n\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"sql\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv,\r\n            isFolder: false,\r\n            path: []\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"sql\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    constructor(private databaseIdentifier: string){\r\n\r\n    }\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(this.databaseIdentifier, 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStoreScripts = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n                objectStoreScripts.transaction.oncomplete = function(event) {}\r\n\r\n                let objectStoreDatabases = that.db.createObjectStore(\"databases\", { keyPath: \"databaseId\", autoIncrement: false});\r\n                objectStoreScripts.transaction.oncomplete = function(event) {}\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public writeDatabase(databaseID: string, database: string){\r\n\r\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\r\n\r\n        databaseObjectStore.put({\r\n            databaseId: databaseID,\r\n            database: database\r\n        });\r\n\r\n    }\r\n\r\n    public removeDatabase(databaseId: string){\r\n\r\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\r\n\r\n        databaseObjectStore.delete(databaseId);\r\n\r\n    }\r\n\r\n\r\n    public getDatabase(databaseId: string, callback: (database: string) => void){\r\n\r\n        let databaseObjectStore = this.db.transaction(\"databases\", \"readwrite\").objectStore(\"databases\");\r\n\r\n        let request = databaseObjectStore.get(databaseId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.database);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { SQLStatement } from \"../compiler/parser/Parser.js\";\r\nimport { WriteQueryListener } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n\r\nexport class WriteQueryManager implements WriteQueryListener {\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n    databaseTool: DatabaseTool;\r\n\r\n    statementsToExecute: string[] = [];\r\n\r\n    writtenStatements: string[] = [];\r\n\r\n    statementsToWrite: string[] = [];\r\n\r\n\r\n    constructor(private main: MainEmbedded, private databaseIdentifier: string) {\r\n\r\n    }\r\n\r\n    indexedDBReady(indexedDB: EmbeddedIndexedDB) {\r\n        this.indexedDB = indexedDB;\r\n        this.indexedDB.getDatabase(this.databaseIdentifier, (db: string) => {\r\n            if (db != null) {\r\n                this.writtenStatements = JSON.parse(db);\r\n                this.statementsToExecute = this.writtenStatements.slice();\r\n\r\n                this.main.historyViewer.clear();\r\n                this.main.historyViewer.appendStatements(this.statementsToExecute);\r\n\r\n                this.executeStatements();\r\n                this.writeStatementsIfNecessary();\r\n            }\r\n        })\r\n    }\r\n\r\n    reset() {\r\n        this.statementsToWrite = [];\r\n        this.writtenStatements = [];\r\n        this.statementsToExecute = [];\r\n        this.main.historyViewer.clear();\r\n        this.forceWriteStatements();\r\n    }\r\n\r\n    writeStatementsIfNecessary() {\r\n        if (this.indexedDB != null && this.statementsToWrite.length > 0) {\r\n            this.forceWriteStatements();\r\n        }\r\n    }\r\n\r\n    forceWriteStatements() {\r\n        this.writtenStatements = this.writtenStatements.concat(this.statementsToWrite);\r\n        this.statementsToWrite = [];\r\n        this.indexedDB.writeDatabase(this.databaseIdentifier, JSON.stringify(this.writtenStatements));\r\n    }\r\n\r\n    atLeastOneExecuted: boolean = false;\r\n    count: number;\r\n    executeStatements() {\r\n        if (this.databaseTool != null && this.statementsToExecute.length > 0) {\r\n            if (!this.atLeastOneExecuted) {\r\n                this.main.$databaseResetButton.fadeIn(200);\r\n                this.count = this.statementsToExecute.length;\r\n                this.main.waitOverlay.show(\"Schreibe lokale Datenbankänderungen ...\");\r\n            }\r\n            this.main.waitOverlay.setProgress(Math.round(100 * (1 - this.statementsToExecute.length / this.count)) + \" %\")\r\n            let statement = this.statementsToExecute.shift();\r\n            this.atLeastOneExecuted = true;\r\n            this.databaseTool.executeQuery(statement, () => { this.executeStatements() }, () => { this.executeStatements() });\r\n        } else {\r\n            if (this.atLeastOneExecuted) {\r\n                this.main.databaseExplorer.refresh();\r\n                this.atLeastOneExecuted = false;\r\n                this.main.waitOverlay.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    notify(statements: SQLStatement[]): void {\r\n        this.main.$databaseResetButton.fadeIn(200);\r\n        let statementsSql = statements.map(stmt => stmt.sqlCleaned == null ? stmt.sql : stmt.sqlCleaned);\r\n        this.statementsToWrite = this.statementsToWrite.concat(statementsSql);\r\n        this.main.historyViewer.appendStatements(statementsSql);\r\n        this.writeStatementsIfNecessary();\r\n    }\r\n\r\n    databaseReady(dbTool: DatabaseTool) {\r\n        this.databaseTool = dbTool;\r\n        this.executeStatements();\r\n    }\r\n\r\n    rollback() {\r\n        this.writeStatementsIfNecessary();\r\n        this.writtenStatements.pop();\r\n        this.forceWriteStatements();\r\n    }\r\n\r\n\r\n\r\n}","import { csrfToken } from \"../communication/AjaxHelper.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { DatabaseTool } from \"./DatabaseTools.js\";\r\nimport { MySqlImporter } from \"./MySqlImporter.js\";\r\n\r\n\r\nexport type LoadableDatabase = {\r\n    binDump?: Uint8Array,\r\n    statements?: string[]\r\n}\r\n\r\nexport class DatabaseFetcher {\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    public async load(url: string): Promise<LoadableDatabase> {\r\n        let urlWithoutProtocol = url.replace(\"https://\", \"\")\r\n            .replace(\"http://\", \"\").toLocaleLowerCase();\r\n\r\n        let urlLowerCase = urlWithoutProtocol.toLocaleLowerCase();\r\n\r\n        let templateDump: Uint8Array = await this.fetchTemplateFromCache(urlWithoutProtocol);\r\n        if (templateDump != null) {\r\n            if (DatabaseTool.getDumpType(templateDump) == \"binaryCompressed\") {\r\n                // @ts-ignore\r\n                templateDump = pako.inflate(templateDump);\r\n            }\r\n            return { binDump: templateDump }\r\n        }\r\n\r\n        let db: LoadableDatabase;\r\n        if (urlLowerCase.endsWith(\".sqlite\")) {\r\n            db = await this.loadSqLiteDump(url, urlWithoutProtocol);\r\n        } else if (urlLowerCase.endsWith(\".zip\") || urlLowerCase.endsWith(\".sql\")) {\r\n            db = await this.loadMySql(url, urlWithoutProtocol);\r\n        }\r\n\r\n        this.saveDatabaseToCache(urlWithoutProtocol, db.binDump);\r\n\r\n        return db;\r\n\r\n    }\r\n\r\n    loadMySql(url: string, urlWithoutProtocol: string): LoadableDatabase | PromiseLike<LoadableDatabase> {\r\n        let mySqlImporter = new MySqlImporter(this.main);\r\n        return mySqlImporter.loadFromUrl(url);\r\n    }\r\n\r\n    async loadSqLiteDump(url: string, urlWithoutProtocol: string): Promise<LoadableDatabase> {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            jQuery.ajax({\r\n                type: 'GET',\r\n                async: true,\r\n                url: url,\r\n                xhrFields: { responseType: 'arraybuffer' },\r\n                success: function (response: any) {\r\n                    let db = new Uint8Array(response);\r\n                    // @ts-ignore\r\n                    if (DatabaseTool.getDumpType(db) == \"binaryCompressed\") db = pako.inflate(db);\r\n                    resolve({ binDump: db });\r\n                },\r\n                error: function (jqXHR, message) {\r\n                    reject(message);\r\n                }\r\n            });\r\n\r\n        })\r\n\r\n    }\r\n\r\n    cutSqlToStatements(sql: string): string[] {\r\n        sql = sql.replace(/\\r\\n/g, \"\\n\");\r\n\r\n        let statements: string[] = [];\r\n        if (sql.indexOf(\"~@~\") >= 0) {\r\n            statements = sql.split(\"~@~\");\r\n        } else {\r\n            statements = sql.split(\";\\n\");\r\n        }\r\n        return statements;\r\n    }\r\n\r\n\r\n    async fetchTemplateFromCache(databaseIdentifier: string): Promise<Uint8Array> {\r\n        if (databaseIdentifier == null) { return null; }\r\n\r\n        if (!this.cacheAvailable()) return (null);\r\n\r\n        let cache = await caches.open('my-cache');\r\n\r\n        let value = await cache.match(databaseIdentifier);\r\n\r\n        if(value == null) return null;\r\n\r\n        let buffer = await value.arrayBuffer();\r\n\r\n        return new Uint8Array(buffer);\r\n\r\n    }\r\n\r\n    async saveDatabaseToCache(databaseIdentifier: string, templateDump: Uint8Array | string) {\r\n        if (!this.cacheAvailable()) return;\r\n\r\n        let cache = await caches.open('my-cache');\r\n\r\n        cache.put(databaseIdentifier, new Response(templateDump));\r\n    }\r\n\r\n    cacheAvailable(): boolean {\r\n        return 'caches' in self;\r\n    }\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { DatabaseTool } from \"../tools/DatabaseTools.js\";\r\nimport { DatabaseExplorer } from \"../main/gui/DatabaseExplorer.js\";\r\nimport { ResultsetPresenter } from \"../main/gui/ResultsetPresenter.js\";\r\nimport { WaitOverlay } from \"../main/gui/WaitOverlay.js\";\r\nimport { WriteQueryManager } from \"./WriteQueryManager.js\";\r\nimport { DatabaseFetcher } from \"../tools/DatabaseLoader.js\";\r\nimport { DatabaseImportExport } from \"../tools/DatabaseImportExport.js\";\r\nimport { HistoryViewer } from \"../main/gui/HistoryViewer.js\";\r\nimport { WDatabase } from \"../workspace/WDatabase.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withOutput?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    id?: string,\r\n    databaseURL?: string\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n    isEmbedded(): boolean { return true; }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    getDatabaseTool(): DatabaseTool {\r\n        return this.databaseTool;\r\n    }\r\n\r\n    getDatabaseExplorer(): DatabaseExplorer {\r\n        return this.databaseExplorer;\r\n    }\r\n\r\n    getResultsetPresenter(): ResultsetPresenter {\r\n        return this.resultsetPresenter;\r\n    }\r\n\r\n    getWaitOverlay(): WaitOverlay {\r\n        return this.waitOverlay;\r\n    }\r\n\r\n    getHistoryViewer(): HistoryViewer {\r\n        return this.historyViewer;\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    $dbTreeDiv: JQuery<HTMLElement>;\r\n\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $codeResetButton: JQuery<HTMLElement>;\r\n    $databaseResetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    databaseTool: DatabaseTool;\r\n\r\n    databaseExplorer: DatabaseExplorer;\r\n\r\n    waitOverlay: WaitOverlay;\r\n\r\n    resultsetPresenter: ResultsetPresenter;\r\n\r\n    writeQueryManager: WriteQueryManager;\r\n\r\n    historyViewer: HistoryViewer;\r\n\r\n    initialTemplateDump: Uint8Array;\r\n    initialStatements: string[];\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.writeQueryManager = new WriteQueryManager(this, (this.config.databaseURL == null ? \"Empty database\" : this.config.databaseURL) + this.config.id);\r\n\r\n        this.initGUI($div);\r\n\r\n\r\n        this.databaseExplorer = new DatabaseExplorer(this, this.$dbTreeDiv);\r\n        this.databaseTool = new DatabaseTool(this);\r\n        if (this.config.databaseURL != null) {\r\n            new DatabaseFetcher(this).load(this.config.databaseURL).then((loadableDb) => {\r\n                this.initialTemplateDump = loadableDb.binDump;\r\n                this.initialStatements = loadableDb.statements == null ? [] : loadableDb.statements;\r\n                this.initDatabase();\r\n            }).catch((error: string)=>{\r\n                alert('Fehler beim Landen der Datenbank: ' + error)\r\n            })\r\n        } else {\r\n            this.initDatabase();\r\n        }\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initDatabase(){\r\n        this.resetDatabase(() => {\r\n            this.initScripts();\r\n\r\n            this.indexedDB = new EmbeddedIndexedDB(\"SQL-IDE\");\r\n            this.indexedDB.open(() => {\r\n\r\n                if (this.config.id != null) {\r\n                    this.writeQueryManager.indexedDBReady(this.indexedDB);\r\n                    this.readScripts();\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    resetDatabase(callback: () => void) {\r\n        this.databaseTool.initializeWorker(this.initialTemplateDump, this.initialStatements, () => { }, () => {\r\n            this.writeQueryManager.databaseReady(this.databaseTool);\r\n            this.databaseExplorer.refreshAfterRetrievingDBStructure();\r\n            callback();\r\n        })\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"sql-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if (this.config.withFileList == null) this.config.withFileList = false;\r\n        if (this.config.withOutput == null) this.config.withOutput = true;\r\n        if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        if (this.config.withBottomPanel == null) this.config.withBottomPanel = true;\r\n\r\n        if (!(this.config.withOutput || this.config.withFileList || this.config.withErrorList)) {\r\n            this.config.withBottomPanel = false;\r\n        }\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            this.config.withFileList = false;\r\n            this.config.withOutput = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n        if(this.config.databaseURL != null){\r\n            ['http:', 'https:'].forEach(protocol => {\r\n                if(this.config.databaseURL.startsWith(protocol) && !this.config.databaseURL.startsWith(protocol + \"://\")){\r\n                    this.config.databaseURL = this.config.databaseURL.replace(protocol, protocol + \"//\");\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"sql\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$codeResetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"sql\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            file_type: 11\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n\r\n        // let $topDiv = jQuery('<div class=\"joe_topDiv\"></div>');\r\n        // $div.append($topDiv);\r\n        $div.append($centerDiv);\r\n\r\n        let $waitDiv = this.makeWaitDiv();\r\n        $div.append($waitDiv);\r\n        this.waitOverlay = new WaitOverlay($waitDiv);\r\n\r\n        let $codeResetModalWindow = this.makeCodeResetModalWindow($div);\r\n        let $databaseResetModalWindow = this.makeDatabaseResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$codeResetButton = jQuery('<div class=\"joe_codeResetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n        this.$databaseResetButton = jQuery('<div class=\"joe_databaseResetButton jo_button jo_active\" title=\"Datenbank auf Ausgangszustand zurücksetzen\">Datenbank Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$databaseResetButton);\r\n        this.$monacoDiv.append(this.$codeResetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        // $topDiv.append($editorDiv);\r\n\r\n        this.$codeResetButton.hide();\r\n\r\n        this.$codeResetButton.on(\"click\", () => { $codeResetModalWindow.show(); })\r\n\r\n        this.$databaseResetButton.hide();\r\n\r\n        this.$databaseResetButton.on(\"click\", () => { $databaseResetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n\r\n        let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n        this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n        $bottomDiv.append($bottomDivInner);\r\n        if (this.config.withFileList) {\r\n            let $filesDiv = this.makeFilesDiv();\r\n            $bottomDiv.prepend($filesDiv);\r\n            new EmbeddedSlider($filesDiv, false, false, () => { });\r\n        }\r\n        makeTabs($bottomDivInner);\r\n        $div.append($bottomDiv);\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        $centerDiv.append($editorDiv, $bottomDiv)\r\n        $div.append($rightDiv);\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\"></div>');\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-right: 10px\"></div>');\r\n\r\n        $controlsDiv.append($infoButton);\r\n\r\n        this.$rightDivInner.append($rightSideContainer);\r\n\r\n        new EmbeddedSlider($rightDiv, true, false, () => {\r\n            this.editor.editor.layout();\r\n        }, $centerDiv);\r\n\r\n        new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n\r\n        $infoButton.on('mouseup', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://learnj.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n\r\n        let $buttonOpen = jQuery('<label type=\"file\" class=\"img_open-file jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Datenbank-Dump aus Datei laden\"><input type=\"file\" style=\"display:none\"></label>');\r\n\r\n        let that = this;\r\n\r\n        let $openInputButton = $buttonOpen.find('input');\r\n\r\n        $openInputButton.on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            that.loadDatabaseFromFile(files[0]).then(() => {\r\n                $openInputButton.val(null)\r\n            })\r\n        })\r\n\r\n        let $buttonSave = jQuery('<div class=\"img_save-dark jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Datenbank-Dump in Datei speichern\"></div>');\r\n\r\n\r\n        $buttonSave.on('click', () => { that.saveDatabaseToFile() });\r\n\r\n        $controlsDiv.append($buttonOpen, $buttonSave);\r\n\r\n        this.resultsetPresenter = new ResultsetPresenter(this, $bottomDivInner);\r\n        this.resultsetPresenter.addWriteQueryListener(this.writeQueryManager);\r\n\r\n\r\n        new ProgramControlButtons(this, $controlsDiv);\r\n\r\n        this.historyViewer = new HistoryViewer(this, $div.find('.jo_historyTab'));\r\n\r\n        setTimeout(() => {\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n\r\n    }\r\n\r\n    saveDatabaseToFile() {\r\n        new DatabaseImportExport().saveToFile(this.databaseTool);\r\n    }\r\n\r\n    async loadDatabaseFromFile(file: globalThis.File) {\r\n        let dbImportExport = new DatabaseImportExport();\r\n        let db = await dbImportExport.loadFromFile(file, this);\r\n        if (db == null) {\r\n            alert('Es ist ein Fehler beim Import aufgetreten.');\r\n            return;\r\n        } else {\r\n            this.databaseTool.initializeWorker(db.binDump, [], (errors) => {\r\n                if (errors.length > 0) {\r\n                    alert('Es sind Fehler beim Import aufgetreten. Ausführliche Fehlermeldungen sehen Sie in der Konsole (F12).')\r\n                    console.log(errors)\r\n                }\r\n            }, () => {\r\n                this.databaseExplorer.refreshAfterRetrievingDBStructure()\r\n            })\r\n        }\r\n        return;\r\n    }\r\n\r\n    makeWaitDiv(): JQuery<HTMLElement> {\r\n\r\n        //@ts-ignore\r\n        let url = (window.javaOnlineDir == null ? '' : window.javaOnlineDir) + 'assets/graphics/grid.svg';\r\n\r\n        let waitHtml = `\r\n        <div class=\"bitteWarten\">\r\n        <div style=\"margin-bottom: 30px\">\r\n            <div class=\"bitteWartenText\" style=\"font-size: 20px\"></div>\r\n        </div>\r\n        <div>\r\n            <img src=\"${url}\" alt=\"\" style=\"height: 40px\">\r\n        </div>\r\n        <div class=\"bitteWartenProgress\" style=\"font-size: 20px\"></div>\r\n        </div>\r\n        `;\r\n        return jQuery(waitHtml);\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        $parent.find(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        $parent.find(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$codeResetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    makeDatabaseResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_databaseResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll die Datenbank wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle bisher ausgeführten Anweisungen (siehe Tab Write History) werden dann rückgängig gemacht.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_databaseResetModalButtons\">\r\n            <div class=\"joe_databaseResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_databaseResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        $parent.find(\".joe_databaseResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        $parent.find(\".joe_databaseResetModalOK\").on(\"click\", () => {\r\n\r\n            $window.hide();\r\n            this.resetDatabase(() => {\r\n                this.writeQueryManager.reset();\r\n            });\r\n\r\n            this.$databaseResetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Dateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling && this.getDatabaseTool().databaseStructure != null) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                    bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.version++;\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$codeResetButton.fadeIn(1000);\r\n        }\r\n    }\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thLeftSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading joe_controlsTabheading\"></div>');\r\n\r\n        $thLeftSide.append($buttonDiv);\r\n        $tabheadings.append($thLeftSide);\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n        if (this.config.withOutput) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading jo_resultTabheading\" data-target=\"jo_resultTab\" style=\"line-height: 24px\">Ausgabe</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        // let $thRuntimeError = jQuery('<div class=\"jo_tabheading jo_runtimeerrorsTabheading\" data-target=\"jo_runtimeerrorsTab\" style=\"line-height: 24px\">DB-Fehler</div>');\r\n        // $tabheadings.append($thRuntimeError);\r\n\r\n        let $thHistory = jQuery('<div class=\"jo_tabheading jo_historyTabheading\" data-target=\"jo_historyTab\" style=\"line-height: 24px\">History</div>');\r\n        $tabheadings.append($thHistory);\r\n\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading joe_paginationHeading\"><div class=\"jo_pagination\"></div></div>');\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withOutput) {\r\n            let $tabPCode = jQuery(`<div class=\"jo_editorFontSize jo_resultTab\">\r\n            <div class=\"jo_result-inner\">\r\n                <div class=\"jo_result-header\"></div>\r\n                <div class=\"jo_scrollable jo_result-body\"></div>\r\n            </div>\r\n            </div>\r\n    `);\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        // let $tabRtErrors = jQuery('<div class=\"jo_scrollable jo_runtimeerrorsTab\"></div>');\r\n        // $tabs.append($tabRtErrors);\r\n\r\n        let $tabHistory = jQuery('<div class=\"jo_scrollable jo_historyTab\"></div>');\r\n        $tabs.append($tabHistory);\r\n\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_db_tree\" style=\"line-height: 24px\">DB (Baum)</div>');\r\n        // let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_db_list\" style=\"line-height: 24px\">DB (Liste)</div>');\r\n        $tabheadings.append($thRun, //$thVariables\r\n        );\r\n        this.$rightDivInner.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n        // let $vd = jQuery('<div class=\"jo_tab jo_scrollable jo_editorFontSize jo_db_list\">DB-Liste</div>');\r\n\r\n        this.$dbTreeDiv = jQuery(`<div class=\"jo_tab jo_scrollable jo_editorFontSize jo_active jo_db_tree\">DB-Baum</div>`);\r\n\r\n        $tabs.append(this.$dbTreeDiv //, $vd\r\n        );\r\n        this.$rightDivInner.append($tabs);\r\n\r\n        makeTabs($rightDiv);\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Formatter } from \"../main/gui/Formatter.js\";\r\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\nimport '/include/css/editor.css';\r\nimport '/include/css/bottomdiv.css';\r\nimport '/include/css/run.css';\r\nimport '/include/css/icons.css';\r\nimport '/include/css/databaseExplorer.css';\r\nimport '/include/css/embedded.css';\r\n\r\n\r\n// declare const require: any;\r\n\r\nexport type ScriptType = \"sql\" | \"hint\";\r\n\r\nexport type JOScript = {\r\n    type: ScriptType;\r\n    title: string;\r\n    text: string;\r\n}\r\n\r\nexport class EmbeddedStarter {\r\n\r\n\r\n    startupComplete = 2;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    mainEmbeddedList: MainEmbedded[] = [];\r\n\r\n    initGUI() {\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.themeManager = new ThemeManager();\r\n    }\r\n\r\n    initEditor() {\r\n        new Formatter().init();\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    start() {\r\n\r\n        this.initJavaOnlineDivs();\r\n\r\n    }\r\n\r\n    initJavaOnlineDivs() {\r\n        \r\n        jQuery('.sql-online').each((index: number, element: HTMLElement) => {\r\n            let $div = jQuery(element);\r\n            let scriptList: JOScript[] = [];\r\n            $div.find('script').each((index: number, element: HTMLElement) => {\r\n                let $script = jQuery(element);\r\n                let type: ScriptType = \"sql\";\r\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\r\n                let script: JOScript = {\r\n                    type: type,\r\n                    title: $script.attr('title'),\r\n                    text: $script.text().trim()\r\n                };\r\n                scriptList.push(script);\r\n            });\r\n\r\n            this.initDiv($div, scriptList);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\r\n\r\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\r\n\r\n    }\r\n\r\n}\r\n\r\njQuery(function () {\r\n\r\n    let embeddedStarter = new EmbeddedStarter();\r\n\r\n    let prefix = \"\";\r\n    let editorPath = \"lib/monaco-editor/dev/vs\"\r\n    //@ts-ignore\r\n    if(window.javaOnlineDir != null){\r\n        //@ts-ignore\r\n        prefix = window.javaOnlineDir;\r\n    }\r\n\r\n    //@ts-ignore\r\n    if(window.monacoEditorPath != null){\r\n        //@ts-ignore\r\n        editorPath = window.monacoEditorPath;\r\n    }\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        embeddedStarter.initEditor();\r\n        embeddedStarter.initGUI();\r\n\r\n    });\r\n\r\n});\r\n"],"names":["TokenType","TokenType2","TokenTypeReadable","specialCharList","keywordList","EscapeSequenceList","endChar","Lexer","__publicField","input","bracketOpen","bracketClosed","tt","openBracket","correspondingBracket","error","char","specialCharToken","line","column","s","text","length","t","tripel","newLength","errorLevel","a","base","charCode","posStart","posEnd","escapeChar","beginChar","hex","lastCharWasNewline","commentStart","i","sign","firstChar","radix","exponent","posExponentStart","exponentString","value","Formatter","model","position","ch","options","token","edits","e","e1","delta","tokenlist","lastNonSpaceToken","indentLevel","tabSize","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","lastTokenWasNewLine","roundBracketsOpen","token1","openedAtLine","nextToken1","nextToken2","lastToken1","lastToken2","lastTokenIsOperator","nextTokenIsOperator","beginNextLine","token2","currentIndentation","il","correctIndentation","nextToken","lowerGeneric","greaterGeneric","tokenBefore","spaces","currentIndex","j","positionFrom","positionTo","numberOfSpaces","ThemeManager","name","theme","root","key","highlightColor","SQLType","_SQLBaseType","parameterDescriptions","checkFunction","outputFunction","canCastToList","ownIndex","baseTypes","tokenType","secondType","resultType","isCommutative","map","type2","bt2","SQLTextEnumType","SQLNumberEnumType","operator","booleanType","value1","value2","SQLBaseType","values","ci","pv","v","tens","SQLDerivedType","baseType","parameterValues","parameters","returnBaseType","result","textTypes","varcharType","charType","textType","tinyTextType","mediumTextType","longTextType","floatTypes","decimalType","vk","nk","numericType","doubleType","realType","floatType","inttypes","numberTypes","intType","integerType","tinyIntType","smallIntType","mediumIntType","bigIntType","timeType","dateType","dateTimeType","timestampType","nullType","numericTypes","timeTypes","numericBinaryOperators","comparisonOperators","characterTypes","booleanOperations","bt","_Parser","m","lastToken","quickFix","skip","invokeSemicolonAngel","uri","expectedValuesArray","expectedTokens","p","op","ret","deltaColumns","tpos","deltaInsideToken","tokenPos","mainProgram","afterLastStatement","semicolonAfterLastStatement","oldPos","errorsBeforeStatement","startPosition","st","hasErrors","beginStatementTokens","firstBadToken","expectSemicolon","retStatements","node","unique","fki","pos0","pos1","kind","modifyColumnInfo","index","first","ifNotExists","identifier","columnIdentifiers","selectStatement","pos2","primaryKeyAlreadyDefined","columnNode","columns","c","uniqueConstraint","hintColumns","hintTables","hints","additionalColumns","praefix","suffix","datatypes","type","constants","constant","identifierPos","mappedIdentifier","alreadySeenKeywords","rightBracketPosition","selectNode","insideListTokens","outerFirst","leftBracketPosition","lv","constantNode","columnListStart","columnListKeywordArray","hasFrom","fromListKeywordArray","dontHint","hintEndPosition","whereKeywordArray","whereStart","groupKeywordArray","groupStart","orderStart","numberOfRows","ln","gbn","tokenTypesAfterGroupBy","obnList","obn","leftSide","rightSide","comesKeywordAs","tokenTypesAfterListEnd","allowAliases","distinct","columnTerm","precedence","left","operators","right","secondOperand","thirdOperand","term","tt1","isStringConstant","identifier1","position1","secondIdentifier","constantTypes","tokenBeforeBracket","listNode","distinctBeforeParameters","commaPositions","pos","parameter","Parser","Column","table","isPrimaryKey","isNullable","defaultValue","isAutoIncrement","cs","regex1","typeMatch1","baseTypeIdentifier","commaSeparatedParameters","Table","ts","tsList","tables","columnStructureToColumnMap","referencedCs","referencedColumn","SymbolTable","parentSymbolTable","databaseStructure","symbol","list","shortestSymbolTableContainingPosition","shortestPosition","st1","symbolTable","symbols","SQLMethodParameter","SQLMethod","isAggregating","returnType","_SQLMethodStore","countMethod","strftimeMethod","parameterType","SQLMethodStore","escapeHtml","unsafe","dateToStringWithoutTime","date","twoDez","z","stringToDate","match","isDate","inputText","dateformat","opera1","opera2","lopera1","lopera2","pdate","dd","mm","yy","ListofDays","lyear","isDateTime","splitStr","dateStr","isTime","timeformat","SymbolResolver","databaseTool","_a","module","statement","astNode","resultTypes","resultTable","joinedTables","c1","whereType","whereSymbolTable","oldColumn","ciPos","createTableNode","thisTable","cn","tosNode","tableList","alias","firstOperand","typeLeft","typeRight","operandType","resultType1","selectTable","tableSymbols","methods","method","isCountMethod","operand","found","methodParameter","operatorString","leftType","pType","element","elementType","tableCompletionTo","insertColumn","selectColumn","valueList","destType","CompilerStatus","CompilerStatus2","Compiler","main","moduleStore","t0","lexer","lexed","parser","symbolResolver","dt","message","_Module","file","path","uriCounter","that","versionId","main1","fromPosition","toPosition","hintKeywords","chList","sel","selStart","selEnd","stmt","b","bestCh","bestRangeLength","rangeLength","f","f1","workspace","ec","el","positionList","positionsOnLine","bestFoundPosition","e2","level1","level2","Module","ModuleStore","module_id","ms","mo","dirty","includeSystemModules","excludedModuleName","moduleName","ActionManager","$mainElement","$element","event","actionIdentifier","ae","keys","action","button","active","buttons","actionEntries","actionEntry","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","mousePointer","$input","ev","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","caption","$item","$link","leftRight","xp","topBottom","yp","css","makeTabs","tabDiv","headings","tabs","target","tab","makeDiv","id","klass","div","jo_mouseDetected","checkIfMousePresent","animateToTransparent","cssProperty","startColorRgb","duration","colorPraefix","animate","downloadFile","obj","filename","isBlob","blob","fallbackCopyTextToClipboard","textArea","successful","err","copyTextToClipboard","_PerformanceCollector","url","startTime","pe","request","ajax","PerformanceCollector","csrfToken","successCallback","errorCallback","showNetworkBusy","time","headers","response","jqXHR","statusText","busy","ajaxAsync","data","exception","WDatabase","version","db","CacheManager","databaseId","callback","cache","buffer","templateDump","TemplateUploader","workspace_id","dump","reason","_FileTool","fileData","signature","FileTool","PushClientStrategy","manager","PushClientLongPollingStrategy","timeMs","timeout","silently","PushClientWebsocketStrategy","msg","BasePushClientManager","baseURL","eventType","handler","messages","failedStrategy","oldStrategy","_PushClientManager","PushClientManager","NetworkManager","$updateTimerDiv","forceUpdate","$rect","sendIfNothingIsDirty","wdList","fdList","ws","oldWorkspaces","names","wd","owner_id","published_to","description","klasse","student_ids","callbackAfterSettingWorkspaceActive","statements","cacheManager","template","workspaceId","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","newWorkspaceNames","remoteWorkspace","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","remoteFile","withSort","w","panelElement","DatabaseSettingsDialog","secret","$copyButton","newName","newDescription","database","ownerText","Workspace","withFiles","$buttonDiv","$button","MyCompletionItemProvider","context","resolve","reject","wfc","sw","textUntilPosition","textAfterPosition","completionHint","completionItems","dotMatch","ibMatch","identifierAndBracketAfterCursor","word","replaceWordRange","insertAfterCursorRange","item","textAfterDot","textBeforeDot","rangeToReplace","tableIdentifiers","columnIdentifier","insertText","columList","withTable","_b","snippet","label","tokenList","posMin","posMax","watchDog","posOld","MySignatureHelpProvider","methodCallPositions","methodCallPosition","rightMostPosition","mcp","parameterIndex","cp","signatureInformationList","_MyHoverProvider","editor","selection","errorList","desc","end","begin","MyHoverProvider","MyCodeActionProvider","range","MyReferenceProvider","usagePositions","referencePositions","upInCurrentModule","up","defineVscSQL","conf","language","Helper","targetElement","direction","$helper","to","mainBase","Main","user","helperHistory","flag","Editor","showMinimap","isEmbedded","mouseWheelListener","insertEndOfComment","newLine","newColumn","prevLine","spacesAtBeginningOfLine","fontSizePx","editorfs","factor","dynamic","newEditorFs","ed","lineNumber","decorations","executeActionActive","sqlStatement","classname","createDb1","SQL","arg","erg","WorkerSim","scriptDirectory","SQL1","buff","config","row","done","DatabaseTool","queries","callbackAfterInitializing","callbackAfterRetrievingStructure","errors","querySuccessCallback","queryErrorCallback","queryCount","execQuery","query","results","entries","sql","sql1","types","result1","tableNameToStructureMap","tableName","tableSQL","tableStructure","columnArray","foreignKeyList","size","columnArray1","notNull","dflt_value","enumValues","rs","regEx","columnStructure","fkInfo","foreignKeyInfo","sqliteMagicBytes","zlibMagicByte","StatementCleaner","ast","statementHeader","lines","vline","pkc","uk","fkiString","collate","MySqlImporter","reader","entry","max","lexOutput","tmn","pcn","mci","mcn","fk","tableIdentifier","tableNode","statementCleaner","sqlStatements","dbTool","DatabaseImportExport","ld","ab","NewDatabaseDialog","$templatelist","templatelist","tle","$tle","$templateName","$dropZone","evt","files","$dumpFileInput","createMode","workspaceData","$template","code","tIndex","projectExplorer","accordionElement","isDatabase","dbUncompressed","MainMenu","mainMenu","currentWorkspace","menu","level","noHoverKlass","subMenu","top","_AccordionPanel","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","pathArray","newElement","$collapseAllAction","fixed","enabled","selectedElement","name1","path1","isFolder1","name2","path2","isFolder2","cmp","isFolder","insertIndex","$elements","elementAtIndex","$accordionDiv","externalElement","$listOuter","$ce","$li","targetGrow","element1","expanded","aName","bName","cssClass","$div","expandedCollapsed","pathHtml","$elementAction","$filedragpart","pathIsCollapsed","contextmenuHandler","contextMenuItems","cmi","pressTimer","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","folder","pathStart","pointPos","newText","oldName","oldPath","invokeCallback","scrollIntoView","ae1","pathString","elPath","ps","iconClass","AccordionPanel","Accordion","$html","panel","DistributeToStudentsDialog","classes","$studentList","student","$studentLine","$studentClass","$studentName","filterText","filterTextLowerCase","networkManager","ProjectExplorer","$projectexplorerDiv","successfulNetworkCommunicationCallback","callbackIfSuccessful","cmiList","title","$homeworkButtonDiv","$newWorkspaceAction","dest","droppedElement","dropEffekt","workspaceAccordionElement","moduleList","workspaceList","errorCountMap","errorCount","errorCountS","callbackAfterDatabaseFetched","nonSystemModules","cem","color","RightDiv","$rightDiv","rightdiv_width","$wholeWindow","Sliders","md","dx","dy","sliderknobLeft","sliderknobRight","$editor","width","mewidth","$bottomDiv","height","meheight","$leftPanel","TeacherExplorer","classData","ea","userDataList","ud","classDataList","cd","Dialog","colorStyle","placeholder","$buttonRow","$message","visible","visibility","UserMenu","$userSettingsButton","PasswordChanger","$oldPassword","$newPassword1","$newPassword2","$errorDiv","waitDiv","Login","$loginSpinner","loginHappened","loginRequest","errorMessage","logoutRequest","ViewModeController","$buttonsContainer","am","mode","saveSettings","otherMode","viewModes","viewMode","settings","SemicolonAngel","oldEvidence","currentlyEditedModule","cursorLine","isCurrentModule","editOperations","DatabaseExplorer","$mainDiv","dbstructure","$table","isCollapsed","$columns","image","referencesHtml","autoincrement","$column","$treeSwitch","$columnList","ProgramControlButtons","ResultsetPresenter","listener","hasDDLStatements","hasWriteStatements","sucessfullyExecutedModifyingStatements","new_statements","firstStatementIndex","modifyingStatements","statements_before","new_version","fromIndex","successfullyExecutedModifyingStatements","callback1","laterSelectExists","minimapColors","markers","errorlevel","linesDecorationsClassName","minimapColor","severity","$runtimeErrorsTab","$runtimeErrorsTabHeading","$errorList","$errorLine","$sqlDiv","html","$messageDiv","columnTypes","$resultTabheading","$resultHeader","headerDiv","$bodyDiv","from","waitFunction","$header","rows","typeIsBoolean","$row","cell","stringValue","monacoEditor","WaitOverlay","$waitDiv","HistoryViewer","$historyPanel","panelEntry","$index","$text","$copybutton","$rollbackbutton","rollbackLocalNeeded","NewNotifier","unregisterRequest","newStatements","firstNewStatementIndex","callbackIfTooFewStatements","callbackIfDone","doRefreshDatabaseExplorer","BottomDiv","classdata","workspaces","ErrorManager","borderLeftClass","lightBulbClass","edit","r","$file","$error","locf","$errorDivs","$lineColumn","category","className","HomeworkManager","originalModel","modifiedModel","daysWithModules","dateString","dateWithoutTime","dwm","m1","m2","moduleWithWorkspace","EmbeddedSlider","$container","firstLast","horVert","$otherDiv","otherHeight","newHeight","newOtherHeight","otherWidth","newWidth","newOtherWidth","EmbeddedFileExplorer","$fileListDiv","$filesDiv","$addButton","script","$fileDiv","syntaxMap","md1","str","lang","tokens","idx","env","self","md2","codeMap","uncoloredtext","EmbeddedIndexedDB","databaseIdentifier","objectStoreScripts","scriptId","databaseID","WriteQueryManager","indexedDB","statementsSql","DatabaseFetcher","urlWithoutProtocol","urlLowerCase","MainEmbedded","scriptList","loadableDb","configJson","protocol","modules","scriptListJSon","countDown","oneNotSaved","$centerDiv","$codeResetModalWindow","$databaseResetModalWindow","$editorDiv","$bracketErrorDiv","$controlsDiv","$bottomDivInner","$rightSideContainer","$infoButton","$buttonOpen","$openInputButton","$buttonSave","waitHtml","$parent","$window","$filesHeader","$tabheadings","$thLeftSide","$thErrors","$thPCode","$thHistory","$thRightSide","$tabs","$tabError","$tabPCode","$tabHistory","$thRun","EmbeddedStarter","$script","embeddedStarter","prefix","editorPath"],"mappings":"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"}